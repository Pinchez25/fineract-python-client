# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.command_wrapper import CommandWrapper

class TestCommandWrapper(unittest.TestCase):
    """CommandWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommandWrapper:
        """Test CommandWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommandWrapper`
        """
        model = CommandWrapper()
        if include_optional:
            return CommandWrapper(
                action_name = '',
                cache_resource = True,
                client_id = 56,
                command_id = 56,
                create = True,
                create_datatable = True,
                credit_bureau_id = 56,
                currency_resource = True,
                datatable_resource = True,
                delete = True,
                delete_datatable = True,
                delete_multiple = True,
                delete_one_to_one = True,
                delete_operation = True,
                entity_id = 56,
                entity_name = '',
                full_fil_survey = True,
                group_id = 56,
                href = '',
                idempotency_key = '',
                job_name = '',
                var_json = '',
                loan_disburse_detail_resource = True,
                loan_id = 56,
                note_resource = True,
                office_id = 56,
                organisation_credit_bureau_id = 56,
                password_preferences_resource = True,
                permission_resource = True,
                product_id = 56,
                register_datatable = True,
                register_survey = True,
                savings_id = 56,
                subentity_id = 56,
                survey_resource = True,
                task_permission_name = '',
                template_id = 56,
                transaction_id = '',
                update = True,
                update_datatable = True,
                update_disbursement_date = True,
                update_multiple = True,
                update_one_to_one = True,
                update_operation = True,
                user_resource = True,
                working_days_resource = True
            )
        else:
            return CommandWrapper(
        )
        """

    def testCommandWrapper(self):
        """Test CommandWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
