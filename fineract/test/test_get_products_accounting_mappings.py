# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_products_accounting_mappings import GetProductsAccountingMappings

class TestGetProductsAccountingMappings(unittest.TestCase):
    """GetProductsAccountingMappings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetProductsAccountingMappings:
        """Test GetProductsAccountingMappings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetProductsAccountingMappings`
        """
        model = GetProductsAccountingMappings()
        if include_optional:
            return GetProductsAccountingMappings(
                income_from_fee_account_id = fineract_client.models.get_income_from_fee_account_id.GetIncomeFromFeeAccountId(
                    gl_code = 'INCOME_OY1461237869836', 
                    id = 14, 
                    name = 'ACCOUNT_NAME_1FJBQ', ),
                share_equity_id = fineract_client.models.get_share_equity_id.GetShareEquityId(
                    gl_code = 'EQUITY1', 
                    id = 66, 
                    name = 'Equity Account', ),
                share_reference_id = fineract_client.models.get_share_reference_id.GetShareReferenceId(
                    gl_code = 'ASSET_ED1461237837829', 
                    id = 1, 
                    name = 'ACCOUNT_NAME_1FJBQ', ),
                share_suspense_id = fineract_client.models.get_share_suspense_id.GetShareSuspenseId(
                    gl_code = 'LIABILITY_MA1461237860198', 
                    id = 8, 
                    name = 'ACCOUNT_NAME_1FJBQ', )
            )
        else:
            return GetProductsAccountingMappings(
        )
        """

    def testGetProductsAccountingMappings(self):
        """Test GetProductsAccountingMappings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
