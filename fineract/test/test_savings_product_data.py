# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.savings_product_data import SavingsProductData

class TestSavingsProductData(unittest.TestCase):
    """SavingsProductData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SavingsProductData:
        """Test SavingsProductData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SavingsProductData`
        """
        model = SavingsProductData()
        if include_optional:
            return SavingsProductData(
                accrual_based_accounting_enabled = True,
                allow_overdraft = True,
                cash_based_accounting_enabled = True,
                currency = fineract_client.models.currency_data.CurrencyData(
                    code = '', 
                    decimal_places = 56, 
                    display_label = '', 
                    display_symbol = '', 
                    in_multiples_of = 56, 
                    name = '', 
                    name_code = '', ),
                deposit_account_type = '',
                id = 56,
                interest_calculation_days_in_year_type = fineract_client.models.enum_option_data.EnumOptionData(
                    code = '', 
                    id = 56, 
                    value = '', ),
                interest_calculation_type = fineract_client.models.enum_option_data.EnumOptionData(
                    code = '', 
                    id = 56, 
                    value = '', ),
                interest_compounding_period_type = fineract_client.models.enum_option_data.EnumOptionData(
                    code = '', 
                    id = 56, 
                    value = '', ),
                interest_posting_period_type = fineract_client.models.enum_option_data.EnumOptionData(
                    code = '', 
                    id = 56, 
                    value = '', ),
                lockin_period_frequency = 56,
                lockin_period_frequency_type = fineract_client.models.enum_option_data.EnumOptionData(
                    code = '', 
                    id = 56, 
                    value = '', ),
                max_allowed_lien_limit = 1.337,
                min_required_balance = 1.337,
                min_required_opening_balance = 1.337,
                name = '',
                nominal_annual_interest_rate = 1.337,
                overdraft_limit = 1.337,
                periodic_accrual_accounting = True,
                upfront_accrual_accounting = True,
                withdrawal_fee_for_transfers = True
            )
        else:
            return SavingsProductData(
        )
        """

    def testSavingsProductData(self):
        """Test SavingsProductData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
