# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_client_id_product_id_charge_options import GetClientIdProductIdChargeOptions

class TestGetClientIdProductIdChargeOptions(unittest.TestCase):
    """GetClientIdProductIdChargeOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetClientIdProductIdChargeOptions:
        """Test GetClientIdProductIdChargeOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetClientIdProductIdChargeOptions`
        """
        model = GetClientIdProductIdChargeOptions()
        if include_optional:
            return GetClientIdProductIdChargeOptions(
                charge_options = fineract_client.models.get_share_accounts_charge_options.GetShareAccountsChargeOptions(
                    active = True, 
                    amount = 2, 
                    calculation_type = fineract_client.models.get_share_accounts_charge_calculation_type.GetShareAccountsChargeCalculationType(
                        code = 'chargeCalculationType.flat', 
                        description = 'Flat', 
                        id = 1, ), 
                    charge_applies_to = fineract_client.models.get_share_accounts_charge_applies_to.GetShareAccountsChargeAppliesTo(
                        code = 'chargeAppliesTo.shares', 
                        description = 'Shares', 
                        id = 4, ), 
                    charge_time_type = fineract_client.models.get_share_accounts_charge_time_type.GetShareAccountsChargeTimeType(
                        code = 'chargeTimeType.sharespurchase', 
                        description = 'Share purchase', 
                        id = 14, ), 
                    currency = fineract_client.models.get_share_accounts_currency.GetShareAccountsCurrency(
                        code = 'USD', 
                        decimal_places = 2, 
                        display_label = 'US Dollar ($)', 
                        display_symbol = '$', 
                        name = 'US Dollar', 
                        name_code = 'currency.USD', ), 
                    id = 2, 
                    name = 'Activation fee', 
                    payment_mode = fineract_client.models.get_share_accounts_charge_payment_mode.GetShareAccountsChargePaymentMode(
                        code = 'chargepaymentmode.regular', 
                        description = 'Regular', 
                        id = 0, ), 
                    penalty = False, )
            )
        else:
            return GetClientIdProductIdChargeOptions(
        )
        """

    def testGetClientIdProductIdChargeOptions(self):
        """Test GetClientIdProductIdChargeOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
