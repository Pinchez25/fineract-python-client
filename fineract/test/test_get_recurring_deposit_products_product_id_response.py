# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_recurring_deposit_products_product_id_response import GetRecurringDepositProductsProductIdResponse

class TestGetRecurringDepositProductsProductIdResponse(unittest.TestCase):
    """GetRecurringDepositProductsProductIdResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetRecurringDepositProductsProductIdResponse:
        """Test GetRecurringDepositProductsProductIdResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetRecurringDepositProductsProductIdResponse`
        """
        model = GetRecurringDepositProductsProductIdResponse()
        if include_optional:
            return GetRecurringDepositProductsProductIdResponse(
                accounting_mappings = fineract_client.models.get_recurring_deposit_products_product_id_accounting_mappings.GetRecurringDepositProductsProductIdAccountingMappings(
                    fee_receivable_account = fineract_client.models.get_recurring_deposit_products_gl_account.GetRecurringDepositProductsGlAccount(
                        gl_code = '2000001', 
                        id = 12, 
                        name = 'savings control', ), 
                    income_from_fee_account = fineract_client.models.get_recurring_deposit_products_gl_account.GetRecurringDepositProductsGlAccount(
                        gl_code = '2000001', 
                        id = 12, 
                        name = 'savings control', ), 
                    income_from_penalty_account = , 
                    interest_on_savings_account = , 
                    interest_payable_account = , 
                    penalty_receivable_account = , 
                    savings_control_account = , 
                    transfers_in_suspense_account = , ),
                active_chart = fineract_client.models.get_recurring_deposit_products_product_id_active_chart.GetRecurringDepositProductsProductIdActiveChart(
                    chart_slabs = [
                        fineract_client.models.get_recurring_deposit_products_product_id_chart_slabs.GetRecurringDepositProductsProductIdChartSlabs(
                            annual_interest_rate = 4.5, 
                            currency = fineract_client.models.get_recurring_deposit_products_product_id_currency.GetRecurringDepositProductsProductIdCurrency(
                                code = 'USD', 
                                decimal_places = 2, 
                                display_label = 'US Dollar ($)', 
                                display_symbol = '$', 
                                name = 'US Dollar', 
                                name_code = 'currency.USD', ), 
                            description = 'from 0 to 90 days', 
                            from_period = 0, 
                            id = 18, 
                            period_type = fineract_client.models.get_recurring_deposit_products_product_id_period_type.GetRecurringDepositProductsProductIdPeriodType(
                                code = 'interestChartPeriodType.weeks', 
                                description = 'Weeks', 
                                id = 1, ), 
                            to_period = 90, )
                        ], 
                    from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    id = 8, 
                    period_types = [
                        fineract_client.models.get_recurring_deposit_products_product_id_period_type.GetRecurringDepositProductsProductIdPeriodType(
                            code = 'interestChartPeriodType.weeks', 
                            description = 'Weeks', 
                            id = 1, )
                        ], 
                    savings_product_id = 8, 
                    savings_product_name = 'Recurring deposit product', ),
                currency = fineract_client.models.get_recurring_deposit_products_product_id_currency.GetRecurringDepositProductsProductIdCurrency(
                    code = 'USD', 
                    decimal_places = 2, 
                    display_label = 'US Dollar ($)', 
                    display_symbol = '$', 
                    name = 'US Dollar', 
                    name_code = 'currency.USD', ),
                description = 'Daily compounding using Daily Balance, 5% per year, 365 days in year',
                fee_to_income_account_mappings = [
                    fineract_client.models.get_recurring_deposit_products_product_id_fee_to_income_account_mappings.GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings(
                        charge = fineract_client.models.get_recurring_deposit_products_product_id_fee_to_income_account_mappings_charge.GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge(
                            active = False, 
                            id = 11, 
                            name = 'sav charge', 
                            penalty = False, ), 
                        income_account = fineract_client.models.get_recurring_deposit_products_product_id_fee_to_income_account_mappings_income_account.GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount(
                            gl_code = '24', 
                            id = 16, 
                            name = 'income from savings fee', ), )
                    ],
                id = 1,
                interest_calculation_days_in_year_type = fineract_client.models.get_recurring_deposit_products_interest_calculation_days_in_year_type.GetRecurringDepositProductsInterestCalculationDaysInYearType(
                    code = 'savingsInterestCalculationDaysInYearType.days365', 
                    description = '365 Days', 
                    id = 365, ),
                interest_calculation_type = fineract_client.models.get_recurring_deposit_products_interest_calculation_type.GetRecurringDepositProductsInterestCalculationType(
                    code = 'savingsInterestCalculationType.dailybalance', 
                    description = 'Daily Balance', 
                    id = 1, ),
                interest_compounding_period_type = fineract_client.models.get_recurring_deposit_products_product_id_interest_compounding_period_type.GetRecurringDepositProductsProductIdInterestCompoundingPeriodType(
                    code = 'savings.interest.period.savingsCompoundingInterestPeriodType.daily', 
                    description = 'Daily', 
                    id = 1, ),
                interest_posting_period_type = fineract_client.models.get_recurring_deposit_products_interest_posting_period_type.GetRecurringDepositProductsInterestPostingPeriodType(
                    code = 'savings.interest.posting.period.savingsPostingInterestPeriodType.monthly', 
                    description = 'Monthly', 
                    id = 4, ),
                max_deposit_term = 5,
                max_deposit_term_type = fineract_client.models.get_recurring_deposit_products_product_id_max_deposit_term_type.GetRecurringDepositProductsProductIdMaxDepositTermType(
                    code = 'deposit.term.savingsPeriodFrequencyType.years', 
                    description = 'Years', 
                    id = 3, ),
                min_deposit_term = 1,
                min_deposit_term_type = fineract_client.models.get_recurring_deposit_products_product_id_min_deposit_term_type.GetRecurringDepositProductsProductIdMinDepositTermType(
                    code = 'deposit.term.savingsPeriodFrequencyType.weeks', 
                    description = 'Weeks', 
                    id = 1, ),
                name = 'Recurring deposit product',
                penalty_to_income_account_mappings = [
                    fineract_client.models.get_recurring_deposit_products_product_id_penalty_to_income_account_mappings.GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings(
                        charge = fineract_client.models.get_recurring_deposit_products_product_id_penalty_to_income_account_mappings_charge.GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge(
                            active = False, 
                            id = 12, 
                            name = 'sav 2', 
                            penalty = True, ), 
                        income_account = fineract_client.models.get_recurring_deposit_products_gl_account.GetRecurringDepositProductsGlAccount(
                            gl_code = '2000001', 
                            id = 12, 
                            name = 'savings control', ), )
                    ],
                pre_closure_penal_applicable = True,
                pre_closure_penal_interest = 1.75,
                pre_closure_penal_interest_on_type = fineract_client.models.get_recurring_deposit_products_product_id_pre_closure_penal_interest_on_type.GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType(
                    code = 'preClosurePenalInterestOnType.wholeTerm', 
                    description = 'Whole term', 
                    id = 1, ),
                recurring_deposit_frequency = 1,
                recurring_deposit_frequency_type = fineract_client.models.get_recurring_deposit_products_recurring_deposit_frequency_type.GetRecurringDepositProductsRecurringDepositFrequencyType(
                    code = 'recurring.deposit.savingsPeriodFrequencyType.months', 
                    description = 'Months', 
                    id = 1, ),
                short_name = 'RD01'
            )
        else:
            return GetRecurringDepositProductsProductIdResponse(
        )
        """

    def testGetRecurringDepositProductsProductIdResponse(self):
        """Test GetRecurringDepositProductsProductIdResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
