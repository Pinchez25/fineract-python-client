# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_standing_instruction_run_history_response import GetStandingInstructionRunHistoryResponse

class TestGetStandingInstructionRunHistoryResponse(unittest.TestCase):
    """GetStandingInstructionRunHistoryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetStandingInstructionRunHistoryResponse:
        """Test GetStandingInstructionRunHistoryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetStandingInstructionRunHistoryResponse`
        """
        model = GetStandingInstructionRunHistoryResponse()
        if include_optional:
            return GetStandingInstructionRunHistoryResponse(
                page_items = [
                    fineract_client.models.get_standing_instruction_history_page_items_response.GetStandingInstructionHistoryPageItemsResponse(
                        amount = 10, 
                        error_log = '', 
                        execution_time = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        from_account = fineract_client.models.get_standing_instruction_history_from_account.GetStandingInstructionHistoryFromAccount(
                            account_no = 2, 
                            id = 2, 
                            product_id = 1, 
                            product_name = 'General Savings', ), 
                        from_account_type = fineract_client.models.get_from_account_type_standing_instruction_swagger.GetFromAccountTypeStandingInstructionSwagger(
                            code = 'accountType.savings', 
                            description = 'Savings Account', 
                            id = 2, ), 
                        from_client = fineract_client.models.get_standing_instruction_history_page_items_from_client.GetStandingInstructionHistoryPageItemsFromClient(
                            display_name = 'Test client', 
                            id = 1, 
                            office_id = 1, 
                            office_name = 'Head Office', ), 
                        from_office = fineract_client.models.get_from_office_standing_instruction_swagger.GetFromOfficeStandingInstructionSwagger(
                            id = 1, 
                            name = 'Head Office', ), 
                        name = 'ACC Transfer', 
                        standing_instruction_id = 1, 
                        status = 'success', 
                        to_account = fineract_client.models.get_standing_instruction_history_to_account.GetStandingInstructionHistoryToAccount(
                            account_no = 1, 
                            id = 1, 
                            product_id = 1, 
                            product_name = 'General Savings', ), 
                        to_account_type = fineract_client.models.get_to_account_type_standing_instruction_swagger.GetToAccountTypeStandingInstructionSwagger(
                            code = 'accountType.savings', 
                            description = 'Savings Account', 
                            id = 2, ), 
                        to_client = fineract_client.models.get_standing_instruction_history_to_client.GetStandingInstructionHistoryToClient(
                            display_name = 'Test client', 
                            id = 1, 
                            office_id = 1, 
                            office_name = 'Head Office', ), 
                        to_office = fineract_client.models.get_to_office_standing_instruction_swagger.GetToOfficeStandingInstructionSwagger(
                            id = 1, 
                            name = 'Head Office', ), )
                    ],
                total_filtered_records = 2
            )
        else:
            return GetStandingInstructionRunHistoryResponse(
        )
        """

    def testGetStandingInstructionRunHistoryResponse(self):
        """Test GetStandingInstructionRunHistoryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
