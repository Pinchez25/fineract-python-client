# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_account_transfers_response import GetAccountTransfersResponse

class TestGetAccountTransfersResponse(unittest.TestCase):
    """GetAccountTransfersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAccountTransfersResponse:
        """Test GetAccountTransfersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAccountTransfersResponse`
        """
        model = GetAccountTransfersResponse()
        if include_optional:
            return GetAccountTransfersResponse(
                page_items = [
                    fineract_client.models.get_account_transfers_page_items.GetAccountTransfersPageItems(
                        currency = fineract_client.models.get_account_transfers_page_items_currency.GetAccountTransfersPageItemsCurrency(
                            code = 'USD', 
                            decimal_places = 2, 
                            display_label = 'US Dollar ($)', 
                            display_symbol = '$', 
                            name = 'US Dollar', 
                            name_code = 'currency.USD', ), 
                        from_account = fineract_client.models.get_account_transfers_page_items_from_account.GetAccountTransfersPageItemsFromAccount(
                            account_no = 1, 
                            id = 1, ), 
                        from_account_type = fineract_client.models.get_account_transfers_from_account_type.GetAccountTransfersFromAccountType(
                            code = 'accountType.savings', 
                            description = 'Savings Account', 
                            id = 2, ), 
                        from_client = fineract_client.models.get_account_transfers_from_client_options.GetAccountTransfersFromClientOptions(
                            display_name = 'Small shop', 
                            id = 1, 
                            office_id = 1, 
                            office_name = 'HO', ), 
                        from_office = fineract_client.models.get_account_transfers_page_items_from_office.GetAccountTransfersPageItemsFromOffice(
                            id = 1, 
                            name = 'HO', ), 
                        id = 1, 
                        reversed = False, 
                        to_account = fineract_client.models.get_account_transfers_page_items_from_account.GetAccountTransfersPageItemsFromAccount(
                            account_no = 1, 
                            id = 1, ), 
                        to_account_type = fineract_client.models.get_account_transfers_page_items_to_account_type.GetAccountTransfersPageItemsToAccountType(
                            code = 'accountType.loan', 
                            description = 'Loan Account', 
                            id = 1, ), 
                        to_client = fineract_client.models.get_account_transfers_from_client_options.GetAccountTransfersFromClientOptions(
                            display_name = 'Small shop', 
                            id = 1, 
                            office_id = 1, 
                            office_name = 'HO', ), 
                        to_office = fineract_client.models.get_account_transfers_page_items_from_office.GetAccountTransfersPageItemsFromOffice(
                            id = 1, 
                            name = 'HO', ), 
                        transfer_amount = 200, 
                        transfer_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        transfer_description = 'pay off loan from savings.', )
                    ],
                total_filtered_records = 4
            )
        else:
            return GetAccountTransfersResponse(
        )
        """

    def testGetAccountTransfersResponse(self):
        """Test GetAccountTransfersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
