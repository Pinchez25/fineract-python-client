# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_standing_instructions_template_response import GetStandingInstructionsTemplateResponse

class TestGetStandingInstructionsTemplateResponse(unittest.TestCase):
    """GetStandingInstructionsTemplateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetStandingInstructionsTemplateResponse:
        """Test GetStandingInstructionsTemplateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetStandingInstructionsTemplateResponse`
        """
        model = GetStandingInstructionsTemplateResponse()
        if include_optional:
            return GetStandingInstructionsTemplateResponse(
                from_account_type = fineract_client.models.get_from_account_type_response_standing_instruction_swagger.GetFromAccountTypeResponseStandingInstructionSwagger(
                    code = 'accountType.savings', 
                    description = 'Savings Account', 
                    id = 2, ),
                from_account_type_options = [
                    fineract_client.models.get_from_account_type_options_response_standing_instruction_swagger.GetFromAccountTypeOptionsResponseStandingInstructionSwagger(
                        code = 'accountType.savings', 
                        description = 'Savings Account', 
                        id = 2, )
                    ],
                from_client_options = [
                    fineract_client.models.get_from_client_options_response_standing_instruction_swagger.GetFromClientOptionsResponseStandingInstructionSwagger(
                        display_name = 'Client_FirstName_2VRAG Client_LastName_9QCY', 
                        id = 1, 
                        office_id = 1, 
                        office_name = 'Head Office', )
                    ],
                from_office = fineract_client.models.get_from_office_response_standing_instruction_swagger.GetFromOfficeResponseStandingInstructionSwagger(
                    decorated_name = 'Head Office', 
                    external_id = '1', 
                    hierarchy = '.', 
                    id = 1, 
                    name = 'Head Office', 
                    opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                from_office_options = [
                    fineract_client.models.get_from_office_options_response_standing_instruction_swagger.GetFromOfficeOptionsResponseStandingInstructionSwagger(
                        id = 1, 
                        name = 'Head Office', 
                        name_decorated = 'Head Office', )
                    ],
                instruction_type_options = [
                    fineract_client.models.get_instruction_type_options_response_standing_instruction_swagger.GetInstructionTypeOptionsResponseStandingInstructionSwagger(
                        code = 'standingInstructionType.fixed', 
                        description = 'Fixed', 
                        id = 1, )
                    ],
                priority_options = [
                    fineract_client.models.get_priority_options_response_standing_instruction_swagger.GetPriorityOptionsResponseStandingInstructionSwagger(
                        code = 'standingInstructionPriority.urgent', 
                        description = 'Urgent Priority', 
                        id = 1, )
                    ],
                recurrence_frequency_options = [
                    fineract_client.models.get_recurrence_frequency_options_response_standing_instruction_swagger.GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger(
                        code = 'frequencyperiodFrequencyType.days', 
                        description = 'Days', 
                        id = 0, )
                    ],
                recurrence_type_options = [
                    fineract_client.models.get_recurrence_type_options_response_standing_instruction_swagger.GetRecurrenceTypeOptionsResponseStandingInstructionSwagger(
                        code = 'accountTransferRecurrenceType.periodic', 
                        description = 'Periodic Recurrence', 
                        id = 1, )
                    ],
                status_options = [
                    fineract_client.models.get_status_options_response_standing_instruction_swagger.GetStatusOptionsResponseStandingInstructionSwagger(
                        code = 'standingInstructionStatus.active', 
                        description = 'Active', 
                        id = 1, )
                    ],
                to_account_type_options = [
                    fineract_client.models.get_to_account_type_options_response_standing_instruction_swagger.GetToAccountTypeOptionsResponseStandingInstructionSwagger(
                        code = 'accountType.loan', 
                        description = 'Loan Account', 
                        id = 1, )
                    ],
                to_office_options = [
                    fineract_client.models.get_to_office_options_response_standing_instruction_swagger.GetToOfficeOptionsResponseStandingInstructionSwagger(
                        id = 1, 
                        name = 'Head Office', 
                        name_decorated = 'Head Office', )
                    ],
                transfer_type_options = [
                    fineract_client.models.get_transfer_type_options_response_standing_instruction_swagger.GetTransferTypeOptionsResponseStandingInstructionSwagger(
                        code = 'accountTransferType.account.transfer', 
                        description = 'Account Transfer', 
                        id = 1, )
                    ]
            )
        else:
            return GetStandingInstructionsTemplateResponse(
        )
        """

    def testGetStandingInstructionsTemplateResponse(self):
        """Test GetStandingInstructionsTemplateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
