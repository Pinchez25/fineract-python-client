# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_tellers_teller_id_cashiers_cashiers_id_transactions_response import GetTellersTellerIdCashiersCashiersIdTransactionsResponse

class TestGetTellersTellerIdCashiersCashiersIdTransactionsResponse(unittest.TestCase):
    """GetTellersTellerIdCashiersCashiersIdTransactionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTellersTellerIdCashiersCashiersIdTransactionsResponse:
        """Test GetTellersTellerIdCashiersCashiersIdTransactionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTellersTellerIdCashiersCashiersIdTransactionsResponse`
        """
        model = GetTellersTellerIdCashiersCashiersIdTransactionsResponse()
        if include_optional:
            return GetTellersTellerIdCashiersCashiersIdTransactionsResponse(
                cashier_id = 15,
                cashier_name = 'B, Ramesh',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                entity_id = 2,
                entity_type = 'loans',
                id = 8,
                office_id = 1,
                office_name = 'Head Office',
                teller_id = 0,
                txn_amount = 1000,
                txn_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                txn_note = 'Disbursement, Loan:2-000000002,Client:1-Test 1',
                txn_type = fineract_client.models.cashier_txn_type.CashierTxnType(
                    id = 56, 
                    value = '', )
            )
        else:
            return GetTellersTellerIdCashiersCashiersIdTransactionsResponse(
        )
        """

    def testGetTellersTellerIdCashiersCashiersIdTransactionsResponse(self):
        """Test GetTellersTellerIdCashiersCashiersIdTransactionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
