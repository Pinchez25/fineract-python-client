# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.post_loans_loan_id_request import PostLoansLoanIdRequest

class TestPostLoansLoanIdRequest(unittest.TestCase):
    """PostLoansLoanIdRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostLoansLoanIdRequest:
        """Test PostLoansLoanIdRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostLoansLoanIdRequest`
        """
        model = PostLoansLoanIdRequest()
        if include_optional:
            return PostLoansLoanIdRequest(
                actual_disbursement_date = '28 June 2022',
                approved_loan_amount = 1000,
                approved_on_date = '28 June 2022',
                assignment_date = '02 September 2014',
                date_format = 'dd MMMM yyyy',
                disbursement_data = [
                    fineract_client.models.post_loans_loan_id_disbursement_data.PostLoansLoanIdDisbursementData(
                        expected_disbursement_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        principal = 22000, )
                    ],
                expected_disbursement_date = '28 June 2022',
                external_id = '3e7791ce-aa10-11ec-b909-0242ac120002',
                from_loan_officer_id = 56,
                locale = 'en',
                note = 'Description of disbursement details.',
                payment_type_id = 3,
                rejected_on_date = '28 June 2022',
                to_loan_officer_id = 2,
                transaction_amount = 5000.33,
                unassigned_date = '02 September 2014',
                withdrawn_on_date = '28 June 2022'
            )
        else:
            return PostLoansLoanIdRequest(
        )
        """

    def testPostLoansLoanIdRequest(self):
        """Test PostLoansLoanIdRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
