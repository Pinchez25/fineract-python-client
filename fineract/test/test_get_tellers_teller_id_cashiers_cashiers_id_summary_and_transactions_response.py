# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_tellers_teller_id_cashiers_cashiers_id_summary_and_transactions_response import GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse

class TestGetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse(unittest.TestCase):
    """GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:
        """Test GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse`
        """
        model = GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse()
        if include_optional:
            return GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse(
                cashier_id = 1,
                cashier_name = 'Staff1, Test',
                cashier_transactions = fineract_client.models.page_cashier_transaction_data.PageCashierTransactionData(
                    page_items = [
                        fineract_client.models.cashier_transaction_data.CashierTransactionData(
                            cashier_data = fineract_client.models.cashier_data.CashierData(
                                description = '', 
                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                end_time = '', 
                                id = 56, 
                                is_full_day = True, 
                                office_id = 56, 
                                office_name = '', 
                                staff_id = 56, 
                                staff_name = '', 
                                staff_options = [
                                    fineract_client.models.staff_data.StaffData(
                                        display_name = '', 
                                        firstname = '', 
                                        id = 56, 
                                        joining_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        lastname = '', 
                                        office_id = 56, 
                                        office_name = '', 
                                        row_index = 56, )
                                    ], 
                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                start_time = '', 
                                teller_id = 56, 
                                teller_name = '', ), 
                            cashier_id = 56, 
                            cashier_name = '', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            currency_options = [
                                fineract_client.models.currency_data.CurrencyData(
                                    code = '', 
                                    decimal_places = 56, 
                                    display_label = '', 
                                    display_symbol = '', 
                                    in_multiples_of = 56, 
                                    name = '', 
                                    name_code = '', )
                                ], 
                            end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            entity_id = 56, 
                            entity_type = '', 
                            id = 56, 
                            office_id = 56, 
                            office_name = '', 
                            start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            teller_id = 56, 
                            teller_name = '', 
                            txn_amount = 1.337, 
                            txn_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            txn_note = '', 
                            txn_type = fineract_client.models.cashier_txn_type.CashierTxnType(
                                id = 56, 
                                value = '', ), )
                        ], 
                    total_filtered_records = 56, ),
                net_cash = 6950,
                office_name = 'Head Office',
                sum_cash_allocation = 7000,
                sum_cash_settlement = 50,
                sum_inward_cash = 0,
                sum_outward_cash = 0,
                teller_id = 1,
                teller_name = 'Teller1'
            )
        else:
            return GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse(
        )
        """

    def testGetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse(self):
        """Test GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
