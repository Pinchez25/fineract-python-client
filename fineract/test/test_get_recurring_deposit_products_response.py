# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_recurring_deposit_products_response import GetRecurringDepositProductsResponse

class TestGetRecurringDepositProductsResponse(unittest.TestCase):
    """GetRecurringDepositProductsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetRecurringDepositProductsResponse:
        """Test GetRecurringDepositProductsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetRecurringDepositProductsResponse`
        """
        model = GetRecurringDepositProductsResponse()
        if include_optional:
            return GetRecurringDepositProductsResponse(
                accounting_rule = fineract_client.models.get_recurring_deposit_products_accounting_rule.GetRecurringDepositProductsAccountingRule(
                    code = 'accountingRuleType.none', 
                    description = 'NONE', 
                    id = 1, ),
                currency = fineract_client.models.get_recurring_deposit_products_currency.GetRecurringDepositProductsCurrency(
                    code = 'USD', 
                    decimal_places = 2, 
                    display_label = 'US Dollar ($)', 
                    display_symbol = '$', 
                    in_multiples_of = 1, 
                    name = 'US Dollar', 
                    name_code = 'currency.USD', ),
                description = 'RD01',
                id = 3,
                interest_calculation_days_in_year_type = fineract_client.models.get_recurring_deposit_products_interest_calculation_days_in_year_type.GetRecurringDepositProductsInterestCalculationDaysInYearType(
                    code = 'savingsInterestCalculationDaysInYearType.days365', 
                    description = '365 Days', 
                    id = 365, ),
                interest_calculation_type = fineract_client.models.get_recurring_deposit_products_interest_calculation_type.GetRecurringDepositProductsInterestCalculationType(
                    code = 'savingsInterestCalculationType.dailybalance', 
                    description = 'Daily Balance', 
                    id = 1, ),
                interest_compounding_period_type = fineract_client.models.get_recurring_deposit_products_interest_compounding_period_type.GetRecurringDepositProductsInterestCompoundingPeriodType(
                    code = 'savings.interest.period.savingsCompoundingInterestPeriodType.monthly', 
                    description = 'Monthly', 
                    id = 4, ),
                interest_posting_period_type = fineract_client.models.get_recurring_deposit_products_interest_posting_period_type.GetRecurringDepositProductsInterestPostingPeriodType(
                    code = 'savings.interest.posting.period.savingsPostingInterestPeriodType.monthly', 
                    description = 'Monthly', 
                    id = 4, ),
                max_deposit_term = 4,
                max_deposit_term_type = fineract_client.models.get_recurring_deposit_products_max_deposit_term_type.GetRecurringDepositProductsMaxDepositTermType(
                    code = 'deposit.term.savingsPeriodFrequencyType.years', 
                    description = 'Years', 
                    id = 3, ),
                min_deposit_term = 3,
                min_deposit_term_type = fineract_client.models.get_recurring_deposit_products_min_deposit_term_type.GetRecurringDepositProductsMinDepositTermType(
                    code = 'deposit.term.savingsPeriodFrequencyType.months', 
                    description = 'Months', 
                    id = 2, ),
                name = 'RD01',
                nominal_annual_interest_rate = 0,
                pre_closure_penal_applicable = False,
                recurring_deposit_frequency = 1,
                recurring_deposit_frequency_type = fineract_client.models.get_recurring_deposit_products_recurring_deposit_frequency_type.GetRecurringDepositProductsRecurringDepositFrequencyType(
                    code = 'recurring.deposit.savingsPeriodFrequencyType.months', 
                    description = 'Months', 
                    id = 1, ),
                short_name = 'RD01'
            )
        else:
            return GetRecurringDepositProductsResponse(
        )
        """

    def testGetRecurringDepositProductsResponse(self):
        """Test GetRecurringDepositProductsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
