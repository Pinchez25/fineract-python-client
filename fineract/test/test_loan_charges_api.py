# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from apis.loan_charges_api import LoanChargesApi


class TestLoanChargesApi(unittest.TestCase):
    """LoanChargesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LoanChargesApi()

    def tearDown(self) -> None:
        pass

    def test_delete_loan_charge(self) -> None:
        """Test case for delete_loan_charge

        Delete a Loan Charge
        """
        pass

    def test_delete_loan_charge1(self) -> None:
        """Test case for delete_loan_charge1

        Delete a Loan Charge
        """
        pass

    def test_delete_loan_charge2(self) -> None:
        """Test case for delete_loan_charge2

        Delete a Loan Charge
        """
        pass

    def test_delete_loan_charge3(self) -> None:
        """Test case for delete_loan_charge3

        Delete a Loan Charge
        """
        pass

    def test_execute_loan_charge(self) -> None:
        """Test case for execute_loan_charge

        Create a Loan Charge (no command provided) or Pay a charge (command=pay)
        """
        pass

    def test_execute_loan_charge1(self) -> None:
        """Test case for execute_loan_charge1

        Create a Loan Charge (no command provided) or Pay a charge (command=pay)
        """
        pass

    def test_execute_loan_charge2(self) -> None:
        """Test case for execute_loan_charge2

        Pay / Waive / Adjustment for Loan Charge
        """
        pass

    def test_execute_loan_charge3(self) -> None:
        """Test case for execute_loan_charge3

        Pay / Waive / Adjustment for Loan Charge
        """
        pass

    def test_execute_loan_charge4(self) -> None:
        """Test case for execute_loan_charge4

        Pay / Waive / Adjustment for Loan Charge
        """
        pass

    def test_execute_loan_charge5(self) -> None:
        """Test case for execute_loan_charge5

        Pay / Waive / Adjustment for Loan Charge
        """
        pass

    def test_retrieve_all_loan_charges(self) -> None:
        """Test case for retrieve_all_loan_charges

        List Loan Charges
        """
        pass

    def test_retrieve_all_loan_charges1(self) -> None:
        """Test case for retrieve_all_loan_charges1

        List Loan Charges
        """
        pass

    def test_retrieve_loan_charge(self) -> None:
        """Test case for retrieve_loan_charge

        Retrieve a Loan Charge
        """
        pass

    def test_retrieve_loan_charge1(self) -> None:
        """Test case for retrieve_loan_charge1

        Retrieve a Loan Charge
        """
        pass

    def test_retrieve_loan_charge2(self) -> None:
        """Test case for retrieve_loan_charge2

        Retrieve a Loan Charge
        """
        pass

    def test_retrieve_loan_charge3(self) -> None:
        """Test case for retrieve_loan_charge3

        Retrieve a Loan Charge
        """
        pass

    def test_retrieve_template8(self) -> None:
        """Test case for retrieve_template8

        Retrieve Loan Charges Template
        """
        pass

    def test_retrieve_template9(self) -> None:
        """Test case for retrieve_template9

        Retrieve Loan Charges Template
        """
        pass

    def test_update_loan_charge(self) -> None:
        """Test case for update_loan_charge

        Update a Loan Charge
        """
        pass

    def test_update_loan_charge1(self) -> None:
        """Test case for update_loan_charge1

        Update a Loan Charge
        """
        pass

    def test_update_loan_charge2(self) -> None:
        """Test case for update_loan_charge2

        Update a Loan Charge
        """
        pass

    def test_update_loan_charge3(self) -> None:
        """Test case for update_loan_charge3

        Update a Loan Charge
        """
        pass


if __name__ == '__main__':
    unittest.main()
