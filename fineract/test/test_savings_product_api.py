# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from apis.savings_product_api import SavingsProductApi


class TestSavingsProductApi(unittest.TestCase):
    """SavingsProductApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SavingsProductApi()

    def tearDown(self) -> None:
        pass

    def test_create13(self) -> None:
        """Test case for create13

        Create a Savings Product
        """
        pass

    def test_delete21(self) -> None:
        """Test case for delete21

        Delete a Savings Product
        """
        pass

    def test_retrieve_all34(self) -> None:
        """Test case for retrieve_all34

        List Savings Products
        """
        pass

    def test_retrieve_one27(self) -> None:
        """Test case for retrieve_one27

        Retrieve a Savings Product
        """
        pass

    def test_retrieve_template20(self) -> None:
        """Test case for retrieve_template20

        Retrieve Savings Product Template
        """
        pass

    def test_update22(self) -> None:
        """Test case for update22

        Update a Savings Product
        """
        pass


if __name__ == '__main__':
    unittest.main()
