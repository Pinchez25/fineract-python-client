# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.external_owner_journal_entry_data import ExternalOwnerJournalEntryData

class TestExternalOwnerJournalEntryData(unittest.TestCase):
    """ExternalOwnerJournalEntryData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExternalOwnerJournalEntryData:
        """Test ExternalOwnerJournalEntryData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExternalOwnerJournalEntryData`
        """
        model = ExternalOwnerJournalEntryData()
        if include_optional:
            return ExternalOwnerJournalEntryData(
                journal_entry_data = fineract_client.models.page_journal_entry_data.PageJournalEntryData(
                    content = [
                        fineract_client.models.journal_entry_data.JournalEntryData(
                            account_number = '', 
                            amount = 1.337, 
                            bank_number = '', 
                            check_number = '', 
                            comments = '', 
                            created_by_user_id = 56, 
                            created_by_user_name = '', 
                            created_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            credits = [
                                fineract_client.models.credit_debit.CreditDebit(
                                    amount = 1.337, 
                                    gl_account_id = 56, )
                                ], 
                            currency = fineract_client.models.currency_data.CurrencyData(
                                code = '', 
                                decimal_places = 56, 
                                display_label = '', 
                                display_symbol = '', 
                                in_multiples_of = 56, 
                                name = '', 
                                name_code = '', ), 
                            currency_code = '', 
                            date_format = '', 
                            debits = [
                                fineract_client.models.credit_debit.CreditDebit(
                                    amount = 1.337, 
                                    gl_account_id = 56, )
                                ], 
                            entity_id = 56, 
                            entity_type = fineract_client.models.enum_option_data.EnumOptionData(
                                code = '', 
                                id = 56, 
                                value = '', ), 
                            entry_type = fineract_client.models.enum_option_data.EnumOptionData(
                                code = '', 
                                id = 56, 
                                value = '', ), 
                            gl_account_code = '', 
                            gl_account_id = 56, 
                            gl_account_name = '', 
                            gl_account_type = , 
                            id = 56, 
                            locale = '', 
                            manual_entry = True, 
                            office_id = 56, 
                            office_name = '', 
                            office_running_balance = 1.337, 
                            organization_running_balance = 1.337, 
                            payment_type_id = 56, 
                            receipt_number = '', 
                            reference_number = '', 
                            reversed = True, 
                            routing_code = '', 
                            row_index = 56, 
                            running_balance_computed = True, 
                            saving_transaction_id = 56, 
                            submitted_on_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            transaction_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            transaction_details = fineract_client.models.transaction_detail_data.TransactionDetailData(
                                note_data = fineract_client.models.note_data.NoteData(
                                    client_id = 56, 
                                    created_by_id = 56, 
                                    created_by_username = '', 
                                    created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    deposit_account_id = 56, 
                                    group_id = 56, 
                                    id = 56, 
                                    loan_id = 56, 
                                    loan_transaction_id = 56, 
                                    note = '', 
                                    note_type = , 
                                    saving_account_id = 56, 
                                    updated_by_id = 56, 
                                    updated_by_username = '', 
                                    updated_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                payment_details = fineract_client.models.payment_detail_data.PaymentDetailData(
                                    account_number = 'acc123', 
                                    bank_number = 'ban123', 
                                    check_number = 'che123', 
                                    id = 62, 
                                    payment_type = fineract_client.models.payment_type.PaymentType(
                                        id = 11, 
                                        is_system_defined = True, 
                                        name = 'DOWN_PAYMENT', ), 
                                    receipt_number = 'rec123', 
                                    routing_code = 'rou123', ), 
                                transaction_id = 56, 
                                transaction_type = fineract_client.models.transaction_type_enum_data.TransactionTypeEnumData(
                                    code = '', 
                                    id = 56, 
                                    value = '', ), ), 
                            transaction_id = '', )
                        ], 
                    empty = True, 
                    first = True, 
                    last = True, 
                    number = 56, 
                    number_of_elements = 56, 
                    pageable = fineract_client.models.pageable.Pageable(
                        offset = 56, 
                        page_number = 56, 
                        page_size = 56, 
                        paged = True, 
                        sort = fineract_client.models.sort.Sort(
                            empty = True, 
                            sorted = True, 
                            unsorted = True, ), 
                        unpaged = True, ), 
                    size = 56, 
                    sort = fineract_client.models.sort.Sort(
                        empty = True, 
                        sorted = True, 
                        unsorted = True, ), 
                    total_elements = 56, 
                    total_pages = 56, ),
                owner_data = fineract_client.models.external_transfer_owner_data.ExternalTransferOwnerData(
                    external_id = '', )
            )
        else:
            return ExternalOwnerJournalEntryData(
        )
        """

    def testExternalOwnerJournalEntryData(self):
        """Test ExternalOwnerJournalEntryData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
