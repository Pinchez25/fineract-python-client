# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date, datetime
from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GetDelinquencyActionsResponse(BaseModel):
    """
    GetDelinquencyActionsResponse
    """ # noqa: E501
    action: Optional[StrictStr] = None
    created_by_id: Optional[StrictInt] = Field(default=None, alias="createdById")
    created_on: Optional[datetime] = Field(default=None, alias="createdOn")
    end_date: Optional[date] = Field(default=None, alias="endDate")
    id: Optional[StrictInt] = None
    last_modified_on: Optional[datetime] = Field(default=None, alias="lastModifiedOn")
    start_date: Optional[date] = Field(default=None, alias="startDate")
    updated_by_id: Optional[StrictInt] = Field(default=None, alias="updatedById")
    __properties: ClassVar[List[str]] = ["action", "createdById", "createdOn", "endDate", "id", "lastModifiedOn", "startDate", "updatedById"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GetDelinquencyActionsResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GetDelinquencyActionsResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "action": obj.get("action"),
            "createdById": obj.get("createdById"),
            "createdOn": obj.get("createdOn"),
            "endDate": obj.get("endDate"),
            "id": obj.get("id"),
            "lastModifiedOn": obj.get("lastModifiedOn"),
            "startDate": obj.get("startDate"),
            "updatedById": obj.get("updatedById")
        })
        return _obj


