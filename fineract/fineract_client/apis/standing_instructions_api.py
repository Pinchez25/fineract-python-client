# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from fineract_client.models.get_standing_instructions_response import GetStandingInstructionsResponse
from fineract_client.models.get_standing_instructions_standing_instruction_id_response import GetStandingInstructionsStandingInstructionIdResponse
from fineract_client.models.get_standing_instructions_template_response import GetStandingInstructionsTemplateResponse
from fineract_client.models.post_standing_instructions_request import PostStandingInstructionsRequest
from fineract_client.models.post_standing_instructions_response import PostStandingInstructionsResponse
from fineract_client.models.put_standing_instructions_standing_instruction_id_request import PutStandingInstructionsStandingInstructionIdRequest
from fineract_client.models.put_standing_instructions_standing_instruction_id_response import PutStandingInstructionsStandingInstructionIdResponse

from fineract_client.api_client import ApiClient, RequestSerialized
from fineract_client.api_response import ApiResponse
from fineract_client.rest import RESTResponseType


class StandingInstructionsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def create5(
        self,
        post_standing_instructions_request: PostStandingInstructionsRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PostStandingInstructionsResponse:
        """Create new Standing Instruction

        Ability to create new instruction for transfer of monetary funds from one account to another

        :param post_standing_instructions_request: (required)
        :type post_standing_instructions_request: PostStandingInstructionsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create5_serialize(
            post_standing_instructions_request=post_standing_instructions_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PostStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def create5_with_http_info(
        self,
        post_standing_instructions_request: PostStandingInstructionsRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PostStandingInstructionsResponse]:
        """Create new Standing Instruction

        Ability to create new instruction for transfer of monetary funds from one account to another

        :param post_standing_instructions_request: (required)
        :type post_standing_instructions_request: PostStandingInstructionsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create5_serialize(
            post_standing_instructions_request=post_standing_instructions_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PostStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def create5_without_preload_content(
        self,
        post_standing_instructions_request: PostStandingInstructionsRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create new Standing Instruction

        Ability to create new instruction for transfer of monetary funds from one account to another

        :param post_standing_instructions_request: (required)
        :type post_standing_instructions_request: PostStandingInstructionsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create5_serialize(
            post_standing_instructions_request=post_standing_instructions_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PostStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _create5_serialize(
        self,
        post_standing_instructions_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if post_standing_instructions_request is not None:
            _body_params = post_standing_instructions_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'basicAuth', 
            'tenantid'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/v1/standinginstructions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def retrieve_all19(
        self,
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        client_name: Annotated[Optional[StrictStr], Field(description="clientName")] = None,
        client_id: Annotated[Optional[StrictInt], Field(description="clientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetStandingInstructionsResponse:
        """List Standing Instructions

        Example Requests:  standinginstructions

        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param transfer_type: transferType
        :type transfer_type: int
        :param client_name: clientName
        :type client_name: str
        :param client_id: clientId
        :type client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_all19_serialize(
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            transfer_type=transfer_type,
            client_name=client_name,
            client_id=client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def retrieve_all19_with_http_info(
        self,
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        client_name: Annotated[Optional[StrictStr], Field(description="clientName")] = None,
        client_id: Annotated[Optional[StrictInt], Field(description="clientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetStandingInstructionsResponse]:
        """List Standing Instructions

        Example Requests:  standinginstructions

        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param transfer_type: transferType
        :type transfer_type: int
        :param client_name: clientName
        :type client_name: str
        :param client_id: clientId
        :type client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_all19_serialize(
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            transfer_type=transfer_type,
            client_name=client_name,
            client_id=client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def retrieve_all19_without_preload_content(
        self,
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        client_name: Annotated[Optional[StrictStr], Field(description="clientName")] = None,
        client_id: Annotated[Optional[StrictInt], Field(description="clientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List Standing Instructions

        Example Requests:  standinginstructions

        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param transfer_type: transferType
        :type transfer_type: int
        :param client_name: clientName
        :type client_name: str
        :param client_id: clientId
        :type client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_all19_serialize(
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            transfer_type=transfer_type,
            client_name=client_name,
            client_id=client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _retrieve_all19_serialize(
        self,
        external_id,
        offset,
        limit,
        order_by,
        sort_order,
        transfer_type,
        client_name,
        client_id,
        from_account_id,
        from_account_type,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if external_id is not None:
            
            _query_params.append(('externalId', external_id))
            
        if offset is not None:
            
            _query_params.append(('offset', offset))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if order_by is not None:
            
            _query_params.append(('orderBy', order_by))
            
        if sort_order is not None:
            
            _query_params.append(('sortOrder', sort_order))
            
        if transfer_type is not None:
            
            _query_params.append(('transferType', transfer_type))
            
        if client_name is not None:
            
            _query_params.append(('clientName', client_name))
            
        if client_id is not None:
            
            _query_params.append(('clientId', client_id))
            
        if from_account_id is not None:
            
            _query_params.append(('fromAccountId', from_account_id))
            
        if from_account_type is not None:
            
            _query_params.append(('fromAccountType', from_account_type))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'basicAuth', 
            'tenantid'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/standinginstructions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def retrieve_one10(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetStandingInstructionsStandingInstructionIdResponse:
        """Retrieve Standing Instruction

        Example Requests :  standinginstructions/1

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_one10_serialize(
            standing_instruction_id=standing_instruction_id,
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def retrieve_one10_with_http_info(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetStandingInstructionsStandingInstructionIdResponse]:
        """Retrieve Standing Instruction

        Example Requests :  standinginstructions/1

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_one10_serialize(
            standing_instruction_id=standing_instruction_id,
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def retrieve_one10_without_preload_content(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        external_id: Annotated[Optional[StrictStr], Field(description="externalId")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="offset")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="limit")] = None,
        order_by: Annotated[Optional[StrictStr], Field(description="orderBy")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="sortOrder")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve Standing Instruction

        Example Requests :  standinginstructions/1

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param external_id: externalId
        :type external_id: str
        :param offset: offset
        :type offset: int
        :param limit: limit
        :type limit: int
        :param order_by: orderBy
        :type order_by: str
        :param sort_order: sortOrder
        :type sort_order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._retrieve_one10_serialize(
            standing_instruction_id=standing_instruction_id,
            external_id=external_id,
            offset=offset,
            limit=limit,
            order_by=order_by,
            sort_order=sort_order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _retrieve_one10_serialize(
        self,
        standing_instruction_id,
        external_id,
        offset,
        limit,
        order_by,
        sort_order,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if standing_instruction_id is not None:
            _path_params['standingInstructionId'] = standing_instruction_id
        # process the query parameters
        if external_id is not None:
            
            _query_params.append(('externalId', external_id))
            
        if offset is not None:
            
            _query_params.append(('offset', offset))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if order_by is not None:
            
            _query_params.append(('orderBy', order_by))
            
        if sort_order is not None:
            
            _query_params.append(('sortOrder', sort_order))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'basicAuth', 
            'tenantid'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/standinginstructions/{standingInstructionId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def template6(
        self,
        from_office_id: Annotated[Optional[StrictInt], Field(description="fromOfficeId")] = None,
        from_client_id: Annotated[Optional[StrictInt], Field(description="fromClientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        to_office_id: Annotated[Optional[StrictInt], Field(description="toOfficeId")] = None,
        to_client_id: Annotated[Optional[StrictInt], Field(description="toClientId")] = None,
        to_account_id: Annotated[Optional[StrictInt], Field(description="toAccountId")] = None,
        to_account_type: Annotated[Optional[StrictInt], Field(description="toAccountType")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetStandingInstructionsTemplateResponse:
        """Retrieve Standing Instruction Template

        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Requests:  standinginstructions/template?fromAccountType=2&fromOfficeId=1  standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1  standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1

        :param from_office_id: fromOfficeId
        :type from_office_id: int
        :param from_client_id: fromClientId
        :type from_client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param to_office_id: toOfficeId
        :type to_office_id: int
        :param to_client_id: toClientId
        :type to_client_id: int
        :param to_account_id: toAccountId
        :type to_account_id: int
        :param to_account_type: toAccountType
        :type to_account_type: int
        :param transfer_type: transferType
        :type transfer_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._template6_serialize(
            from_office_id=from_office_id,
            from_client_id=from_client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            to_office_id=to_office_id,
            to_client_id=to_client_id,
            to_account_id=to_account_id,
            to_account_type=to_account_type,
            transfer_type=transfer_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsTemplateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def template6_with_http_info(
        self,
        from_office_id: Annotated[Optional[StrictInt], Field(description="fromOfficeId")] = None,
        from_client_id: Annotated[Optional[StrictInt], Field(description="fromClientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        to_office_id: Annotated[Optional[StrictInt], Field(description="toOfficeId")] = None,
        to_client_id: Annotated[Optional[StrictInt], Field(description="toClientId")] = None,
        to_account_id: Annotated[Optional[StrictInt], Field(description="toAccountId")] = None,
        to_account_type: Annotated[Optional[StrictInt], Field(description="toAccountType")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetStandingInstructionsTemplateResponse]:
        """Retrieve Standing Instruction Template

        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Requests:  standinginstructions/template?fromAccountType=2&fromOfficeId=1  standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1  standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1

        :param from_office_id: fromOfficeId
        :type from_office_id: int
        :param from_client_id: fromClientId
        :type from_client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param to_office_id: toOfficeId
        :type to_office_id: int
        :param to_client_id: toClientId
        :type to_client_id: int
        :param to_account_id: toAccountId
        :type to_account_id: int
        :param to_account_type: toAccountType
        :type to_account_type: int
        :param transfer_type: transferType
        :type transfer_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._template6_serialize(
            from_office_id=from_office_id,
            from_client_id=from_client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            to_office_id=to_office_id,
            to_client_id=to_client_id,
            to_account_id=to_account_id,
            to_account_type=to_account_type,
            transfer_type=transfer_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsTemplateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def template6_without_preload_content(
        self,
        from_office_id: Annotated[Optional[StrictInt], Field(description="fromOfficeId")] = None,
        from_client_id: Annotated[Optional[StrictInt], Field(description="fromClientId")] = None,
        from_account_id: Annotated[Optional[StrictInt], Field(description="fromAccountId")] = None,
        from_account_type: Annotated[Optional[StrictInt], Field(description="fromAccountType")] = None,
        to_office_id: Annotated[Optional[StrictInt], Field(description="toOfficeId")] = None,
        to_client_id: Annotated[Optional[StrictInt], Field(description="toClientId")] = None,
        to_account_id: Annotated[Optional[StrictInt], Field(description="toAccountId")] = None,
        to_account_type: Annotated[Optional[StrictInt], Field(description="toAccountType")] = None,
        transfer_type: Annotated[Optional[StrictInt], Field(description="transferType")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve Standing Instruction Template

        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Requests:  standinginstructions/template?fromAccountType=2&fromOfficeId=1  standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1  standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1

        :param from_office_id: fromOfficeId
        :type from_office_id: int
        :param from_client_id: fromClientId
        :type from_client_id: int
        :param from_account_id: fromAccountId
        :type from_account_id: int
        :param from_account_type: fromAccountType
        :type from_account_type: int
        :param to_office_id: toOfficeId
        :type to_office_id: int
        :param to_client_id: toClientId
        :type to_client_id: int
        :param to_account_id: toAccountId
        :type to_account_id: int
        :param to_account_type: toAccountType
        :type to_account_type: int
        :param transfer_type: transferType
        :type transfer_type: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._template6_serialize(
            from_office_id=from_office_id,
            from_client_id=from_client_id,
            from_account_id=from_account_id,
            from_account_type=from_account_type,
            to_office_id=to_office_id,
            to_client_id=to_client_id,
            to_account_id=to_account_id,
            to_account_type=to_account_type,
            transfer_type=transfer_type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetStandingInstructionsTemplateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _template6_serialize(
        self,
        from_office_id,
        from_client_id,
        from_account_id,
        from_account_type,
        to_office_id,
        to_client_id,
        to_account_id,
        to_account_type,
        transfer_type,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if from_office_id is not None:
            
            _query_params.append(('fromOfficeId', from_office_id))
            
        if from_client_id is not None:
            
            _query_params.append(('fromClientId', from_client_id))
            
        if from_account_id is not None:
            
            _query_params.append(('fromAccountId', from_account_id))
            
        if from_account_type is not None:
            
            _query_params.append(('fromAccountType', from_account_type))
            
        if to_office_id is not None:
            
            _query_params.append(('toOfficeId', to_office_id))
            
        if to_client_id is not None:
            
            _query_params.append(('toClientId', to_client_id))
            
        if to_account_id is not None:
            
            _query_params.append(('toAccountId', to_account_id))
            
        if to_account_type is not None:
            
            _query_params.append(('toAccountType', to_account_type))
            
        if transfer_type is not None:
            
            _query_params.append(('transferType', transfer_type))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'basicAuth', 
            'tenantid'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/standinginstructions/template',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update9(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        command: Annotated[Optional[StrictStr], Field(description="command")] = None,
        put_standing_instructions_standing_instruction_id_request: Optional[PutStandingInstructionsStandingInstructionIdRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PutStandingInstructionsStandingInstructionIdResponse:
        """Update Standing Instruction | Delete Standing Instruction

        Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=update   Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=delete

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param command: command
        :type command: str
        :param put_standing_instructions_standing_instruction_id_request:
        :type put_standing_instructions_standing_instruction_id_request: PutStandingInstructionsStandingInstructionIdRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update9_serialize(
            standing_instruction_id=standing_instruction_id,
            command=command,
            put_standing_instructions_standing_instruction_id_request=put_standing_instructions_standing_instruction_id_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PutStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update9_with_http_info(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        command: Annotated[Optional[StrictStr], Field(description="command")] = None,
        put_standing_instructions_standing_instruction_id_request: Optional[PutStandingInstructionsStandingInstructionIdRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PutStandingInstructionsStandingInstructionIdResponse]:
        """Update Standing Instruction | Delete Standing Instruction

        Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=update   Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=delete

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param command: command
        :type command: str
        :param put_standing_instructions_standing_instruction_id_request:
        :type put_standing_instructions_standing_instruction_id_request: PutStandingInstructionsStandingInstructionIdRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update9_serialize(
            standing_instruction_id=standing_instruction_id,
            command=command,
            put_standing_instructions_standing_instruction_id_request=put_standing_instructions_standing_instruction_id_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PutStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update9_without_preload_content(
        self,
        standing_instruction_id: Annotated[StrictInt, Field(description="standingInstructionId")],
        command: Annotated[Optional[StrictStr], Field(description="command")] = None,
        put_standing_instructions_standing_instruction_id_request: Optional[PutStandingInstructionsStandingInstructionIdRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update Standing Instruction | Delete Standing Instruction

        Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=update   Ability to modify existing instruction for transfer of monetary funds from one account to another.  PUT https://DomainName/api/v1/standinginstructions/1?command=delete

        :param standing_instruction_id: standingInstructionId (required)
        :type standing_instruction_id: int
        :param command: command
        :type command: str
        :param put_standing_instructions_standing_instruction_id_request:
        :type put_standing_instructions_standing_instruction_id_request: PutStandingInstructionsStandingInstructionIdRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update9_serialize(
            standing_instruction_id=standing_instruction_id,
            command=command,
            put_standing_instructions_standing_instruction_id_request=put_standing_instructions_standing_instruction_id_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PutStandingInstructionsStandingInstructionIdResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update9_serialize(
        self,
        standing_instruction_id,
        command,
        put_standing_instructions_standing_instruction_id_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if standing_instruction_id is not None:
            _path_params['standingInstructionId'] = standing_instruction_id
        # process the query parameters
        if command is not None:
            
            _query_params.append(('command', command))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if put_standing_instructions_standing_instruction_id_request is not None:
            _body_params = put_standing_instructions_standing_instruction_id_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'basicAuth', 
            'tenantid'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/v1/standinginstructions/{standingInstructionId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


