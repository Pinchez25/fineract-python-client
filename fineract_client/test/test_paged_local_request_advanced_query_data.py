# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.paged_local_request_advanced_query_data import PagedLocalRequestAdvancedQueryData

class TestPagedLocalRequestAdvancedQueryData(unittest.TestCase):
    """PagedLocalRequestAdvancedQueryData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PagedLocalRequestAdvancedQueryData:
        """Test PagedLocalRequestAdvancedQueryData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PagedLocalRequestAdvancedQueryData`
        """
        model = PagedLocalRequestAdvancedQueryData()
        if include_optional:
            return PagedLocalRequestAdvancedQueryData(
                date_format = '',
                date_time_format = '',
                locale = '',
                locale_object = fineract_client.models.paged_local_request_advanced_query_data_locale_object.PagedLocalRequestAdvancedQueryData_localeObject(
                    country = '', 
                    display_country = '', 
                    display_language = '', 
                    display_name = '', 
                    display_script = '', 
                    display_variant = '', 
                    extension_keys = [
                        ''
                        ], 
                    iso3_country = '', 
                    iso3_language = '', 
                    language = '', 
                    script = '', 
                    unicode_locale_attributes = [
                        ''
                        ], 
                    unicode_locale_keys = [
                        ''
                        ], 
                    variant = '', ),
                page = 56,
                request = fineract_client.models.advanced_query_data.AdvancedQueryData(
                    column_filters = [
                        fineract_client.models.column_filter_data.ColumnFilterData(
                            column = '', 
                            filters = [
                                fineract_client.models.filter_data.FilterData(
                                    operator = 'EQ', 
                                    values = [
                                        ''
                                        ], )
                                ], )
                        ], 
                    non_null_filters = [
                        fineract_client.models.column_filter_data.ColumnFilterData(
                            column = '', )
                        ], 
                    non_null_result_columns = [
                        ''
                        ], 
                    result_columns = [
                        ''
                        ], ),
                size = 56,
                sorts = [
                    fineract_client.models.sort_order.SortOrder(
                        direction = 'ASC', 
                        property = '', )
                    ]
            )
        else:
            return PagedLocalRequestAdvancedQueryData(
        )
        """

    def testPagedLocalRequestAdvancedQueryData(self):
        """Test PagedLocalRequestAdvancedQueryData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
