# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.provisioning_entry_data import ProvisioningEntryData

class TestProvisioningEntryData(unittest.TestCase):
    """ProvisioningEntryData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProvisioningEntryData:
        """Test ProvisioningEntryData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProvisioningEntryData`
        """
        model = ProvisioningEntryData()
        if include_optional:
            return ProvisioningEntryData(
                created_by_id = 56,
                created_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                created_user = '',
                id = 56,
                journal_entry = True,
                modified_by_id = 56,
                modified_user = '',
                provisioning_entries = [
                    fineract_client.models.loan_product_provisioning_entry_data.LoanProductProvisioningEntryData(
                        amountreserved = 1.337, 
                        balance = 1.337, 
                        category_id = 56, 
                        category_name = '', 
                        criteria_id = 56, 
                        currency_code = '', 
                        expense_account = 56, 
                        expense_account_code = '', 
                        expense_account_name = '', 
                        history_id = 56, 
                        liability_account_code = '', 
                        liability_account_name = '', 
                        liablity_account = 56, 
                        office_id = 56, 
                        office_name = '', 
                        overdue_in_days = 56, 
                        percentage = 1.337, 
                        product_id = 56, 
                        product_name = '', )
                    ],
                reserved_amount = 1.337
            )
        else:
            return ProvisioningEntryData(
        )
        """

    def testProvisioningEntryData(self):
        """Test ProvisioningEntryData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
