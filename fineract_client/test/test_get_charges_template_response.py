# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_charges_template_response import GetChargesTemplateResponse

class TestGetChargesTemplateResponse(unittest.TestCase):
    """GetChargesTemplateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetChargesTemplateResponse:
        """Test GetChargesTemplateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetChargesTemplateResponse`
        """
        model = GetChargesTemplateResponse()
        if include_optional:
            return GetChargesTemplateResponse(
                active = False,
                charge_applies_to_options = [
                    fineract_client.models.get_charges_applies_to_response.GetChargesAppliesToResponse(
                        code = 'chargeAppliesTo.loan', 
                        description = 'Loan', 
                        id = 1, )
                    ],
                charge_calculation_type_options = [
                    fineract_client.models.get_charges_calculation_type_response.GetChargesCalculationTypeResponse(
                        code = 'chargeCalculationType.flat', 
                        description = 'Flat', 
                        id = 1, )
                    ],
                charge_payment_mode_options = [
                    fineract_client.models.get_charges_payment_mode_response.GetChargesPaymentModeResponse(
                        code = 'chargepaymentmode.accounttransfer', 
                        description = 'Account Transfer', 
                        id = 1, )
                    ],
                charge_time_type_options = [
                    fineract_client.models.get_charges_time_type_response.GetChargesTimeTypeResponse(
                        code = 'chargeTimeType.disbursement', 
                        description = 'Disbursement', 
                        id = 1, )
                    ],
                currency_options = [
                    fineract_client.models.get_charges_currency_response.GetChargesCurrencyResponse(
                        code = 'USD', 
                        decimal_places = 2, 
                        display_label = 'US Dollar ($)', 
                        display_symbol = '$', 
                        name = 'US Dollar', 
                        name_code = 'currency.USD', )
                    ],
                fee_frequency_options = [
                    fineract_client.models.get_charges_template_fee_frequency_options.GetChargesTemplateFeeFrequencyOptions(
                        code = 'loanTermFrequency.periodFrequencyType.days', 
                        description = 'Days', 
                        id = 0, )
                    ],
                loan_charge_calculation_type_options = [
                    fineract_client.models.get_charges_template_loan_charge_calculation_type_options.GetChargesTemplateLoanChargeCalculationTypeOptions(
                        code = 'chargeCalculationType.flat', 
                        description = 'Flat', 
                        id = 1, )
                    ],
                loan_charge_time_type_options = [
                    fineract_client.models.get_charges_template_loan_charge_time_type_options.GetChargesTemplateLoanChargeTimeTypeOptions(
                        code = 'chargeTimeType.specifiedDueDate', 
                        description = 'Specified due date', 
                        id = 2, )
                    ],
                penalty = False,
                savings_charge_calculation_type_options = [
                    fineract_client.models.get_charges_template_loan_charge_calculation_type_options.GetChargesTemplateLoanChargeCalculationTypeOptions(
                        code = 'chargeCalculationType.flat', 
                        description = 'Flat', 
                        id = 1, )
                    ],
                savings_charge_time_type_options = [
                    fineract_client.models.get_charges_template_loan_charge_time_type_options.GetChargesTemplateLoanChargeTimeTypeOptions(
                        code = 'chargeTimeType.specifiedDueDate', 
                        description = 'Specified due date', 
                        id = 2, )
                    ]
            )
        else:
            return GetChargesTemplateResponse(
        )
        """

    def testGetChargesTemplateResponse(self):
        """Test GetChargesTemplateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
