# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.api.savings_account_api import SavingsAccountApi


class TestSavingsAccountApi(unittest.TestCase):
    """SavingsAccountApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SavingsAccountApi()

    def tearDown(self) -> None:
        pass

    def test_delete19(self) -> None:
        """Test case for delete19

        Delete a savings application
        """
        pass

    def test_delete20(self) -> None:
        """Test case for delete20

        Delete a savings application
        """
        pass

    def test_get_savings_template(self) -> None:
        """Test case for get_savings_template

        """
        pass

    def test_get_savings_transaction_template(self) -> None:
        """Test case for get_savings_transaction_template

        """
        pass

    def test_handle_commands6(self) -> None:
        """Test case for handle_commands6

        Approve savings application | Undo approval savings application | Assign Savings Officer | Unassign Savings Officer | Reject savings application | Withdraw savings application | Activate a savings account | Close a savings account | Calculate Interest on Savings Account | Post Interest on Savings Account | Block Savings Account | Unblock Savings Account | Block Savings Account Credit transactions | Unblock Savings Account Credit transactions | Block Savings Account Debit transactions | Unblock Savings Account debit transactions
        """
        pass

    def test_handle_commands7(self) -> None:
        """Test case for handle_commands7

        Approve savings application | Undo approval savings application | Assign Savings Officer | Unassign Savings Officer | Reject savings application | Withdraw savings application | Activate a savings account | Close a savings account | Calculate Interest on Savings Account | Post Interest on Savings Account | Block Savings Account | Unblock Savings Account | Block Savings Account Credit transactions | Unblock Savings Account Credit transactions | Block Savings Account Debit transactions | Unblock Savings Account debit transactions
        """
        pass

    def test_handle_gsim_commands(self) -> None:
        """Test case for handle_gsim_commands

        """
        pass

    def test_post_savings_template(self) -> None:
        """Test case for post_savings_template

        """
        pass

    def test_post_savings_transaction_template(self) -> None:
        """Test case for post_savings_transaction_template

        """
        pass

    def test_retrieve_all33(self) -> None:
        """Test case for retrieve_all33

        List savings applications/accounts
        """
        pass

    def test_retrieve_one25(self) -> None:
        """Test case for retrieve_one25

        Retrieve a savings application/account
        """
        pass

    def test_retrieve_one26(self) -> None:
        """Test case for retrieve_one26

        Retrieve a savings application/account by external id
        """
        pass

    def test_submit_application2(self) -> None:
        """Test case for submit_application2

        Submit new savings application
        """
        pass

    def test_submit_gsim_application(self) -> None:
        """Test case for submit_gsim_application

        """
        pass

    def test_template14(self) -> None:
        """Test case for template14

        Retrieve Savings Account Template
        """
        pass

    def test_update20(self) -> None:
        """Test case for update20

        Modify a savings application | Modify savings account withhold tax applicability
        """
        pass

    def test_update21(self) -> None:
        """Test case for update21

        Modify a savings application | Modify savings account withhold tax applicability
        """
        pass

    def test_update_gsim(self) -> None:
        """Test case for update_gsim

        """
        pass


if __name__ == '__main__':
    unittest.main()
