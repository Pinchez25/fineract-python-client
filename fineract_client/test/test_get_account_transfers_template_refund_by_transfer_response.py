# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_account_transfers_template_refund_by_transfer_response import GetAccountTransfersTemplateRefundByTransferResponse

class TestGetAccountTransfersTemplateRefundByTransferResponse(unittest.TestCase):
    """GetAccountTransfersTemplateRefundByTransferResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAccountTransfersTemplateRefundByTransferResponse:
        """Test GetAccountTransfersTemplateRefundByTransferResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAccountTransfersTemplateRefundByTransferResponse`
        """
        model = GetAccountTransfersTemplateRefundByTransferResponse()
        if include_optional:
            return GetAccountTransfersTemplateRefundByTransferResponse(
                currency = fineract_client.models.get_account_transfers_template_refund_by_transfer_currency.GetAccountTransfersTemplateRefundByTransferCurrency(
                    code = 'USD', 
                    decimal_places = 0, 
                    display_label = 'US Dollar ($)', 
                    display_symbol = '$', 
                    in_multiples_of = 0, 
                    name = 'US Dollar', 
                    name_code = 'currency.USD', ),
                from_account = fineract_client.models.get_account_transfers_template_refund_by_transfer_from_account.GetAccountTransfersTemplateRefundByTransferFromAccount(
                    account_no = 2, 
                    amt_for_transfer = 130, 
                    client_id = 1, 
                    client_name = 'Daniel Owusu', 
                    currency = fineract_client.models.get_account_transfers_template_refund_by_transfer_currency.GetAccountTransfersTemplateRefundByTransferCurrency(
                        code = 'USD', 
                        decimal_places = 0, 
                        display_label = 'US Dollar ($)', 
                        display_symbol = '$', 
                        in_multiples_of = 0, 
                        name = 'US Dollar', 
                        name_code = 'currency.USD', ), 
                    field_officer_id = 0, 
                    id = 2, 
                    product_id = 1, 
                    product_name = 'CTRL', ),
                from_account_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_from_account_options.GetAccountTransfersTemplateRefundByTransferFromAccountOptions(
                        account_no = 2, 
                        client_id = 1, 
                        client_name = 'Daniel Owusu', 
                        currency = fineract_client.models.get_account_transfers_template_refund_by_transfer_currency.GetAccountTransfersTemplateRefundByTransferCurrency(
                            code = 'USD', 
                            decimal_places = 0, 
                            display_label = 'US Dollar ($)', 
                            display_symbol = '$', 
                            in_multiples_of = 0, 
                            name = 'US Dollar', 
                            name_code = 'currency.USD', ), 
                        field_officer_id = 0, 
                        id = 2, 
                        product_id = 1, 
                        product_name = 'CTRL', )
                    ],
                from_account_type = fineract_client.models.get_account_transfers_page_items_to_account_type.GetAccountTransfersPageItemsToAccountType(
                    code = 'accountType.loan', 
                    description = 'Loan Account', 
                    id = 1, ),
                from_account_type_options = [
                    fineract_client.models.get_account_transfers_from_account_type.GetAccountTransfersFromAccountType(
                        code = 'accountType.savings', 
                        description = 'Savings Account', 
                        id = 2, )
                    ],
                from_client = fineract_client.models.get_account_transfers_template_refund_by_transfer_from_client.GetAccountTransfersTemplateRefundByTransferFromClient(
                    account_no = 1, 
                    activation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    active = True, 
                    client_classification = fineract_client.models.client_classification.clientClassification(), 
                    client_type = fineract_client.models.client_type.clientType(), 
                    display_name = 'Daniel Owusu', 
                    firstname = 'Daniel', 
                    gender = fineract_client.models.gender.gender(), 
                    groups = fineract_client.models.groups.groups(), 
                    id = 1, 
                    lastname = 'Owusu', 
                    office_id = 1, 
                    office_name = 'Head Office', 
                    status = fineract_client.models.get_account_transfers_status.GetAccountTransfersStatus(
                        code = 'clientStatusType.active', 
                        description = 'Active', 
                        id = 300, ), 
                    timeline = fineract_client.models.get_account_transfers_timeline.GetAccountTransfersTimeline(
                        activated_by_firstname = 'App', 
                        activated_by_lastname = 'Administrator', 
                        activated_by_username = 'mifos', 
                        activated_on_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        submitted_by_firstname = 'App', 
                        submitted_by_lastname = 'Administrator', 
                        submitted_by_username = 'mifos', 
                        submitted_on_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                from_client_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_from_client_options.GetAccountTransfersTemplateRefundByTransferFromClientOptions(
                        display_name = 'Daniel Owusu', 
                        id = 1, 
                        office_id = 1, 
                        office_name = 'Head Office', )
                    ],
                from_office = fineract_client.models.get_account_transfers_template_refund_by_transfer_from_office.GetAccountTransfersTemplateRefundByTransferFromOffice(
                    external_id = '1', 
                    hierarchy = '.', 
                    id = 1, 
                    name = 'Head Office', 
                    name_decorated = 'Head Office', 
                    opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                from_office_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_from_office_options.GetAccountTransfersTemplateRefundByTransferFromOfficeOptions(
                        id = 1, 
                        name = 'Head Office', 
                        name_decorated = 'Head Office', )
                    ],
                to_account = fineract_client.models.get_account_transfers_template_refund_by_transfer_to_account.GetAccountTransfersTemplateRefundByTransferToAccount(
                    account_no = 1, 
                    client_id = 1, 
                    client_name = 'Daniel Owusu', 
                    currency = fineract_client.models.get_account_transfers_template_refund_by_transfer_currency.GetAccountTransfersTemplateRefundByTransferCurrency(
                        code = 'USD', 
                        decimal_places = 0, 
                        display_label = 'US Dollar ($)', 
                        display_symbol = '$', 
                        in_multiples_of = 0, 
                        name = 'US Dollar', 
                        name_code = 'currency.USD', ), 
                    field_officer_id = 0, 
                    id = 1, 
                    product_id = 1, 
                    product_name = 'TEST', ),
                to_account_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_to_account.GetAccountTransfersTemplateRefundByTransferToAccount(
                        account_no = 1, 
                        client_id = 1, 
                        client_name = 'Daniel Owusu', 
                        currency = fineract_client.models.get_account_transfers_template_refund_by_transfer_currency.GetAccountTransfersTemplateRefundByTransferCurrency(
                            code = 'USD', 
                            decimal_places = 0, 
                            display_label = 'US Dollar ($)', 
                            display_symbol = '$', 
                            in_multiples_of = 0, 
                            name = 'US Dollar', 
                            name_code = 'currency.USD', ), 
                        field_officer_id = 0, 
                        id = 1, 
                        product_id = 1, 
                        product_name = 'TEST', )
                    ],
                to_account_type = fineract_client.models.get_account_transfers_from_account_type.GetAccountTransfersFromAccountType(
                    code = 'accountType.savings', 
                    description = 'Savings Account', 
                    id = 2, ),
                to_account_type_options = [
                    fineract_client.models.get_account_transfers_from_account_type.GetAccountTransfersFromAccountType(
                        code = 'accountType.savings', 
                        description = 'Savings Account', 
                        id = 2, )
                    ],
                to_client = fineract_client.models.get_account_transfers_template_refund_by_transfer_to_client.GetAccountTransfersTemplateRefundByTransferToClient(
                    display_name = 'Daniel Owusu', 
                    id = 1, 
                    office_id = 1, 
                    office_name = 'Head Office', ),
                to_client_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_from_client_options.GetAccountTransfersTemplateRefundByTransferFromClientOptions(
                        display_name = 'Daniel Owusu', 
                        id = 1, 
                        office_id = 1, 
                        office_name = 'Head Office', )
                    ],
                to_office = fineract_client.models.get_account_transfers_template_refund_by_transfer_from_office.GetAccountTransfersTemplateRefundByTransferFromOffice(
                    external_id = '1', 
                    hierarchy = '.', 
                    id = 1, 
                    name = 'Head Office', 
                    name_decorated = 'Head Office', 
                    opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                to_office_options = [
                    fineract_client.models.get_account_transfers_template_refund_by_transfer_from_office_options.GetAccountTransfersTemplateRefundByTransferFromOfficeOptions(
                        id = 1, 
                        name = 'Head Office', 
                        name_decorated = 'Head Office', )
                    ],
                transfer_amount = 130,
                transfer_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return GetAccountTransfersTemplateRefundByTransferResponse(
        )
        """

    def testGetAccountTransfersTemplateRefundByTransferResponse(self):
        """Test GetAccountTransfersTemplateRefundByTransferResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
