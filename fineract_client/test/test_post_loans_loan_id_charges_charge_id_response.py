# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.post_loans_loan_id_charges_charge_id_response import PostLoansLoanIdChargesChargeIdResponse

class TestPostLoansLoanIdChargesChargeIdResponse(unittest.TestCase):
    """PostLoansLoanIdChargesChargeIdResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostLoansLoanIdChargesChargeIdResponse:
        """Test PostLoansLoanIdChargesChargeIdResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostLoansLoanIdChargesChargeIdResponse`
        """
        model = PostLoansLoanIdChargesChargeIdResponse()
        if include_optional:
            return PostLoansLoanIdChargesChargeIdResponse(
                changes = fineract_client.models.post_loans_loan_id_charges_charge_id_changes.PostLoansLoanIdChargesChargeIdChanges(
                    amount = 100, 
                    charge_id = 1, 
                    date = 1.337, 
                    due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    external_id = '786444UUUYYH7', 
                    fee_charges_portion = 100, 
                    id = 1, 
                    installment_number = 1, 
                    interest_portion = 100, 
                    locale = 'en', 
                    outstanding_loan_balance = 100, 
                    penalty_charges_portion = 100, 
                    principal_portion = 100, 
                    transaction_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                client_id = 1,
                loan_id = 6,
                office_id = 1,
                resource_external_id = '786444UUUYYH7',
                resource_id = 12,
                savings_id = 1,
                sub_resource_external_id = '786444UUUYYH7',
                sub_resource_id = 12
            )
        else:
            return PostLoansLoanIdChargesChargeIdResponse(
        )
        """

    def testPostLoansLoanIdChargesChargeIdResponse(self):
        """Test PostLoansLoanIdChargesChargeIdResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
