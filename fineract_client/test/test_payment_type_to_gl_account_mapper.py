# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.payment_type_to_gl_account_mapper import PaymentTypeToGLAccountMapper

class TestPaymentTypeToGLAccountMapper(unittest.TestCase):
    """PaymentTypeToGLAccountMapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentTypeToGLAccountMapper:
        """Test PaymentTypeToGLAccountMapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentTypeToGLAccountMapper`
        """
        model = PaymentTypeToGLAccountMapper()
        if include_optional:
            return PaymentTypeToGLAccountMapper(
                fund_source_account = fineract_client.models.gl_account_data.GLAccountData(
                    account_type_options = [
                        fineract_client.models.enum_option_data.EnumOptionData(
                            code = '', 
                            id = 56, 
                            value = '', )
                        ], 
                    allowed_assets_tag_options = [
                        fineract_client.models.code_value_data.CodeValueData(
                            active = True, 
                            description = '', 
                            id = 56, 
                            mandatory = True, 
                            name = '', 
                            position = 56, )
                        ], 
                    allowed_equity_tag_options = [
                        fineract_client.models.code_value_data.CodeValueData(
                            active = True, 
                            description = '', 
                            id = 56, 
                            mandatory = True, 
                            name = '', 
                            position = 56, )
                        ], 
                    allowed_expenses_tag_options = [
                        
                        ], 
                    allowed_income_tag_options = [
                        
                        ], 
                    allowed_liabilities_tag_options = [
                        
                        ], 
                    asset_header_account_options = [
                        fineract_client.models.gl_account_data.GLAccountData(
                            description = '', 
                            disabled = True, 
                            equity_header_account_options = [
                                
                                ], 
                            expense_header_account_options = [
                                
                                ], 
                            gl_code = '', 
                            id = 56, 
                            income_header_account_options = [
                                
                                ], 
                            liability_header_account_options = [
                                
                                ], 
                            manual_entries_allowed = True, 
                            name = '', 
                            name_decorated = '', 
                            organization_running_balance = 56, 
                            parent_id = 56, 
                            row_index = 56, 
                            tag_id = , 
                            type = fineract_client.models.enum_option_data.EnumOptionData(
                                code = '', 
                                id = 56, 
                                value = '', ), 
                            usage = , 
                            usage_options = [
                                
                                ], )
                        ], 
                    description = '', 
                    disabled = True, 
                    equity_header_account_options = [
                        
                        ], 
                    expense_header_account_options = [
                        
                        ], 
                    gl_code = '', 
                    id = 56, 
                    income_header_account_options = [
                        
                        ], 
                    liability_header_account_options = [
                        
                        ], 
                    manual_entries_allowed = True, 
                    name = '', 
                    name_decorated = '', 
                    organization_running_balance = 56, 
                    parent_id = 56, 
                    row_index = 56, 
                    tag_id = , 
                    type = , 
                    usage = , 
                    usage_options = [
                        
                        ], ),
                payment_type = fineract_client.models.payment_type_data.PaymentTypeData(
                    code_name = '', 
                    description = '', 
                    id = 56, 
                    is_cash_payment = True, 
                    is_system_defined = True, 
                    name = '', 
                    position = 56, )
            )
        else:
            return PaymentTypeToGLAccountMapper(
        )
        """

    def testPaymentTypeToGLAccountMapper(self):
        """Test PaymentTypeToGLAccountMapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
