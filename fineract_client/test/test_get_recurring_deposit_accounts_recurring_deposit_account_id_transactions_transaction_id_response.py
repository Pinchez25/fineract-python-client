# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.get_recurring_deposit_accounts_recurring_deposit_account_id_transactions_transaction_id_response import GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse

class TestGetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse(unittest.TestCase):
    """GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse:
        """Test GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse`
        """
        model = GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse()
        if include_optional:
            return GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse(
                account_id = 1,
                account_no = '000000001',
                amount = 5000,
                currency = fineract_client.models.get_recurring_transactions_currency.GetRecurringTransactionsCurrency(
                    code = 'USD', 
                    decimal_places = 2, 
                    display_label = 'US Dollar ($)', 
                    display_symbol = '$', 
                    in_multiples_of = 0, 
                    name = 'US Dollar', 
                    name_code = 'currency.USD', ),
                var_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                id = 1,
                payment_detail_data = fineract_client.models.get_recurring_payment_detail_data.GetRecurringPaymentDetailData(
                    account_number = 56, 
                    bank_number = 56, 
                    check_number = 56, 
                    id = 62, 
                    payment_type = fineract_client.models.get_recurring_payment_type.GetRecurringPaymentType(
                        id = 11, 
                        name = 'cash', ), 
                    receipt_number = 56, 
                    routing_code = 56, ),
                reversed = True,
                running_balance = 0,
                transaction_type = fineract_client.models.get_recurring_transactions_transaction_type.GetRecurringTransactionsTransactionType(
                    code = 'savingsAccountTransactionType.withdrawal', 
                    deposit = False, 
                    description = 'Withdrawal', 
                    fee_deduction = False, 
                    id = 2, 
                    interest_posting = False, 
                    withdrawal = True, )
            )
        else:
            return GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse(
        )
        """

    def testGetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse(self):
        """Test GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
