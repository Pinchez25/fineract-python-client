# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.

    The version of the OpenAPI document: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fineract_client.models.response import Response

class TestResponse(unittest.TestCase):
    """Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Response:
        """Test Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Response`
        """
        model = Response()
        if include_optional:
            return Response(
                id = 56,
                new = True,
                question = fineract_client.models.question.Question(
                    component_key = '', 
                    description = '', 
                    id = 56, 
                    key = '', 
                    new = True, 
                    responses = [
                        fineract_client.models.response.Response(
                            id = 56, 
                            new = True, 
                            sequence_no = 56, 
                            text = '', 
                            value = 56, )
                        ], 
                    sequence_no = 56, 
                    survey = fineract_client.models.survey.Survey(
                        components = [
                            fineract_client.models.component.Component(
                                description = '', 
                                id = 56, 
                                key = '', 
                                new = True, 
                                sequence_no = 56, 
                                text = '', )
                            ], 
                        country_code = '', 
                        description = '', 
                        id = 56, 
                        key = '', 
                        name = '', 
                        new = True, 
                        questions = [
                            fineract_client.models.question.Question(
                                component_key = '', 
                                description = '', 
                                id = 56, 
                                key = '', 
                                new = True, 
                                sequence_no = 56, 
                                text = '', )
                            ], 
                        valid_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        valid_to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), 
                    text = '', ),
                sequence_no = 56,
                text = '',
                value = 56
            )
        else:
            return Response(
        )
        """

    def testResponse(self):
        """Test Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
