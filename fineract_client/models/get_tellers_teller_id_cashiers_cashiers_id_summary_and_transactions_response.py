# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cashier_id': 'int',
        'cashier_name': 'str',
        'cashier_transactions': 'PageCashierTransactionData',
        'net_cash': 'float',
        'office_name': 'str',
        'sum_cash_allocation': 'float',
        'sum_cash_settlement': 'float',
        'sum_inward_cash': 'float',
        'sum_outward_cash': 'float',
        'teller_id': 'int',
        'teller_name': 'str'
    }

    attribute_map = {
        'cashier_id': 'cashierId',
        'cashier_name': 'cashierName',
        'cashier_transactions': 'cashierTransactions',
        'net_cash': 'netCash',
        'office_name': 'officeName',
        'sum_cash_allocation': 'sumCashAllocation',
        'sum_cash_settlement': 'sumCashSettlement',
        'sum_inward_cash': 'sumInwardCash',
        'sum_outward_cash': 'sumOutwardCash',
        'teller_id': 'tellerId',
        'teller_name': 'tellerName'
    }

    def __init__(self, cashier_id=None, cashier_name=None, cashier_transactions=None, net_cash=None, office_name=None, sum_cash_allocation=None, sum_cash_settlement=None, sum_inward_cash=None, sum_outward_cash=None, teller_id=None, teller_name=None):  # noqa: E501
        """GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse - a model defined in Swagger"""  # noqa: E501
        self._cashier_id = None
        self._cashier_name = None
        self._cashier_transactions = None
        self._net_cash = None
        self._office_name = None
        self._sum_cash_allocation = None
        self._sum_cash_settlement = None
        self._sum_inward_cash = None
        self._sum_outward_cash = None
        self._teller_id = None
        self._teller_name = None
        self.discriminator = None
        if cashier_id is not None:
            self.cashier_id = cashier_id
        if cashier_name is not None:
            self.cashier_name = cashier_name
        if cashier_transactions is not None:
            self.cashier_transactions = cashier_transactions
        if net_cash is not None:
            self.net_cash = net_cash
        if office_name is not None:
            self.office_name = office_name
        if sum_cash_allocation is not None:
            self.sum_cash_allocation = sum_cash_allocation
        if sum_cash_settlement is not None:
            self.sum_cash_settlement = sum_cash_settlement
        if sum_inward_cash is not None:
            self.sum_inward_cash = sum_inward_cash
        if sum_outward_cash is not None:
            self.sum_outward_cash = sum_outward_cash
        if teller_id is not None:
            self.teller_id = teller_id
        if teller_name is not None:
            self.teller_name = teller_name

    @property
    def cashier_id(self):
        """Gets the cashier_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The cashier_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: int
        """
        return self._cashier_id

    @cashier_id.setter
    def cashier_id(self, cashier_id):
        """Sets the cashier_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param cashier_id: The cashier_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: int
        """

        self._cashier_id = cashier_id

    @property
    def cashier_name(self):
        """Gets the cashier_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The cashier_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: str
        """
        return self._cashier_name

    @cashier_name.setter
    def cashier_name(self, cashier_name):
        """Sets the cashier_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param cashier_name: The cashier_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: str
        """

        self._cashier_name = cashier_name

    @property
    def cashier_transactions(self):
        """Gets the cashier_transactions of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The cashier_transactions of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: PageCashierTransactionData
        """
        return self._cashier_transactions

    @cashier_transactions.setter
    def cashier_transactions(self, cashier_transactions):
        """Sets the cashier_transactions of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param cashier_transactions: The cashier_transactions of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: PageCashierTransactionData
        """

        self._cashier_transactions = cashier_transactions

    @property
    def net_cash(self):
        """Gets the net_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The net_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: float
        """
        return self._net_cash

    @net_cash.setter
    def net_cash(self, net_cash):
        """Sets the net_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param net_cash: The net_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: float
        """

        self._net_cash = net_cash

    @property
    def office_name(self):
        """Gets the office_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The office_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: str
        """
        return self._office_name

    @office_name.setter
    def office_name(self, office_name):
        """Sets the office_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param office_name: The office_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: str
        """

        self._office_name = office_name

    @property
    def sum_cash_allocation(self):
        """Gets the sum_cash_allocation of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The sum_cash_allocation of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: float
        """
        return self._sum_cash_allocation

    @sum_cash_allocation.setter
    def sum_cash_allocation(self, sum_cash_allocation):
        """Sets the sum_cash_allocation of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param sum_cash_allocation: The sum_cash_allocation of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: float
        """

        self._sum_cash_allocation = sum_cash_allocation

    @property
    def sum_cash_settlement(self):
        """Gets the sum_cash_settlement of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The sum_cash_settlement of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: float
        """
        return self._sum_cash_settlement

    @sum_cash_settlement.setter
    def sum_cash_settlement(self, sum_cash_settlement):
        """Sets the sum_cash_settlement of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param sum_cash_settlement: The sum_cash_settlement of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: float
        """

        self._sum_cash_settlement = sum_cash_settlement

    @property
    def sum_inward_cash(self):
        """Gets the sum_inward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The sum_inward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: float
        """
        return self._sum_inward_cash

    @sum_inward_cash.setter
    def sum_inward_cash(self, sum_inward_cash):
        """Sets the sum_inward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param sum_inward_cash: The sum_inward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: float
        """

        self._sum_inward_cash = sum_inward_cash

    @property
    def sum_outward_cash(self):
        """Gets the sum_outward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The sum_outward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: float
        """
        return self._sum_outward_cash

    @sum_outward_cash.setter
    def sum_outward_cash(self, sum_outward_cash):
        """Sets the sum_outward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param sum_outward_cash: The sum_outward_cash of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: float
        """

        self._sum_outward_cash = sum_outward_cash

    @property
    def teller_id(self):
        """Gets the teller_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The teller_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: int
        """
        return self._teller_id

    @teller_id.setter
    def teller_id(self, teller_id):
        """Sets the teller_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param teller_id: The teller_id of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: int
        """

        self._teller_id = teller_id

    @property
    def teller_name(self):
        """Gets the teller_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501


        :return: The teller_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :rtype: str
        """
        return self._teller_name

    @teller_name.setter
    def teller_name(self, teller_name):
        """Sets the teller_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.


        :param teller_name: The teller_name of this GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse.  # noqa: E501
        :type: str
        """

        self._teller_name = teller_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
