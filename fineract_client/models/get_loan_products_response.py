# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetLoanProductsResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accounting_rule': 'GetLoanProductsAccountingRule',
        'amortization_type': 'GetLoanProductsAmortizationType',
        'annual_interest_rate': 'float',
        'currency': 'GetLoanProductsCurrency',
        'days_in_month_type': 'GetLoansProductsDaysInMonthType',
        'days_in_year_type': 'GetLoansProductsDaysInYearType',
        'end_date': 'date',
        'fixed_length': 'int',
        'fixed_principal_percentage_per_installment': 'float',
        'id': 'int',
        'include_in_borrower_cycle': 'bool',
        'interest_calculation_period_type': 'GetLoansProductsInterestCalculationPeriodType',
        'interest_rate_frequency_type': 'GetLoanProductsInterestRateFrequencyType',
        'interest_rate_per_period': 'float',
        'interest_rate_variations_for_borrower_cycle': 'list[int]',
        'interest_recalculation_data': 'GetLoanProductsInterestRecalculationData',
        'interest_type': 'GetLoanProductsInterestType',
        'is_interest_recalculation_enabled': 'bool',
        'max_number_of_repayments': 'int',
        'max_principal': 'float',
        'min_number_of_repayments': 'int',
        'min_principal': 'float',
        'name': 'str',
        'number_of_repayment_variations_for_borrower_cycle': 'list[int]',
        'number_of_repayments': 'int',
        'principal': 'float',
        'principal_threshold_for_last_instalment': 'int',
        'principal_variations_for_borrower_cycle': 'list[int]',
        'repayment_every': 'int',
        'repayment_frequency_type': 'GetLoanProductsRepaymentFrequencyType',
        'repayment_start_date_type': 'GetLoanProductsRepaymentStartDateType',
        'short_name': 'str',
        'start_date': 'date',
        'status': 'str',
        'supported_interest_refund_types': 'list[StringEnumOptionData]',
        'transaction_processing_strategy': 'str',
        'transaction_processing_strategy_name': 'str',
        'use_borrower_cycle': 'bool'
    }

    attribute_map = {
        'accounting_rule': 'accountingRule',
        'amortization_type': 'amortizationType',
        'annual_interest_rate': 'annualInterestRate',
        'currency': 'currency',
        'days_in_month_type': 'daysInMonthType',
        'days_in_year_type': 'daysInYearType',
        'end_date': 'endDate',
        'fixed_length': 'fixedLength',
        'fixed_principal_percentage_per_installment': 'fixedPrincipalPercentagePerInstallment',
        'id': 'id',
        'include_in_borrower_cycle': 'includeInBorrowerCycle',
        'interest_calculation_period_type': 'interestCalculationPeriodType',
        'interest_rate_frequency_type': 'interestRateFrequencyType',
        'interest_rate_per_period': 'interestRatePerPeriod',
        'interest_rate_variations_for_borrower_cycle': 'interestRateVariationsForBorrowerCycle',
        'interest_recalculation_data': 'interestRecalculationData',
        'interest_type': 'interestType',
        'is_interest_recalculation_enabled': 'isInterestRecalculationEnabled',
        'max_number_of_repayments': 'maxNumberOfRepayments',
        'max_principal': 'maxPrincipal',
        'min_number_of_repayments': 'minNumberOfRepayments',
        'min_principal': 'minPrincipal',
        'name': 'name',
        'number_of_repayment_variations_for_borrower_cycle': 'numberOfRepaymentVariationsForBorrowerCycle',
        'number_of_repayments': 'numberOfRepayments',
        'principal': 'principal',
        'principal_threshold_for_last_instalment': 'principalThresholdForLastInstalment',
        'principal_variations_for_borrower_cycle': 'principalVariationsForBorrowerCycle',
        'repayment_every': 'repaymentEvery',
        'repayment_frequency_type': 'repaymentFrequencyType',
        'repayment_start_date_type': 'repaymentStartDateType',
        'short_name': 'shortName',
        'start_date': 'startDate',
        'status': 'status',
        'supported_interest_refund_types': 'supportedInterestRefundTypes',
        'transaction_processing_strategy': 'transactionProcessingStrategy',
        'transaction_processing_strategy_name': 'transactionProcessingStrategyName',
        'use_borrower_cycle': 'useBorrowerCycle'
    }

    def __init__(self, accounting_rule=None, amortization_type=None, annual_interest_rate=None, currency=None, days_in_month_type=None, days_in_year_type=None, end_date=None, fixed_length=None, fixed_principal_percentage_per_installment=None, id=None, include_in_borrower_cycle=None, interest_calculation_period_type=None, interest_rate_frequency_type=None, interest_rate_per_period=None, interest_rate_variations_for_borrower_cycle=None, interest_recalculation_data=None, interest_type=None, is_interest_recalculation_enabled=None, max_number_of_repayments=None, max_principal=None, min_number_of_repayments=None, min_principal=None, name=None, number_of_repayment_variations_for_borrower_cycle=None, number_of_repayments=None, principal=None, principal_threshold_for_last_instalment=None, principal_variations_for_borrower_cycle=None, repayment_every=None, repayment_frequency_type=None, repayment_start_date_type=None, short_name=None, start_date=None, status=None, supported_interest_refund_types=None, transaction_processing_strategy=None, transaction_processing_strategy_name=None, use_borrower_cycle=None):  # noqa: E501
        """GetLoanProductsResponse - a model defined in Swagger"""  # noqa: E501
        self._accounting_rule = None
        self._amortization_type = None
        self._annual_interest_rate = None
        self._currency = None
        self._days_in_month_type = None
        self._days_in_year_type = None
        self._end_date = None
        self._fixed_length = None
        self._fixed_principal_percentage_per_installment = None
        self._id = None
        self._include_in_borrower_cycle = None
        self._interest_calculation_period_type = None
        self._interest_rate_frequency_type = None
        self._interest_rate_per_period = None
        self._interest_rate_variations_for_borrower_cycle = None
        self._interest_recalculation_data = None
        self._interest_type = None
        self._is_interest_recalculation_enabled = None
        self._max_number_of_repayments = None
        self._max_principal = None
        self._min_number_of_repayments = None
        self._min_principal = None
        self._name = None
        self._number_of_repayment_variations_for_borrower_cycle = None
        self._number_of_repayments = None
        self._principal = None
        self._principal_threshold_for_last_instalment = None
        self._principal_variations_for_borrower_cycle = None
        self._repayment_every = None
        self._repayment_frequency_type = None
        self._repayment_start_date_type = None
        self._short_name = None
        self._start_date = None
        self._status = None
        self._supported_interest_refund_types = None
        self._transaction_processing_strategy = None
        self._transaction_processing_strategy_name = None
        self._use_borrower_cycle = None
        self.discriminator = None
        if accounting_rule is not None:
            self.accounting_rule = accounting_rule
        if amortization_type is not None:
            self.amortization_type = amortization_type
        if annual_interest_rate is not None:
            self.annual_interest_rate = annual_interest_rate
        if currency is not None:
            self.currency = currency
        if days_in_month_type is not None:
            self.days_in_month_type = days_in_month_type
        if days_in_year_type is not None:
            self.days_in_year_type = days_in_year_type
        if end_date is not None:
            self.end_date = end_date
        if fixed_length is not None:
            self.fixed_length = fixed_length
        if fixed_principal_percentage_per_installment is not None:
            self.fixed_principal_percentage_per_installment = fixed_principal_percentage_per_installment
        if id is not None:
            self.id = id
        if include_in_borrower_cycle is not None:
            self.include_in_borrower_cycle = include_in_borrower_cycle
        if interest_calculation_period_type is not None:
            self.interest_calculation_period_type = interest_calculation_period_type
        if interest_rate_frequency_type is not None:
            self.interest_rate_frequency_type = interest_rate_frequency_type
        if interest_rate_per_period is not None:
            self.interest_rate_per_period = interest_rate_per_period
        if interest_rate_variations_for_borrower_cycle is not None:
            self.interest_rate_variations_for_borrower_cycle = interest_rate_variations_for_borrower_cycle
        if interest_recalculation_data is not None:
            self.interest_recalculation_data = interest_recalculation_data
        if interest_type is not None:
            self.interest_type = interest_type
        if is_interest_recalculation_enabled is not None:
            self.is_interest_recalculation_enabled = is_interest_recalculation_enabled
        if max_number_of_repayments is not None:
            self.max_number_of_repayments = max_number_of_repayments
        if max_principal is not None:
            self.max_principal = max_principal
        if min_number_of_repayments is not None:
            self.min_number_of_repayments = min_number_of_repayments
        if min_principal is not None:
            self.min_principal = min_principal
        if name is not None:
            self.name = name
        if number_of_repayment_variations_for_borrower_cycle is not None:
            self.number_of_repayment_variations_for_borrower_cycle = number_of_repayment_variations_for_borrower_cycle
        if number_of_repayments is not None:
            self.number_of_repayments = number_of_repayments
        if principal is not None:
            self.principal = principal
        if principal_threshold_for_last_instalment is not None:
            self.principal_threshold_for_last_instalment = principal_threshold_for_last_instalment
        if principal_variations_for_borrower_cycle is not None:
            self.principal_variations_for_borrower_cycle = principal_variations_for_borrower_cycle
        if repayment_every is not None:
            self.repayment_every = repayment_every
        if repayment_frequency_type is not None:
            self.repayment_frequency_type = repayment_frequency_type
        if repayment_start_date_type is not None:
            self.repayment_start_date_type = repayment_start_date_type
        if short_name is not None:
            self.short_name = short_name
        if start_date is not None:
            self.start_date = start_date
        if status is not None:
            self.status = status
        if supported_interest_refund_types is not None:
            self.supported_interest_refund_types = supported_interest_refund_types
        if transaction_processing_strategy is not None:
            self.transaction_processing_strategy = transaction_processing_strategy
        if transaction_processing_strategy_name is not None:
            self.transaction_processing_strategy_name = transaction_processing_strategy_name
        if use_borrower_cycle is not None:
            self.use_borrower_cycle = use_borrower_cycle

    @property
    def accounting_rule(self):
        """Gets the accounting_rule of this GetLoanProductsResponse.  # noqa: E501


        :return: The accounting_rule of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsAccountingRule
        """
        return self._accounting_rule

    @accounting_rule.setter
    def accounting_rule(self, accounting_rule):
        """Sets the accounting_rule of this GetLoanProductsResponse.


        :param accounting_rule: The accounting_rule of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsAccountingRule
        """

        self._accounting_rule = accounting_rule

    @property
    def amortization_type(self):
        """Gets the amortization_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The amortization_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsAmortizationType
        """
        return self._amortization_type

    @amortization_type.setter
    def amortization_type(self, amortization_type):
        """Sets the amortization_type of this GetLoanProductsResponse.


        :param amortization_type: The amortization_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsAmortizationType
        """

        self._amortization_type = amortization_type

    @property
    def annual_interest_rate(self):
        """Gets the annual_interest_rate of this GetLoanProductsResponse.  # noqa: E501


        :return: The annual_interest_rate of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._annual_interest_rate

    @annual_interest_rate.setter
    def annual_interest_rate(self, annual_interest_rate):
        """Sets the annual_interest_rate of this GetLoanProductsResponse.


        :param annual_interest_rate: The annual_interest_rate of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._annual_interest_rate = annual_interest_rate

    @property
    def currency(self):
        """Gets the currency of this GetLoanProductsResponse.  # noqa: E501


        :return: The currency of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsCurrency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this GetLoanProductsResponse.


        :param currency: The currency of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsCurrency
        """

        self._currency = currency

    @property
    def days_in_month_type(self):
        """Gets the days_in_month_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The days_in_month_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoansProductsDaysInMonthType
        """
        return self._days_in_month_type

    @days_in_month_type.setter
    def days_in_month_type(self, days_in_month_type):
        """Sets the days_in_month_type of this GetLoanProductsResponse.


        :param days_in_month_type: The days_in_month_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoansProductsDaysInMonthType
        """

        self._days_in_month_type = days_in_month_type

    @property
    def days_in_year_type(self):
        """Gets the days_in_year_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The days_in_year_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoansProductsDaysInYearType
        """
        return self._days_in_year_type

    @days_in_year_type.setter
    def days_in_year_type(self, days_in_year_type):
        """Sets the days_in_year_type of this GetLoanProductsResponse.


        :param days_in_year_type: The days_in_year_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoansProductsDaysInYearType
        """

        self._days_in_year_type = days_in_year_type

    @property
    def end_date(self):
        """Gets the end_date of this GetLoanProductsResponse.  # noqa: E501


        :return: The end_date of this GetLoanProductsResponse.  # noqa: E501
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this GetLoanProductsResponse.


        :param end_date: The end_date of this GetLoanProductsResponse.  # noqa: E501
        :type: date
        """

        self._end_date = end_date

    @property
    def fixed_length(self):
        """Gets the fixed_length of this GetLoanProductsResponse.  # noqa: E501


        :return: The fixed_length of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._fixed_length

    @fixed_length.setter
    def fixed_length(self, fixed_length):
        """Sets the fixed_length of this GetLoanProductsResponse.


        :param fixed_length: The fixed_length of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._fixed_length = fixed_length

    @property
    def fixed_principal_percentage_per_installment(self):
        """Gets the fixed_principal_percentage_per_installment of this GetLoanProductsResponse.  # noqa: E501


        :return: The fixed_principal_percentage_per_installment of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._fixed_principal_percentage_per_installment

    @fixed_principal_percentage_per_installment.setter
    def fixed_principal_percentage_per_installment(self, fixed_principal_percentage_per_installment):
        """Sets the fixed_principal_percentage_per_installment of this GetLoanProductsResponse.


        :param fixed_principal_percentage_per_installment: The fixed_principal_percentage_per_installment of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._fixed_principal_percentage_per_installment = fixed_principal_percentage_per_installment

    @property
    def id(self):
        """Gets the id of this GetLoanProductsResponse.  # noqa: E501


        :return: The id of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetLoanProductsResponse.


        :param id: The id of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def include_in_borrower_cycle(self):
        """Gets the include_in_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501


        :return: The include_in_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :rtype: bool
        """
        return self._include_in_borrower_cycle

    @include_in_borrower_cycle.setter
    def include_in_borrower_cycle(self, include_in_borrower_cycle):
        """Sets the include_in_borrower_cycle of this GetLoanProductsResponse.


        :param include_in_borrower_cycle: The include_in_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :type: bool
        """

        self._include_in_borrower_cycle = include_in_borrower_cycle

    @property
    def interest_calculation_period_type(self):
        """Gets the interest_calculation_period_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_calculation_period_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoansProductsInterestCalculationPeriodType
        """
        return self._interest_calculation_period_type

    @interest_calculation_period_type.setter
    def interest_calculation_period_type(self, interest_calculation_period_type):
        """Sets the interest_calculation_period_type of this GetLoanProductsResponse.


        :param interest_calculation_period_type: The interest_calculation_period_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoansProductsInterestCalculationPeriodType
        """

        self._interest_calculation_period_type = interest_calculation_period_type

    @property
    def interest_rate_frequency_type(self):
        """Gets the interest_rate_frequency_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_rate_frequency_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsInterestRateFrequencyType
        """
        return self._interest_rate_frequency_type

    @interest_rate_frequency_type.setter
    def interest_rate_frequency_type(self, interest_rate_frequency_type):
        """Sets the interest_rate_frequency_type of this GetLoanProductsResponse.


        :param interest_rate_frequency_type: The interest_rate_frequency_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsInterestRateFrequencyType
        """

        self._interest_rate_frequency_type = interest_rate_frequency_type

    @property
    def interest_rate_per_period(self):
        """Gets the interest_rate_per_period of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_rate_per_period of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._interest_rate_per_period

    @interest_rate_per_period.setter
    def interest_rate_per_period(self, interest_rate_per_period):
        """Sets the interest_rate_per_period of this GetLoanProductsResponse.


        :param interest_rate_per_period: The interest_rate_per_period of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._interest_rate_per_period = interest_rate_per_period

    @property
    def interest_rate_variations_for_borrower_cycle(self):
        """Gets the interest_rate_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_rate_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :rtype: list[int]
        """
        return self._interest_rate_variations_for_borrower_cycle

    @interest_rate_variations_for_borrower_cycle.setter
    def interest_rate_variations_for_borrower_cycle(self, interest_rate_variations_for_borrower_cycle):
        """Sets the interest_rate_variations_for_borrower_cycle of this GetLoanProductsResponse.


        :param interest_rate_variations_for_borrower_cycle: The interest_rate_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :type: list[int]
        """

        self._interest_rate_variations_for_borrower_cycle = interest_rate_variations_for_borrower_cycle

    @property
    def interest_recalculation_data(self):
        """Gets the interest_recalculation_data of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_recalculation_data of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsInterestRecalculationData
        """
        return self._interest_recalculation_data

    @interest_recalculation_data.setter
    def interest_recalculation_data(self, interest_recalculation_data):
        """Sets the interest_recalculation_data of this GetLoanProductsResponse.


        :param interest_recalculation_data: The interest_recalculation_data of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsInterestRecalculationData
        """

        self._interest_recalculation_data = interest_recalculation_data

    @property
    def interest_type(self):
        """Gets the interest_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The interest_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsInterestType
        """
        return self._interest_type

    @interest_type.setter
    def interest_type(self, interest_type):
        """Sets the interest_type of this GetLoanProductsResponse.


        :param interest_type: The interest_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsInterestType
        """

        self._interest_type = interest_type

    @property
    def is_interest_recalculation_enabled(self):
        """Gets the is_interest_recalculation_enabled of this GetLoanProductsResponse.  # noqa: E501


        :return: The is_interest_recalculation_enabled of this GetLoanProductsResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_interest_recalculation_enabled

    @is_interest_recalculation_enabled.setter
    def is_interest_recalculation_enabled(self, is_interest_recalculation_enabled):
        """Sets the is_interest_recalculation_enabled of this GetLoanProductsResponse.


        :param is_interest_recalculation_enabled: The is_interest_recalculation_enabled of this GetLoanProductsResponse.  # noqa: E501
        :type: bool
        """

        self._is_interest_recalculation_enabled = is_interest_recalculation_enabled

    @property
    def max_number_of_repayments(self):
        """Gets the max_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501


        :return: The max_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._max_number_of_repayments

    @max_number_of_repayments.setter
    def max_number_of_repayments(self, max_number_of_repayments):
        """Sets the max_number_of_repayments of this GetLoanProductsResponse.


        :param max_number_of_repayments: The max_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._max_number_of_repayments = max_number_of_repayments

    @property
    def max_principal(self):
        """Gets the max_principal of this GetLoanProductsResponse.  # noqa: E501


        :return: The max_principal of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._max_principal

    @max_principal.setter
    def max_principal(self, max_principal):
        """Sets the max_principal of this GetLoanProductsResponse.


        :param max_principal: The max_principal of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._max_principal = max_principal

    @property
    def min_number_of_repayments(self):
        """Gets the min_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501


        :return: The min_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._min_number_of_repayments

    @min_number_of_repayments.setter
    def min_number_of_repayments(self, min_number_of_repayments):
        """Sets the min_number_of_repayments of this GetLoanProductsResponse.


        :param min_number_of_repayments: The min_number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._min_number_of_repayments = min_number_of_repayments

    @property
    def min_principal(self):
        """Gets the min_principal of this GetLoanProductsResponse.  # noqa: E501


        :return: The min_principal of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._min_principal

    @min_principal.setter
    def min_principal(self, min_principal):
        """Sets the min_principal of this GetLoanProductsResponse.


        :param min_principal: The min_principal of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._min_principal = min_principal

    @property
    def name(self):
        """Gets the name of this GetLoanProductsResponse.  # noqa: E501


        :return: The name of this GetLoanProductsResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetLoanProductsResponse.


        :param name: The name of this GetLoanProductsResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def number_of_repayment_variations_for_borrower_cycle(self):
        """Gets the number_of_repayment_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501


        :return: The number_of_repayment_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :rtype: list[int]
        """
        return self._number_of_repayment_variations_for_borrower_cycle

    @number_of_repayment_variations_for_borrower_cycle.setter
    def number_of_repayment_variations_for_borrower_cycle(self, number_of_repayment_variations_for_borrower_cycle):
        """Sets the number_of_repayment_variations_for_borrower_cycle of this GetLoanProductsResponse.


        :param number_of_repayment_variations_for_borrower_cycle: The number_of_repayment_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :type: list[int]
        """

        self._number_of_repayment_variations_for_borrower_cycle = number_of_repayment_variations_for_borrower_cycle

    @property
    def number_of_repayments(self):
        """Gets the number_of_repayments of this GetLoanProductsResponse.  # noqa: E501


        :return: The number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._number_of_repayments

    @number_of_repayments.setter
    def number_of_repayments(self, number_of_repayments):
        """Sets the number_of_repayments of this GetLoanProductsResponse.


        :param number_of_repayments: The number_of_repayments of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._number_of_repayments = number_of_repayments

    @property
    def principal(self):
        """Gets the principal of this GetLoanProductsResponse.  # noqa: E501


        :return: The principal of this GetLoanProductsResponse.  # noqa: E501
        :rtype: float
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this GetLoanProductsResponse.


        :param principal: The principal of this GetLoanProductsResponse.  # noqa: E501
        :type: float
        """

        self._principal = principal

    @property
    def principal_threshold_for_last_instalment(self):
        """Gets the principal_threshold_for_last_instalment of this GetLoanProductsResponse.  # noqa: E501


        :return: The principal_threshold_for_last_instalment of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._principal_threshold_for_last_instalment

    @principal_threshold_for_last_instalment.setter
    def principal_threshold_for_last_instalment(self, principal_threshold_for_last_instalment):
        """Sets the principal_threshold_for_last_instalment of this GetLoanProductsResponse.


        :param principal_threshold_for_last_instalment: The principal_threshold_for_last_instalment of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._principal_threshold_for_last_instalment = principal_threshold_for_last_instalment

    @property
    def principal_variations_for_borrower_cycle(self):
        """Gets the principal_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501


        :return: The principal_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :rtype: list[int]
        """
        return self._principal_variations_for_borrower_cycle

    @principal_variations_for_borrower_cycle.setter
    def principal_variations_for_borrower_cycle(self, principal_variations_for_borrower_cycle):
        """Sets the principal_variations_for_borrower_cycle of this GetLoanProductsResponse.


        :param principal_variations_for_borrower_cycle: The principal_variations_for_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :type: list[int]
        """

        self._principal_variations_for_borrower_cycle = principal_variations_for_borrower_cycle

    @property
    def repayment_every(self):
        """Gets the repayment_every of this GetLoanProductsResponse.  # noqa: E501


        :return: The repayment_every of this GetLoanProductsResponse.  # noqa: E501
        :rtype: int
        """
        return self._repayment_every

    @repayment_every.setter
    def repayment_every(self, repayment_every):
        """Sets the repayment_every of this GetLoanProductsResponse.


        :param repayment_every: The repayment_every of this GetLoanProductsResponse.  # noqa: E501
        :type: int
        """

        self._repayment_every = repayment_every

    @property
    def repayment_frequency_type(self):
        """Gets the repayment_frequency_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The repayment_frequency_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsRepaymentFrequencyType
        """
        return self._repayment_frequency_type

    @repayment_frequency_type.setter
    def repayment_frequency_type(self, repayment_frequency_type):
        """Sets the repayment_frequency_type of this GetLoanProductsResponse.


        :param repayment_frequency_type: The repayment_frequency_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsRepaymentFrequencyType
        """

        self._repayment_frequency_type = repayment_frequency_type

    @property
    def repayment_start_date_type(self):
        """Gets the repayment_start_date_type of this GetLoanProductsResponse.  # noqa: E501


        :return: The repayment_start_date_type of this GetLoanProductsResponse.  # noqa: E501
        :rtype: GetLoanProductsRepaymentStartDateType
        """
        return self._repayment_start_date_type

    @repayment_start_date_type.setter
    def repayment_start_date_type(self, repayment_start_date_type):
        """Sets the repayment_start_date_type of this GetLoanProductsResponse.


        :param repayment_start_date_type: The repayment_start_date_type of this GetLoanProductsResponse.  # noqa: E501
        :type: GetLoanProductsRepaymentStartDateType
        """

        self._repayment_start_date_type = repayment_start_date_type

    @property
    def short_name(self):
        """Gets the short_name of this GetLoanProductsResponse.  # noqa: E501


        :return: The short_name of this GetLoanProductsResponse.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this GetLoanProductsResponse.


        :param short_name: The short_name of this GetLoanProductsResponse.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    @property
    def start_date(self):
        """Gets the start_date of this GetLoanProductsResponse.  # noqa: E501


        :return: The start_date of this GetLoanProductsResponse.  # noqa: E501
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this GetLoanProductsResponse.


        :param start_date: The start_date of this GetLoanProductsResponse.  # noqa: E501
        :type: date
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this GetLoanProductsResponse.  # noqa: E501


        :return: The status of this GetLoanProductsResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetLoanProductsResponse.


        :param status: The status of this GetLoanProductsResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def supported_interest_refund_types(self):
        """Gets the supported_interest_refund_types of this GetLoanProductsResponse.  # noqa: E501


        :return: The supported_interest_refund_types of this GetLoanProductsResponse.  # noqa: E501
        :rtype: list[StringEnumOptionData]
        """
        return self._supported_interest_refund_types

    @supported_interest_refund_types.setter
    def supported_interest_refund_types(self, supported_interest_refund_types):
        """Sets the supported_interest_refund_types of this GetLoanProductsResponse.


        :param supported_interest_refund_types: The supported_interest_refund_types of this GetLoanProductsResponse.  # noqa: E501
        :type: list[StringEnumOptionData]
        """

        self._supported_interest_refund_types = supported_interest_refund_types

    @property
    def transaction_processing_strategy(self):
        """Gets the transaction_processing_strategy of this GetLoanProductsResponse.  # noqa: E501


        :return: The transaction_processing_strategy of this GetLoanProductsResponse.  # noqa: E501
        :rtype: str
        """
        return self._transaction_processing_strategy

    @transaction_processing_strategy.setter
    def transaction_processing_strategy(self, transaction_processing_strategy):
        """Sets the transaction_processing_strategy of this GetLoanProductsResponse.


        :param transaction_processing_strategy: The transaction_processing_strategy of this GetLoanProductsResponse.  # noqa: E501
        :type: str
        """

        self._transaction_processing_strategy = transaction_processing_strategy

    @property
    def transaction_processing_strategy_name(self):
        """Gets the transaction_processing_strategy_name of this GetLoanProductsResponse.  # noqa: E501


        :return: The transaction_processing_strategy_name of this GetLoanProductsResponse.  # noqa: E501
        :rtype: str
        """
        return self._transaction_processing_strategy_name

    @transaction_processing_strategy_name.setter
    def transaction_processing_strategy_name(self, transaction_processing_strategy_name):
        """Sets the transaction_processing_strategy_name of this GetLoanProductsResponse.


        :param transaction_processing_strategy_name: The transaction_processing_strategy_name of this GetLoanProductsResponse.  # noqa: E501
        :type: str
        """

        self._transaction_processing_strategy_name = transaction_processing_strategy_name

    @property
    def use_borrower_cycle(self):
        """Gets the use_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501


        :return: The use_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :rtype: bool
        """
        return self._use_borrower_cycle

    @use_borrower_cycle.setter
    def use_borrower_cycle(self, use_borrower_cycle):
        """Sets the use_borrower_cycle of this GetLoanProductsResponse.


        :param use_borrower_cycle: The use_borrower_cycle of this GetLoanProductsResponse.  # noqa: E501
        :type: bool
        """

        self._use_borrower_cycle = use_borrower_cycle

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetLoanProductsResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetLoanProductsResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
