# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetLoansLoanIdTransactions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'int',
        'account_number': 'str',
        'amount': 'float',
        'bank_number': 'int',
        'check_number': 'int',
        'currency': 'GetLoansLoanIdCurrency',
        '_date': 'date',
        'date_format': 'str',
        'external_id': 'str',
        'fee_charges_portion': 'float',
        'fixed_emi_amount': 'float',
        'id': 'int',
        'interest_portion': 'float',
        'loan_charge_paid_by_list': 'list[GetLoansLoanIdLoanChargePaidByData]',
        'loan_repayment_schedule_installments': 'list[GetLoansLoanIdLoanRepaymentScheduleInstallmentData]',
        'locale': 'str',
        'manually_reversed': 'bool',
        'net_disbursal_amount': 'float',
        'number_of_repayments': 'int',
        'office_id': 'int',
        'office_name': 'str',
        'outstanding_loan_balance': 'float',
        'overpayment_portion': 'float',
        'payment_detail_data': 'GetLoansLoanIdPaymentDetailData',
        'payment_type_id': 'int',
        'payment_type_options': 'list[GetLoansLoanIdPaymentType]',
        'penalty_charges_portion': 'float',
        'possible_next_repayment_date': 'date',
        'principal_portion': 'float',
        'receipt_number': 'int',
        'reversal_external_id': 'str',
        'reversed_on_date': 'date',
        'routing_code': 'int',
        'submitted_on_date': 'date',
        'transaction_amount': 'float',
        'transaction_date': 'date',
        'transaction_relations': 'list[GetLoansLoanIdLoanTransactionRelation]',
        'transaction_type': 'str',
        'type': 'GetLoansLoanIdLoanTransactionEnumData',
        'unrecognized_income_portion': 'float',
        'write_off_reason_options': 'list[GetLoansLoanIdCodeValueData]'
    }

    attribute_map = {
        'account_id': 'accountId',
        'account_number': 'accountNumber',
        'amount': 'amount',
        'bank_number': 'bankNumber',
        'check_number': 'checkNumber',
        'currency': 'currency',
        '_date': 'date',
        'date_format': 'dateFormat',
        'external_id': 'externalId',
        'fee_charges_portion': 'feeChargesPortion',
        'fixed_emi_amount': 'fixedEmiAmount',
        'id': 'id',
        'interest_portion': 'interestPortion',
        'loan_charge_paid_by_list': 'loanChargePaidByList',
        'loan_repayment_schedule_installments': 'loanRepaymentScheduleInstallments',
        'locale': 'locale',
        'manually_reversed': 'manuallyReversed',
        'net_disbursal_amount': 'netDisbursalAmount',
        'number_of_repayments': 'numberOfRepayments',
        'office_id': 'officeId',
        'office_name': 'officeName',
        'outstanding_loan_balance': 'outstandingLoanBalance',
        'overpayment_portion': 'overpaymentPortion',
        'payment_detail_data': 'paymentDetailData',
        'payment_type_id': 'paymentTypeId',
        'payment_type_options': 'paymentTypeOptions',
        'penalty_charges_portion': 'penaltyChargesPortion',
        'possible_next_repayment_date': 'possibleNextRepaymentDate',
        'principal_portion': 'principalPortion',
        'receipt_number': 'receiptNumber',
        'reversal_external_id': 'reversalExternalId',
        'reversed_on_date': 'reversedOnDate',
        'routing_code': 'routingCode',
        'submitted_on_date': 'submittedOnDate',
        'transaction_amount': 'transactionAmount',
        'transaction_date': 'transactionDate',
        'transaction_relations': 'transactionRelations',
        'transaction_type': 'transactionType',
        'type': 'type',
        'unrecognized_income_portion': 'unrecognizedIncomePortion',
        'write_off_reason_options': 'writeOffReasonOptions'
    }

    def __init__(self, account_id=None, account_number=None, amount=None, bank_number=None, check_number=None, currency=None, _date=None, date_format=None, external_id=None, fee_charges_portion=None, fixed_emi_amount=None, id=None, interest_portion=None, loan_charge_paid_by_list=None, loan_repayment_schedule_installments=None, locale=None, manually_reversed=None, net_disbursal_amount=None, number_of_repayments=None, office_id=None, office_name=None, outstanding_loan_balance=None, overpayment_portion=None, payment_detail_data=None, payment_type_id=None, payment_type_options=None, penalty_charges_portion=None, possible_next_repayment_date=None, principal_portion=None, receipt_number=None, reversal_external_id=None, reversed_on_date=None, routing_code=None, submitted_on_date=None, transaction_amount=None, transaction_date=None, transaction_relations=None, transaction_type=None, type=None, unrecognized_income_portion=None, write_off_reason_options=None):  # noqa: E501
        """GetLoansLoanIdTransactions - a model defined in Swagger"""  # noqa: E501
        self._account_id = None
        self._account_number = None
        self._amount = None
        self._bank_number = None
        self._check_number = None
        self._currency = None
        self.__date = None
        self._date_format = None
        self._external_id = None
        self._fee_charges_portion = None
        self._fixed_emi_amount = None
        self._id = None
        self._interest_portion = None
        self._loan_charge_paid_by_list = None
        self._loan_repayment_schedule_installments = None
        self._locale = None
        self._manually_reversed = None
        self._net_disbursal_amount = None
        self._number_of_repayments = None
        self._office_id = None
        self._office_name = None
        self._outstanding_loan_balance = None
        self._overpayment_portion = None
        self._payment_detail_data = None
        self._payment_type_id = None
        self._payment_type_options = None
        self._penalty_charges_portion = None
        self._possible_next_repayment_date = None
        self._principal_portion = None
        self._receipt_number = None
        self._reversal_external_id = None
        self._reversed_on_date = None
        self._routing_code = None
        self._submitted_on_date = None
        self._transaction_amount = None
        self._transaction_date = None
        self._transaction_relations = None
        self._transaction_type = None
        self._type = None
        self._unrecognized_income_portion = None
        self._write_off_reason_options = None
        self.discriminator = None
        if account_id is not None:
            self.account_id = account_id
        if account_number is not None:
            self.account_number = account_number
        if amount is not None:
            self.amount = amount
        if bank_number is not None:
            self.bank_number = bank_number
        if check_number is not None:
            self.check_number = check_number
        if currency is not None:
            self.currency = currency
        if _date is not None:
            self._date = _date
        if date_format is not None:
            self.date_format = date_format
        if external_id is not None:
            self.external_id = external_id
        if fee_charges_portion is not None:
            self.fee_charges_portion = fee_charges_portion
        if fixed_emi_amount is not None:
            self.fixed_emi_amount = fixed_emi_amount
        if id is not None:
            self.id = id
        if interest_portion is not None:
            self.interest_portion = interest_portion
        if loan_charge_paid_by_list is not None:
            self.loan_charge_paid_by_list = loan_charge_paid_by_list
        if loan_repayment_schedule_installments is not None:
            self.loan_repayment_schedule_installments = loan_repayment_schedule_installments
        if locale is not None:
            self.locale = locale
        if manually_reversed is not None:
            self.manually_reversed = manually_reversed
        if net_disbursal_amount is not None:
            self.net_disbursal_amount = net_disbursal_amount
        if number_of_repayments is not None:
            self.number_of_repayments = number_of_repayments
        if office_id is not None:
            self.office_id = office_id
        if office_name is not None:
            self.office_name = office_name
        if outstanding_loan_balance is not None:
            self.outstanding_loan_balance = outstanding_loan_balance
        if overpayment_portion is not None:
            self.overpayment_portion = overpayment_portion
        if payment_detail_data is not None:
            self.payment_detail_data = payment_detail_data
        if payment_type_id is not None:
            self.payment_type_id = payment_type_id
        if payment_type_options is not None:
            self.payment_type_options = payment_type_options
        if penalty_charges_portion is not None:
            self.penalty_charges_portion = penalty_charges_portion
        if possible_next_repayment_date is not None:
            self.possible_next_repayment_date = possible_next_repayment_date
        if principal_portion is not None:
            self.principal_portion = principal_portion
        if receipt_number is not None:
            self.receipt_number = receipt_number
        if reversal_external_id is not None:
            self.reversal_external_id = reversal_external_id
        if reversed_on_date is not None:
            self.reversed_on_date = reversed_on_date
        if routing_code is not None:
            self.routing_code = routing_code
        if submitted_on_date is not None:
            self.submitted_on_date = submitted_on_date
        if transaction_amount is not None:
            self.transaction_amount = transaction_amount
        if transaction_date is not None:
            self.transaction_date = transaction_date
        if transaction_relations is not None:
            self.transaction_relations = transaction_relations
        if transaction_type is not None:
            self.transaction_type = transaction_type
        if type is not None:
            self.type = type
        if unrecognized_income_portion is not None:
            self.unrecognized_income_portion = unrecognized_income_portion
        if write_off_reason_options is not None:
            self.write_off_reason_options = write_off_reason_options

    @property
    def account_id(self):
        """Gets the account_id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The account_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetLoansLoanIdTransactions.


        :param account_id: The account_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def account_number(self):
        """Gets the account_number of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The account_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this GetLoansLoanIdTransactions.


        :param account_number: The account_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def amount(self):
        """Gets the amount of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetLoansLoanIdTransactions.


        :param amount: The amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._amount = amount

    @property
    def bank_number(self):
        """Gets the bank_number of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The bank_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._bank_number

    @bank_number.setter
    def bank_number(self, bank_number):
        """Sets the bank_number of this GetLoansLoanIdTransactions.


        :param bank_number: The bank_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._bank_number = bank_number

    @property
    def check_number(self):
        """Gets the check_number of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The check_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._check_number

    @check_number.setter
    def check_number(self, check_number):
        """Sets the check_number of this GetLoansLoanIdTransactions.


        :param check_number: The check_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._check_number = check_number

    @property
    def currency(self):
        """Gets the currency of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The currency of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: GetLoansLoanIdCurrency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this GetLoansLoanIdTransactions.


        :param currency: The currency of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: GetLoansLoanIdCurrency
        """

        self._currency = currency

    @property
    def _date(self):
        """Gets the _date of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The _date of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this GetLoansLoanIdTransactions.


        :param _date: The _date of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: date
        """

        self.__date = _date

    @property
    def date_format(self):
        """Gets the date_format of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The date_format of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this GetLoansLoanIdTransactions.


        :param date_format: The date_format of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._date_format = date_format

    @property
    def external_id(self):
        """Gets the external_id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The external_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this GetLoansLoanIdTransactions.


        :param external_id: The external_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def fee_charges_portion(self):
        """Gets the fee_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The fee_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_portion

    @fee_charges_portion.setter
    def fee_charges_portion(self, fee_charges_portion):
        """Sets the fee_charges_portion of this GetLoansLoanIdTransactions.


        :param fee_charges_portion: The fee_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._fee_charges_portion = fee_charges_portion

    @property
    def fixed_emi_amount(self):
        """Gets the fixed_emi_amount of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The fixed_emi_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._fixed_emi_amount

    @fixed_emi_amount.setter
    def fixed_emi_amount(self, fixed_emi_amount):
        """Sets the fixed_emi_amount of this GetLoansLoanIdTransactions.


        :param fixed_emi_amount: The fixed_emi_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._fixed_emi_amount = fixed_emi_amount

    @property
    def id(self):
        """Gets the id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetLoansLoanIdTransactions.


        :param id: The id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def interest_portion(self):
        """Gets the interest_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The interest_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._interest_portion

    @interest_portion.setter
    def interest_portion(self, interest_portion):
        """Sets the interest_portion of this GetLoansLoanIdTransactions.


        :param interest_portion: The interest_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._interest_portion = interest_portion

    @property
    def loan_charge_paid_by_list(self):
        """Gets the loan_charge_paid_by_list of this GetLoansLoanIdTransactions.  # noqa: E501

        List of GetLoansLoanIdLoanChargePaidByData  # noqa: E501

        :return: The loan_charge_paid_by_list of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: list[GetLoansLoanIdLoanChargePaidByData]
        """
        return self._loan_charge_paid_by_list

    @loan_charge_paid_by_list.setter
    def loan_charge_paid_by_list(self, loan_charge_paid_by_list):
        """Sets the loan_charge_paid_by_list of this GetLoansLoanIdTransactions.

        List of GetLoansLoanIdLoanChargePaidByData  # noqa: E501

        :param loan_charge_paid_by_list: The loan_charge_paid_by_list of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: list[GetLoansLoanIdLoanChargePaidByData]
        """

        self._loan_charge_paid_by_list = loan_charge_paid_by_list

    @property
    def loan_repayment_schedule_installments(self):
        """Gets the loan_repayment_schedule_installments of this GetLoansLoanIdTransactions.  # noqa: E501

        List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData  # noqa: E501

        :return: The loan_repayment_schedule_installments of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: list[GetLoansLoanIdLoanRepaymentScheduleInstallmentData]
        """
        return self._loan_repayment_schedule_installments

    @loan_repayment_schedule_installments.setter
    def loan_repayment_schedule_installments(self, loan_repayment_schedule_installments):
        """Sets the loan_repayment_schedule_installments of this GetLoansLoanIdTransactions.

        List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData  # noqa: E501

        :param loan_repayment_schedule_installments: The loan_repayment_schedule_installments of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: list[GetLoansLoanIdLoanRepaymentScheduleInstallmentData]
        """

        self._loan_repayment_schedule_installments = loan_repayment_schedule_installments

    @property
    def locale(self):
        """Gets the locale of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The locale of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this GetLoansLoanIdTransactions.


        :param locale: The locale of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def manually_reversed(self):
        """Gets the manually_reversed of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The manually_reversed of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: bool
        """
        return self._manually_reversed

    @manually_reversed.setter
    def manually_reversed(self, manually_reversed):
        """Sets the manually_reversed of this GetLoansLoanIdTransactions.


        :param manually_reversed: The manually_reversed of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: bool
        """

        self._manually_reversed = manually_reversed

    @property
    def net_disbursal_amount(self):
        """Gets the net_disbursal_amount of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The net_disbursal_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._net_disbursal_amount

    @net_disbursal_amount.setter
    def net_disbursal_amount(self, net_disbursal_amount):
        """Sets the net_disbursal_amount of this GetLoansLoanIdTransactions.


        :param net_disbursal_amount: The net_disbursal_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._net_disbursal_amount = net_disbursal_amount

    @property
    def number_of_repayments(self):
        """Gets the number_of_repayments of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The number_of_repayments of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._number_of_repayments

    @number_of_repayments.setter
    def number_of_repayments(self, number_of_repayments):
        """Sets the number_of_repayments of this GetLoansLoanIdTransactions.


        :param number_of_repayments: The number_of_repayments of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._number_of_repayments = number_of_repayments

    @property
    def office_id(self):
        """Gets the office_id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The office_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._office_id

    @office_id.setter
    def office_id(self, office_id):
        """Sets the office_id of this GetLoansLoanIdTransactions.


        :param office_id: The office_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._office_id = office_id

    @property
    def office_name(self):
        """Gets the office_name of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The office_name of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._office_name

    @office_name.setter
    def office_name(self, office_name):
        """Sets the office_name of this GetLoansLoanIdTransactions.


        :param office_name: The office_name of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._office_name = office_name

    @property
    def outstanding_loan_balance(self):
        """Gets the outstanding_loan_balance of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The outstanding_loan_balance of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._outstanding_loan_balance

    @outstanding_loan_balance.setter
    def outstanding_loan_balance(self, outstanding_loan_balance):
        """Sets the outstanding_loan_balance of this GetLoansLoanIdTransactions.


        :param outstanding_loan_balance: The outstanding_loan_balance of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._outstanding_loan_balance = outstanding_loan_balance

    @property
    def overpayment_portion(self):
        """Gets the overpayment_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The overpayment_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._overpayment_portion

    @overpayment_portion.setter
    def overpayment_portion(self, overpayment_portion):
        """Sets the overpayment_portion of this GetLoansLoanIdTransactions.


        :param overpayment_portion: The overpayment_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._overpayment_portion = overpayment_portion

    @property
    def payment_detail_data(self):
        """Gets the payment_detail_data of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The payment_detail_data of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: GetLoansLoanIdPaymentDetailData
        """
        return self._payment_detail_data

    @payment_detail_data.setter
    def payment_detail_data(self, payment_detail_data):
        """Sets the payment_detail_data of this GetLoansLoanIdTransactions.


        :param payment_detail_data: The payment_detail_data of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: GetLoansLoanIdPaymentDetailData
        """

        self._payment_detail_data = payment_detail_data

    @property
    def payment_type_id(self):
        """Gets the payment_type_id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The payment_type_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._payment_type_id

    @payment_type_id.setter
    def payment_type_id(self, payment_type_id):
        """Sets the payment_type_id of this GetLoansLoanIdTransactions.


        :param payment_type_id: The payment_type_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._payment_type_id = payment_type_id

    @property
    def payment_type_options(self):
        """Gets the payment_type_options of this GetLoansLoanIdTransactions.  # noqa: E501

        List of GetLoansLoanIdPaymentType  # noqa: E501

        :return: The payment_type_options of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: list[GetLoansLoanIdPaymentType]
        """
        return self._payment_type_options

    @payment_type_options.setter
    def payment_type_options(self, payment_type_options):
        """Sets the payment_type_options of this GetLoansLoanIdTransactions.

        List of GetLoansLoanIdPaymentType  # noqa: E501

        :param payment_type_options: The payment_type_options of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: list[GetLoansLoanIdPaymentType]
        """

        self._payment_type_options = payment_type_options

    @property
    def penalty_charges_portion(self):
        """Gets the penalty_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The penalty_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_portion

    @penalty_charges_portion.setter
    def penalty_charges_portion(self, penalty_charges_portion):
        """Sets the penalty_charges_portion of this GetLoansLoanIdTransactions.


        :param penalty_charges_portion: The penalty_charges_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._penalty_charges_portion = penalty_charges_portion

    @property
    def possible_next_repayment_date(self):
        """Gets the possible_next_repayment_date of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The possible_next_repayment_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: date
        """
        return self._possible_next_repayment_date

    @possible_next_repayment_date.setter
    def possible_next_repayment_date(self, possible_next_repayment_date):
        """Sets the possible_next_repayment_date of this GetLoansLoanIdTransactions.


        :param possible_next_repayment_date: The possible_next_repayment_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: date
        """

        self._possible_next_repayment_date = possible_next_repayment_date

    @property
    def principal_portion(self):
        """Gets the principal_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The principal_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._principal_portion

    @principal_portion.setter
    def principal_portion(self, principal_portion):
        """Sets the principal_portion of this GetLoansLoanIdTransactions.


        :param principal_portion: The principal_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._principal_portion = principal_portion

    @property
    def receipt_number(self):
        """Gets the receipt_number of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The receipt_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._receipt_number

    @receipt_number.setter
    def receipt_number(self, receipt_number):
        """Sets the receipt_number of this GetLoansLoanIdTransactions.


        :param receipt_number: The receipt_number of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._receipt_number = receipt_number

    @property
    def reversal_external_id(self):
        """Gets the reversal_external_id of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The reversal_external_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._reversal_external_id

    @reversal_external_id.setter
    def reversal_external_id(self, reversal_external_id):
        """Sets the reversal_external_id of this GetLoansLoanIdTransactions.


        :param reversal_external_id: The reversal_external_id of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._reversal_external_id = reversal_external_id

    @property
    def reversed_on_date(self):
        """Gets the reversed_on_date of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The reversed_on_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: date
        """
        return self._reversed_on_date

    @reversed_on_date.setter
    def reversed_on_date(self, reversed_on_date):
        """Sets the reversed_on_date of this GetLoansLoanIdTransactions.


        :param reversed_on_date: The reversed_on_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: date
        """

        self._reversed_on_date = reversed_on_date

    @property
    def routing_code(self):
        """Gets the routing_code of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The routing_code of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: int
        """
        return self._routing_code

    @routing_code.setter
    def routing_code(self, routing_code):
        """Sets the routing_code of this GetLoansLoanIdTransactions.


        :param routing_code: The routing_code of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: int
        """

        self._routing_code = routing_code

    @property
    def submitted_on_date(self):
        """Gets the submitted_on_date of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The submitted_on_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: date
        """
        return self._submitted_on_date

    @submitted_on_date.setter
    def submitted_on_date(self, submitted_on_date):
        """Sets the submitted_on_date of this GetLoansLoanIdTransactions.


        :param submitted_on_date: The submitted_on_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: date
        """

        self._submitted_on_date = submitted_on_date

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The transaction_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this GetLoansLoanIdTransactions.


        :param transaction_amount: The transaction_amount of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._transaction_amount = transaction_amount

    @property
    def transaction_date(self):
        """Gets the transaction_date of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The transaction_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: date
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this GetLoansLoanIdTransactions.


        :param transaction_date: The transaction_date of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: date
        """

        self._transaction_date = transaction_date

    @property
    def transaction_relations(self):
        """Gets the transaction_relations of this GetLoansLoanIdTransactions.  # noqa: E501

        List of GetLoansLoanIdLoanTransactionRelationData  # noqa: E501

        :return: The transaction_relations of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: list[GetLoansLoanIdLoanTransactionRelation]
        """
        return self._transaction_relations

    @transaction_relations.setter
    def transaction_relations(self, transaction_relations):
        """Sets the transaction_relations of this GetLoansLoanIdTransactions.

        List of GetLoansLoanIdLoanTransactionRelationData  # noqa: E501

        :param transaction_relations: The transaction_relations of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: list[GetLoansLoanIdLoanTransactionRelation]
        """

        self._transaction_relations = transaction_relations

    @property
    def transaction_type(self):
        """Gets the transaction_type of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The transaction_type of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: str
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this GetLoansLoanIdTransactions.


        :param transaction_type: The transaction_type of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: str
        """

        self._transaction_type = transaction_type

    @property
    def type(self):
        """Gets the type of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The type of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: GetLoansLoanIdLoanTransactionEnumData
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetLoansLoanIdTransactions.


        :param type: The type of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: GetLoansLoanIdLoanTransactionEnumData
        """

        self._type = type

    @property
    def unrecognized_income_portion(self):
        """Gets the unrecognized_income_portion of this GetLoansLoanIdTransactions.  # noqa: E501


        :return: The unrecognized_income_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: float
        """
        return self._unrecognized_income_portion

    @unrecognized_income_portion.setter
    def unrecognized_income_portion(self, unrecognized_income_portion):
        """Sets the unrecognized_income_portion of this GetLoansLoanIdTransactions.


        :param unrecognized_income_portion: The unrecognized_income_portion of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: float
        """

        self._unrecognized_income_portion = unrecognized_income_portion

    @property
    def write_off_reason_options(self):
        """Gets the write_off_reason_options of this GetLoansLoanIdTransactions.  # noqa: E501

        List of GetLoansLoanIdCodeValueData  # noqa: E501

        :return: The write_off_reason_options of this GetLoansLoanIdTransactions.  # noqa: E501
        :rtype: list[GetLoansLoanIdCodeValueData]
        """
        return self._write_off_reason_options

    @write_off_reason_options.setter
    def write_off_reason_options(self, write_off_reason_options):
        """Sets the write_off_reason_options of this GetLoansLoanIdTransactions.

        List of GetLoansLoanIdCodeValueData  # noqa: E501

        :param write_off_reason_options: The write_off_reason_options of this GetLoansLoanIdTransactions.  # noqa: E501
        :type: list[GetLoansLoanIdCodeValueData]
        """

        self._write_off_reason_options = write_off_reason_options

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetLoansLoanIdTransactions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetLoansLoanIdTransactions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
