# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PostFixedDepositProductsRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accounting_rule': 'int',
        'charts': 'list[PostFixedDepositProductsCharts]',
        'currency_code': 'str',
        'description': 'str',
        'digits_after_decimal': 'int',
        'in_multiples_of': 'int',
        'interest_calculation_days_in_year_type': 'int',
        'interest_calculation_type': 'int',
        'interest_compounding_period_type': 'int',
        'interest_posting_period_type': 'int',
        'locale': 'str',
        'max_deposit_term': 'int',
        'max_deposit_term_type_id': 'int',
        'min_deposit_term': 'int',
        'min_deposit_term_type_id': 'int',
        'name': 'str',
        'pre_closure_penal_applicable': 'bool',
        'pre_closure_penal_interest': 'float',
        'pre_closure_penal_interest_on_type_id': 'int',
        'short_name': 'str'
    }

    attribute_map = {
        'accounting_rule': 'accountingRule',
        'charts': 'charts',
        'currency_code': 'currencyCode',
        'description': 'description',
        'digits_after_decimal': 'digitsAfterDecimal',
        'in_multiples_of': 'inMultiplesOf',
        'interest_calculation_days_in_year_type': 'interestCalculationDaysInYearType',
        'interest_calculation_type': 'interestCalculationType',
        'interest_compounding_period_type': 'interestCompoundingPeriodType',
        'interest_posting_period_type': 'interestPostingPeriodType',
        'locale': 'locale',
        'max_deposit_term': 'maxDepositTerm',
        'max_deposit_term_type_id': 'maxDepositTermTypeId',
        'min_deposit_term': 'minDepositTerm',
        'min_deposit_term_type_id': 'minDepositTermTypeId',
        'name': 'name',
        'pre_closure_penal_applicable': 'preClosurePenalApplicable',
        'pre_closure_penal_interest': 'preClosurePenalInterest',
        'pre_closure_penal_interest_on_type_id': 'preClosurePenalInterestOnTypeId',
        'short_name': 'shortName'
    }

    def __init__(self, accounting_rule=None, charts=None, currency_code=None, description=None, digits_after_decimal=None, in_multiples_of=None, interest_calculation_days_in_year_type=None, interest_calculation_type=None, interest_compounding_period_type=None, interest_posting_period_type=None, locale=None, max_deposit_term=None, max_deposit_term_type_id=None, min_deposit_term=None, min_deposit_term_type_id=None, name=None, pre_closure_penal_applicable=None, pre_closure_penal_interest=None, pre_closure_penal_interest_on_type_id=None, short_name=None):  # noqa: E501
        """PostFixedDepositProductsRequest - a model defined in Swagger"""  # noqa: E501
        self._accounting_rule = None
        self._charts = None
        self._currency_code = None
        self._description = None
        self._digits_after_decimal = None
        self._in_multiples_of = None
        self._interest_calculation_days_in_year_type = None
        self._interest_calculation_type = None
        self._interest_compounding_period_type = None
        self._interest_posting_period_type = None
        self._locale = None
        self._max_deposit_term = None
        self._max_deposit_term_type_id = None
        self._min_deposit_term = None
        self._min_deposit_term_type_id = None
        self._name = None
        self._pre_closure_penal_applicable = None
        self._pre_closure_penal_interest = None
        self._pre_closure_penal_interest_on_type_id = None
        self._short_name = None
        self.discriminator = None
        if accounting_rule is not None:
            self.accounting_rule = accounting_rule
        if charts is not None:
            self.charts = charts
        if currency_code is not None:
            self.currency_code = currency_code
        if description is not None:
            self.description = description
        if digits_after_decimal is not None:
            self.digits_after_decimal = digits_after_decimal
        if in_multiples_of is not None:
            self.in_multiples_of = in_multiples_of
        if interest_calculation_days_in_year_type is not None:
            self.interest_calculation_days_in_year_type = interest_calculation_days_in_year_type
        if interest_calculation_type is not None:
            self.interest_calculation_type = interest_calculation_type
        if interest_compounding_period_type is not None:
            self.interest_compounding_period_type = interest_compounding_period_type
        if interest_posting_period_type is not None:
            self.interest_posting_period_type = interest_posting_period_type
        if locale is not None:
            self.locale = locale
        if max_deposit_term is not None:
            self.max_deposit_term = max_deposit_term
        if max_deposit_term_type_id is not None:
            self.max_deposit_term_type_id = max_deposit_term_type_id
        if min_deposit_term is not None:
            self.min_deposit_term = min_deposit_term
        if min_deposit_term_type_id is not None:
            self.min_deposit_term_type_id = min_deposit_term_type_id
        if name is not None:
            self.name = name
        if pre_closure_penal_applicable is not None:
            self.pre_closure_penal_applicable = pre_closure_penal_applicable
        if pre_closure_penal_interest is not None:
            self.pre_closure_penal_interest = pre_closure_penal_interest
        if pre_closure_penal_interest_on_type_id is not None:
            self.pre_closure_penal_interest_on_type_id = pre_closure_penal_interest_on_type_id
        if short_name is not None:
            self.short_name = short_name

    @property
    def accounting_rule(self):
        """Gets the accounting_rule of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The accounting_rule of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._accounting_rule

    @accounting_rule.setter
    def accounting_rule(self, accounting_rule):
        """Sets the accounting_rule of this PostFixedDepositProductsRequest.


        :param accounting_rule: The accounting_rule of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._accounting_rule = accounting_rule

    @property
    def charts(self):
        """Gets the charts of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The charts of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: list[PostFixedDepositProductsCharts]
        """
        return self._charts

    @charts.setter
    def charts(self, charts):
        """Sets the charts of this PostFixedDepositProductsRequest.


        :param charts: The charts of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: list[PostFixedDepositProductsCharts]
        """

        self._charts = charts

    @property
    def currency_code(self):
        """Gets the currency_code of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The currency_code of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this PostFixedDepositProductsRequest.


        :param currency_code: The currency_code of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def description(self):
        """Gets the description of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The description of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PostFixedDepositProductsRequest.


        :param description: The description of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def digits_after_decimal(self):
        """Gets the digits_after_decimal of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The digits_after_decimal of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._digits_after_decimal

    @digits_after_decimal.setter
    def digits_after_decimal(self, digits_after_decimal):
        """Sets the digits_after_decimal of this PostFixedDepositProductsRequest.


        :param digits_after_decimal: The digits_after_decimal of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._digits_after_decimal = digits_after_decimal

    @property
    def in_multiples_of(self):
        """Gets the in_multiples_of of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The in_multiples_of of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._in_multiples_of

    @in_multiples_of.setter
    def in_multiples_of(self, in_multiples_of):
        """Sets the in_multiples_of of this PostFixedDepositProductsRequest.


        :param in_multiples_of: The in_multiples_of of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._in_multiples_of = in_multiples_of

    @property
    def interest_calculation_days_in_year_type(self):
        """Gets the interest_calculation_days_in_year_type of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The interest_calculation_days_in_year_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._interest_calculation_days_in_year_type

    @interest_calculation_days_in_year_type.setter
    def interest_calculation_days_in_year_type(self, interest_calculation_days_in_year_type):
        """Sets the interest_calculation_days_in_year_type of this PostFixedDepositProductsRequest.


        :param interest_calculation_days_in_year_type: The interest_calculation_days_in_year_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._interest_calculation_days_in_year_type = interest_calculation_days_in_year_type

    @property
    def interest_calculation_type(self):
        """Gets the interest_calculation_type of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The interest_calculation_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._interest_calculation_type

    @interest_calculation_type.setter
    def interest_calculation_type(self, interest_calculation_type):
        """Sets the interest_calculation_type of this PostFixedDepositProductsRequest.


        :param interest_calculation_type: The interest_calculation_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._interest_calculation_type = interest_calculation_type

    @property
    def interest_compounding_period_type(self):
        """Gets the interest_compounding_period_type of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The interest_compounding_period_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._interest_compounding_period_type

    @interest_compounding_period_type.setter
    def interest_compounding_period_type(self, interest_compounding_period_type):
        """Sets the interest_compounding_period_type of this PostFixedDepositProductsRequest.


        :param interest_compounding_period_type: The interest_compounding_period_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._interest_compounding_period_type = interest_compounding_period_type

    @property
    def interest_posting_period_type(self):
        """Gets the interest_posting_period_type of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The interest_posting_period_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._interest_posting_period_type

    @interest_posting_period_type.setter
    def interest_posting_period_type(self, interest_posting_period_type):
        """Sets the interest_posting_period_type of this PostFixedDepositProductsRequest.


        :param interest_posting_period_type: The interest_posting_period_type of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._interest_posting_period_type = interest_posting_period_type

    @property
    def locale(self):
        """Gets the locale of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The locale of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this PostFixedDepositProductsRequest.


        :param locale: The locale of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def max_deposit_term(self):
        """Gets the max_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The max_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._max_deposit_term

    @max_deposit_term.setter
    def max_deposit_term(self, max_deposit_term):
        """Sets the max_deposit_term of this PostFixedDepositProductsRequest.


        :param max_deposit_term: The max_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._max_deposit_term = max_deposit_term

    @property
    def max_deposit_term_type_id(self):
        """Gets the max_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The max_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._max_deposit_term_type_id

    @max_deposit_term_type_id.setter
    def max_deposit_term_type_id(self, max_deposit_term_type_id):
        """Sets the max_deposit_term_type_id of this PostFixedDepositProductsRequest.


        :param max_deposit_term_type_id: The max_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._max_deposit_term_type_id = max_deposit_term_type_id

    @property
    def min_deposit_term(self):
        """Gets the min_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The min_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._min_deposit_term

    @min_deposit_term.setter
    def min_deposit_term(self, min_deposit_term):
        """Sets the min_deposit_term of this PostFixedDepositProductsRequest.


        :param min_deposit_term: The min_deposit_term of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._min_deposit_term = min_deposit_term

    @property
    def min_deposit_term_type_id(self):
        """Gets the min_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The min_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._min_deposit_term_type_id

    @min_deposit_term_type_id.setter
    def min_deposit_term_type_id(self, min_deposit_term_type_id):
        """Sets the min_deposit_term_type_id of this PostFixedDepositProductsRequest.


        :param min_deposit_term_type_id: The min_deposit_term_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._min_deposit_term_type_id = min_deposit_term_type_id

    @property
    def name(self):
        """Gets the name of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The name of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostFixedDepositProductsRequest.


        :param name: The name of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def pre_closure_penal_applicable(self):
        """Gets the pre_closure_penal_applicable of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The pre_closure_penal_applicable of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: bool
        """
        return self._pre_closure_penal_applicable

    @pre_closure_penal_applicable.setter
    def pre_closure_penal_applicable(self, pre_closure_penal_applicable):
        """Sets the pre_closure_penal_applicable of this PostFixedDepositProductsRequest.


        :param pre_closure_penal_applicable: The pre_closure_penal_applicable of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: bool
        """

        self._pre_closure_penal_applicable = pre_closure_penal_applicable

    @property
    def pre_closure_penal_interest(self):
        """Gets the pre_closure_penal_interest of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The pre_closure_penal_interest of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: float
        """
        return self._pre_closure_penal_interest

    @pre_closure_penal_interest.setter
    def pre_closure_penal_interest(self, pre_closure_penal_interest):
        """Sets the pre_closure_penal_interest of this PostFixedDepositProductsRequest.


        :param pre_closure_penal_interest: The pre_closure_penal_interest of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: float
        """

        self._pre_closure_penal_interest = pre_closure_penal_interest

    @property
    def pre_closure_penal_interest_on_type_id(self):
        """Gets the pre_closure_penal_interest_on_type_id of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The pre_closure_penal_interest_on_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: int
        """
        return self._pre_closure_penal_interest_on_type_id

    @pre_closure_penal_interest_on_type_id.setter
    def pre_closure_penal_interest_on_type_id(self, pre_closure_penal_interest_on_type_id):
        """Sets the pre_closure_penal_interest_on_type_id of this PostFixedDepositProductsRequest.


        :param pre_closure_penal_interest_on_type_id: The pre_closure_penal_interest_on_type_id of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: int
        """

        self._pre_closure_penal_interest_on_type_id = pre_closure_penal_interest_on_type_id

    @property
    def short_name(self):
        """Gets the short_name of this PostFixedDepositProductsRequest.  # noqa: E501


        :return: The short_name of this PostFixedDepositProductsRequest.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this PostFixedDepositProductsRequest.


        :param short_name: The short_name of this PostFixedDepositProductsRequest.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostFixedDepositProductsRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostFixedDepositProductsRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
