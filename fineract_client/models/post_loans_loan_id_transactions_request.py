# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PostLoansLoanIdTransactionsRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_number': 'str',
        'bank_number': 'str',
        'charge_off_reason_id': 'int',
        'check_number': 'str',
        'date_format': 'str',
        'due_date': 'str',
        'external_id': 'str',
        'frequency_number': 'int',
        'frequency_type': 'str',
        'loan_charge_id': 'int',
        'locale': 'str',
        'note': 'str',
        'number_of_installments': 'int',
        'payment_type_id': 'int',
        'receipt_number': 'str',
        'reversal_external_id': 'str',
        'routing_code': 'str',
        'start_date': 'str',
        'transaction_amount': 'float',
        'transaction_date': 'str',
        'writeoff_reason_id': 'int'
    }

    attribute_map = {
        'account_number': 'accountNumber',
        'bank_number': 'bankNumber',
        'charge_off_reason_id': 'chargeOffReasonId',
        'check_number': 'checkNumber',
        'date_format': 'dateFormat',
        'due_date': 'dueDate',
        'external_id': 'externalId',
        'frequency_number': 'frequencyNumber',
        'frequency_type': 'frequencyType',
        'loan_charge_id': 'loanChargeId',
        'locale': 'locale',
        'note': 'note',
        'number_of_installments': 'numberOfInstallments',
        'payment_type_id': 'paymentTypeId',
        'receipt_number': 'receiptNumber',
        'reversal_external_id': 'reversalExternalId',
        'routing_code': 'routingCode',
        'start_date': 'startDate',
        'transaction_amount': 'transactionAmount',
        'transaction_date': 'transactionDate',
        'writeoff_reason_id': 'writeoffReasonId'
    }

    def __init__(self, account_number=None, bank_number=None, charge_off_reason_id=None, check_number=None, date_format=None, due_date=None, external_id=None, frequency_number=None, frequency_type=None, loan_charge_id=None, locale=None, note=None, number_of_installments=None, payment_type_id=None, receipt_number=None, reversal_external_id=None, routing_code=None, start_date=None, transaction_amount=None, transaction_date=None, writeoff_reason_id=None):  # noqa: E501
        """PostLoansLoanIdTransactionsRequest - a model defined in Swagger"""  # noqa: E501
        self._account_number = None
        self._bank_number = None
        self._charge_off_reason_id = None
        self._check_number = None
        self._date_format = None
        self._due_date = None
        self._external_id = None
        self._frequency_number = None
        self._frequency_type = None
        self._loan_charge_id = None
        self._locale = None
        self._note = None
        self._number_of_installments = None
        self._payment_type_id = None
        self._receipt_number = None
        self._reversal_external_id = None
        self._routing_code = None
        self._start_date = None
        self._transaction_amount = None
        self._transaction_date = None
        self._writeoff_reason_id = None
        self.discriminator = None
        if account_number is not None:
            self.account_number = account_number
        if bank_number is not None:
            self.bank_number = bank_number
        if charge_off_reason_id is not None:
            self.charge_off_reason_id = charge_off_reason_id
        if check_number is not None:
            self.check_number = check_number
        if date_format is not None:
            self.date_format = date_format
        if due_date is not None:
            self.due_date = due_date
        if external_id is not None:
            self.external_id = external_id
        if frequency_number is not None:
            self.frequency_number = frequency_number
        if frequency_type is not None:
            self.frequency_type = frequency_type
        if loan_charge_id is not None:
            self.loan_charge_id = loan_charge_id
        if locale is not None:
            self.locale = locale
        if note is not None:
            self.note = note
        if number_of_installments is not None:
            self.number_of_installments = number_of_installments
        if payment_type_id is not None:
            self.payment_type_id = payment_type_id
        if receipt_number is not None:
            self.receipt_number = receipt_number
        if reversal_external_id is not None:
            self.reversal_external_id = reversal_external_id
        if routing_code is not None:
            self.routing_code = routing_code
        if start_date is not None:
            self.start_date = start_date
        if transaction_amount is not None:
            self.transaction_amount = transaction_amount
        if transaction_date is not None:
            self.transaction_date = transaction_date
        if writeoff_reason_id is not None:
            self.writeoff_reason_id = writeoff_reason_id

    @property
    def account_number(self):
        """Gets the account_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The account_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this PostLoansLoanIdTransactionsRequest.


        :param account_number: The account_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def bank_number(self):
        """Gets the bank_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The bank_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._bank_number

    @bank_number.setter
    def bank_number(self, bank_number):
        """Sets the bank_number of this PostLoansLoanIdTransactionsRequest.


        :param bank_number: The bank_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._bank_number = bank_number

    @property
    def charge_off_reason_id(self):
        """Gets the charge_off_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The charge_off_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._charge_off_reason_id

    @charge_off_reason_id.setter
    def charge_off_reason_id(self, charge_off_reason_id):
        """Sets the charge_off_reason_id of this PostLoansLoanIdTransactionsRequest.


        :param charge_off_reason_id: The charge_off_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._charge_off_reason_id = charge_off_reason_id

    @property
    def check_number(self):
        """Gets the check_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The check_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._check_number

    @check_number.setter
    def check_number(self, check_number):
        """Sets the check_number of this PostLoansLoanIdTransactionsRequest.


        :param check_number: The check_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._check_number = check_number

    @property
    def date_format(self):
        """Gets the date_format of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The date_format of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this PostLoansLoanIdTransactionsRequest.


        :param date_format: The date_format of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._date_format = date_format

    @property
    def due_date(self):
        """Gets the due_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The due_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this PostLoansLoanIdTransactionsRequest.


        :param due_date: The due_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._due_date = due_date

    @property
    def external_id(self):
        """Gets the external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this PostLoansLoanIdTransactionsRequest.


        :param external_id: The external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def frequency_number(self):
        """Gets the frequency_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The frequency_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._frequency_number

    @frequency_number.setter
    def frequency_number(self, frequency_number):
        """Sets the frequency_number of this PostLoansLoanIdTransactionsRequest.


        :param frequency_number: The frequency_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._frequency_number = frequency_number

    @property
    def frequency_type(self):
        """Gets the frequency_type of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The frequency_type of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._frequency_type

    @frequency_type.setter
    def frequency_type(self, frequency_type):
        """Sets the frequency_type of this PostLoansLoanIdTransactionsRequest.


        :param frequency_type: The frequency_type of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._frequency_type = frequency_type

    @property
    def loan_charge_id(self):
        """Gets the loan_charge_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The loan_charge_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._loan_charge_id

    @loan_charge_id.setter
    def loan_charge_id(self, loan_charge_id):
        """Sets the loan_charge_id of this PostLoansLoanIdTransactionsRequest.


        :param loan_charge_id: The loan_charge_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._loan_charge_id = loan_charge_id

    @property
    def locale(self):
        """Gets the locale of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The locale of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this PostLoansLoanIdTransactionsRequest.


        :param locale: The locale of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def note(self):
        """Gets the note of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The note of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this PostLoansLoanIdTransactionsRequest.


        :param note: The note of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def number_of_installments(self):
        """Gets the number_of_installments of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The number_of_installments of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._number_of_installments

    @number_of_installments.setter
    def number_of_installments(self, number_of_installments):
        """Sets the number_of_installments of this PostLoansLoanIdTransactionsRequest.


        :param number_of_installments: The number_of_installments of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._number_of_installments = number_of_installments

    @property
    def payment_type_id(self):
        """Gets the payment_type_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The payment_type_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._payment_type_id

    @payment_type_id.setter
    def payment_type_id(self, payment_type_id):
        """Sets the payment_type_id of this PostLoansLoanIdTransactionsRequest.


        :param payment_type_id: The payment_type_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._payment_type_id = payment_type_id

    @property
    def receipt_number(self):
        """Gets the receipt_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The receipt_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._receipt_number

    @receipt_number.setter
    def receipt_number(self, receipt_number):
        """Sets the receipt_number of this PostLoansLoanIdTransactionsRequest.


        :param receipt_number: The receipt_number of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._receipt_number = receipt_number

    @property
    def reversal_external_id(self):
        """Gets the reversal_external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The reversal_external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._reversal_external_id

    @reversal_external_id.setter
    def reversal_external_id(self, reversal_external_id):
        """Sets the reversal_external_id of this PostLoansLoanIdTransactionsRequest.


        :param reversal_external_id: The reversal_external_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._reversal_external_id = reversal_external_id

    @property
    def routing_code(self):
        """Gets the routing_code of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The routing_code of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._routing_code

    @routing_code.setter
    def routing_code(self, routing_code):
        """Sets the routing_code of this PostLoansLoanIdTransactionsRequest.


        :param routing_code: The routing_code of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._routing_code = routing_code

    @property
    def start_date(self):
        """Gets the start_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The start_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PostLoansLoanIdTransactionsRequest.


        :param start_date: The start_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._start_date = start_date

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The transaction_amount of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: float
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this PostLoansLoanIdTransactionsRequest.


        :param transaction_amount: The transaction_amount of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: float
        """

        self._transaction_amount = transaction_amount

    @property
    def transaction_date(self):
        """Gets the transaction_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The transaction_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: str
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this PostLoansLoanIdTransactionsRequest.


        :param transaction_date: The transaction_date of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: str
        """

        self._transaction_date = transaction_date

    @property
    def writeoff_reason_id(self):
        """Gets the writeoff_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501


        :return: The writeoff_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :rtype: int
        """
        return self._writeoff_reason_id

    @writeoff_reason_id.setter
    def writeoff_reason_id(self, writeoff_reason_id):
        """Sets the writeoff_reason_id of this PostLoansLoanIdTransactionsRequest.


        :param writeoff_reason_id: The writeoff_reason_id of this PostLoansLoanIdTransactionsRequest.  # noqa: E501
        :type: int
        """

        self._writeoff_reason_id = writeoff_reason_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostLoansLoanIdTransactionsRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostLoansLoanIdTransactionsRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
