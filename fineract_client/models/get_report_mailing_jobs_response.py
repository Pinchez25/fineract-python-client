# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetReportMailingJobsResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'email_attachment_file_format': 'EnumOptionData',
        'email_message': 'str',
        'email_recipients': 'str',
        'email_subject': 'str',
        'id': 'int',
        'is_active': 'bool',
        'name': 'str',
        'next_run_date_time': 'datetime',
        'number_of_runs': 'int',
        'recurrence': 'str',
        'run_as_user_id': 'int',
        'start_date_time': 'datetime',
        'stretchy_report': 'ReportData',
        'stretchy_report_param_map': 'str',
        'timeline': 'ReportMailingJobTimelineData'
    }

    attribute_map = {
        'description': 'description',
        'email_attachment_file_format': 'emailAttachmentFileFormat',
        'email_message': 'emailMessage',
        'email_recipients': 'emailRecipients',
        'email_subject': 'emailSubject',
        'id': 'id',
        'is_active': 'isActive',
        'name': 'name',
        'next_run_date_time': 'nextRunDateTime',
        'number_of_runs': 'numberOfRuns',
        'recurrence': 'recurrence',
        'run_as_user_id': 'runAsUserId',
        'start_date_time': 'startDateTime',
        'stretchy_report': 'stretchyReport',
        'stretchy_report_param_map': 'stretchyReportParamMap',
        'timeline': 'timeline'
    }

    def __init__(self, description=None, email_attachment_file_format=None, email_message=None, email_recipients=None, email_subject=None, id=None, is_active=None, name=None, next_run_date_time=None, number_of_runs=None, recurrence=None, run_as_user_id=None, start_date_time=None, stretchy_report=None, stretchy_report_param_map=None, timeline=None):  # noqa: E501
        """GetReportMailingJobsResponse - a model defined in Swagger"""  # noqa: E501
        self._description = None
        self._email_attachment_file_format = None
        self._email_message = None
        self._email_recipients = None
        self._email_subject = None
        self._id = None
        self._is_active = None
        self._name = None
        self._next_run_date_time = None
        self._number_of_runs = None
        self._recurrence = None
        self._run_as_user_id = None
        self._start_date_time = None
        self._stretchy_report = None
        self._stretchy_report_param_map = None
        self._timeline = None
        self.discriminator = None
        if description is not None:
            self.description = description
        if email_attachment_file_format is not None:
            self.email_attachment_file_format = email_attachment_file_format
        if email_message is not None:
            self.email_message = email_message
        if email_recipients is not None:
            self.email_recipients = email_recipients
        if email_subject is not None:
            self.email_subject = email_subject
        if id is not None:
            self.id = id
        if is_active is not None:
            self.is_active = is_active
        if name is not None:
            self.name = name
        if next_run_date_time is not None:
            self.next_run_date_time = next_run_date_time
        if number_of_runs is not None:
            self.number_of_runs = number_of_runs
        if recurrence is not None:
            self.recurrence = recurrence
        if run_as_user_id is not None:
            self.run_as_user_id = run_as_user_id
        if start_date_time is not None:
            self.start_date_time = start_date_time
        if stretchy_report is not None:
            self.stretchy_report = stretchy_report
        if stretchy_report_param_map is not None:
            self.stretchy_report_param_map = stretchy_report_param_map
        if timeline is not None:
            self.timeline = timeline

    @property
    def description(self):
        """Gets the description of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The description of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetReportMailingJobsResponse.


        :param description: The description of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def email_attachment_file_format(self):
        """Gets the email_attachment_file_format of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The email_attachment_file_format of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: EnumOptionData
        """
        return self._email_attachment_file_format

    @email_attachment_file_format.setter
    def email_attachment_file_format(self, email_attachment_file_format):
        """Sets the email_attachment_file_format of this GetReportMailingJobsResponse.


        :param email_attachment_file_format: The email_attachment_file_format of this GetReportMailingJobsResponse.  # noqa: E501
        :type: EnumOptionData
        """

        self._email_attachment_file_format = email_attachment_file_format

    @property
    def email_message(self):
        """Gets the email_message of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The email_message of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._email_message

    @email_message.setter
    def email_message(self, email_message):
        """Sets the email_message of this GetReportMailingJobsResponse.


        :param email_message: The email_message of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._email_message = email_message

    @property
    def email_recipients(self):
        """Gets the email_recipients of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The email_recipients of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._email_recipients

    @email_recipients.setter
    def email_recipients(self, email_recipients):
        """Sets the email_recipients of this GetReportMailingJobsResponse.


        :param email_recipients: The email_recipients of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._email_recipients = email_recipients

    @property
    def email_subject(self):
        """Gets the email_subject of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The email_subject of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._email_subject

    @email_subject.setter
    def email_subject(self, email_subject):
        """Sets the email_subject of this GetReportMailingJobsResponse.


        :param email_subject: The email_subject of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._email_subject = email_subject

    @property
    def id(self):
        """Gets the id of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The id of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetReportMailingJobsResponse.


        :param id: The id of this GetReportMailingJobsResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The is_active of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetReportMailingJobsResponse.


        :param is_active: The is_active of this GetReportMailingJobsResponse.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The name of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetReportMailingJobsResponse.


        :param name: The name of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def next_run_date_time(self):
        """Gets the next_run_date_time of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The next_run_date_time of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._next_run_date_time

    @next_run_date_time.setter
    def next_run_date_time(self, next_run_date_time):
        """Sets the next_run_date_time of this GetReportMailingJobsResponse.


        :param next_run_date_time: The next_run_date_time of this GetReportMailingJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._next_run_date_time = next_run_date_time

    @property
    def number_of_runs(self):
        """Gets the number_of_runs of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The number_of_runs of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: int
        """
        return self._number_of_runs

    @number_of_runs.setter
    def number_of_runs(self, number_of_runs):
        """Sets the number_of_runs of this GetReportMailingJobsResponse.


        :param number_of_runs: The number_of_runs of this GetReportMailingJobsResponse.  # noqa: E501
        :type: int
        """

        self._number_of_runs = number_of_runs

    @property
    def recurrence(self):
        """Gets the recurrence of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The recurrence of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._recurrence

    @recurrence.setter
    def recurrence(self, recurrence):
        """Sets the recurrence of this GetReportMailingJobsResponse.


        :param recurrence: The recurrence of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._recurrence = recurrence

    @property
    def run_as_user_id(self):
        """Gets the run_as_user_id of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The run_as_user_id of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: int
        """
        return self._run_as_user_id

    @run_as_user_id.setter
    def run_as_user_id(self, run_as_user_id):
        """Sets the run_as_user_id of this GetReportMailingJobsResponse.


        :param run_as_user_id: The run_as_user_id of this GetReportMailingJobsResponse.  # noqa: E501
        :type: int
        """

        self._run_as_user_id = run_as_user_id

    @property
    def start_date_time(self):
        """Gets the start_date_time of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The start_date_time of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this GetReportMailingJobsResponse.


        :param start_date_time: The start_date_time of this GetReportMailingJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._start_date_time = start_date_time

    @property
    def stretchy_report(self):
        """Gets the stretchy_report of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The stretchy_report of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: ReportData
        """
        return self._stretchy_report

    @stretchy_report.setter
    def stretchy_report(self, stretchy_report):
        """Sets the stretchy_report of this GetReportMailingJobsResponse.


        :param stretchy_report: The stretchy_report of this GetReportMailingJobsResponse.  # noqa: E501
        :type: ReportData
        """

        self._stretchy_report = stretchy_report

    @property
    def stretchy_report_param_map(self):
        """Gets the stretchy_report_param_map of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The stretchy_report_param_map of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._stretchy_report_param_map

    @stretchy_report_param_map.setter
    def stretchy_report_param_map(self, stretchy_report_param_map):
        """Sets the stretchy_report_param_map of this GetReportMailingJobsResponse.


        :param stretchy_report_param_map: The stretchy_report_param_map of this GetReportMailingJobsResponse.  # noqa: E501
        :type: str
        """

        self._stretchy_report_param_map = stretchy_report_param_map

    @property
    def timeline(self):
        """Gets the timeline of this GetReportMailingJobsResponse.  # noqa: E501


        :return: The timeline of this GetReportMailingJobsResponse.  # noqa: E501
        :rtype: ReportMailingJobTimelineData
        """
        return self._timeline

    @timeline.setter
    def timeline(self, timeline):
        """Sets the timeline of this GetReportMailingJobsResponse.


        :param timeline: The timeline of this GetReportMailingJobsResponse.  # noqa: E501
        :type: ReportMailingJobTimelineData
        """

        self._timeline = timeline

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetReportMailingJobsResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetReportMailingJobsResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
