# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetSavingsProductsTemplateResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_mapping': 'GetSavingsCurrency',
        'accounting_mapping_options': 'GetSavingsProductsAccountingMappingOptions',
        'accounting_rule': 'GetSavingsProductsTemplateAccountingRule',
        'accounting_rule_options': 'list[GetSavingsProductsTemplateAccountingRule]',
        'charge_options': 'list[GetSavingsProductsChargeOptions]',
        'currency': 'GetSavingsCurrency',
        'currency_options': 'list[GetSavingsCurrency]',
        'interest_calculation_days_in_year_type': 'GetSavingsProductsInterestCalculationDaysInYearType',
        'interest_calculation_days_in_year_type_options': 'list[GetSavingsProductsInterestCalculationDaysInYearType]',
        'interest_calculation_type': 'GetSavingsProductsInterestCalculationType',
        'interest_calculation_type_options': 'list[GetSavingsProductsInterestCalculationType]',
        'interest_compounding_period_type': 'GetSavingsProductsInterestCompoundingPeriodType',
        'interest_compounding_period_type_options': 'list[GetSavingsProductsInterestCompoundingPeriodType]',
        'interest_posting_period_type': 'GetSavingsProductsInterestPostingPeriodType',
        'interest_posting_period_type_options': 'list[GetSavingsProductsInterestPostingPeriodType]',
        'lockin_period_frequency_type_options': 'list[GetSavingsProductsLockinPeriodFrequencyTypeOptions]',
        'payment_type_options': 'list[GetSavingsProductsPaymentTypeOptions]',
        'withdrawal_fee_type_options': 'list[GetSavingsProductsWithdrawalFeeTypeOptions]'
    }

    attribute_map = {
        'account_mapping': 'accountMapping',
        'accounting_mapping_options': 'accountingMappingOptions',
        'accounting_rule': 'accountingRule',
        'accounting_rule_options': 'accountingRuleOptions',
        'charge_options': 'chargeOptions',
        'currency': 'currency',
        'currency_options': 'currencyOptions',
        'interest_calculation_days_in_year_type': 'interestCalculationDaysInYearType',
        'interest_calculation_days_in_year_type_options': 'interestCalculationDaysInYearTypeOptions',
        'interest_calculation_type': 'interestCalculationType',
        'interest_calculation_type_options': 'interestCalculationTypeOptions',
        'interest_compounding_period_type': 'interestCompoundingPeriodType',
        'interest_compounding_period_type_options': 'interestCompoundingPeriodTypeOptions',
        'interest_posting_period_type': 'interestPostingPeriodType',
        'interest_posting_period_type_options': 'interestPostingPeriodTypeOptions',
        'lockin_period_frequency_type_options': 'lockinPeriodFrequencyTypeOptions',
        'payment_type_options': 'paymentTypeOptions',
        'withdrawal_fee_type_options': 'withdrawalFeeTypeOptions'
    }

    def __init__(self, account_mapping=None, accounting_mapping_options=None, accounting_rule=None, accounting_rule_options=None, charge_options=None, currency=None, currency_options=None, interest_calculation_days_in_year_type=None, interest_calculation_days_in_year_type_options=None, interest_calculation_type=None, interest_calculation_type_options=None, interest_compounding_period_type=None, interest_compounding_period_type_options=None, interest_posting_period_type=None, interest_posting_period_type_options=None, lockin_period_frequency_type_options=None, payment_type_options=None, withdrawal_fee_type_options=None):  # noqa: E501
        """GetSavingsProductsTemplateResponse - a model defined in Swagger"""  # noqa: E501
        self._account_mapping = None
        self._accounting_mapping_options = None
        self._accounting_rule = None
        self._accounting_rule_options = None
        self._charge_options = None
        self._currency = None
        self._currency_options = None
        self._interest_calculation_days_in_year_type = None
        self._interest_calculation_days_in_year_type_options = None
        self._interest_calculation_type = None
        self._interest_calculation_type_options = None
        self._interest_compounding_period_type = None
        self._interest_compounding_period_type_options = None
        self._interest_posting_period_type = None
        self._interest_posting_period_type_options = None
        self._lockin_period_frequency_type_options = None
        self._payment_type_options = None
        self._withdrawal_fee_type_options = None
        self.discriminator = None
        if account_mapping is not None:
            self.account_mapping = account_mapping
        if accounting_mapping_options is not None:
            self.accounting_mapping_options = accounting_mapping_options
        if accounting_rule is not None:
            self.accounting_rule = accounting_rule
        if accounting_rule_options is not None:
            self.accounting_rule_options = accounting_rule_options
        if charge_options is not None:
            self.charge_options = charge_options
        if currency is not None:
            self.currency = currency
        if currency_options is not None:
            self.currency_options = currency_options
        if interest_calculation_days_in_year_type is not None:
            self.interest_calculation_days_in_year_type = interest_calculation_days_in_year_type
        if interest_calculation_days_in_year_type_options is not None:
            self.interest_calculation_days_in_year_type_options = interest_calculation_days_in_year_type_options
        if interest_calculation_type is not None:
            self.interest_calculation_type = interest_calculation_type
        if interest_calculation_type_options is not None:
            self.interest_calculation_type_options = interest_calculation_type_options
        if interest_compounding_period_type is not None:
            self.interest_compounding_period_type = interest_compounding_period_type
        if interest_compounding_period_type_options is not None:
            self.interest_compounding_period_type_options = interest_compounding_period_type_options
        if interest_posting_period_type is not None:
            self.interest_posting_period_type = interest_posting_period_type
        if interest_posting_period_type_options is not None:
            self.interest_posting_period_type_options = interest_posting_period_type_options
        if lockin_period_frequency_type_options is not None:
            self.lockin_period_frequency_type_options = lockin_period_frequency_type_options
        if payment_type_options is not None:
            self.payment_type_options = payment_type_options
        if withdrawal_fee_type_options is not None:
            self.withdrawal_fee_type_options = withdrawal_fee_type_options

    @property
    def account_mapping(self):
        """Gets the account_mapping of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The account_mapping of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsCurrency
        """
        return self._account_mapping

    @account_mapping.setter
    def account_mapping(self, account_mapping):
        """Sets the account_mapping of this GetSavingsProductsTemplateResponse.


        :param account_mapping: The account_mapping of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsCurrency
        """

        self._account_mapping = account_mapping

    @property
    def accounting_mapping_options(self):
        """Gets the accounting_mapping_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The accounting_mapping_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsAccountingMappingOptions
        """
        return self._accounting_mapping_options

    @accounting_mapping_options.setter
    def accounting_mapping_options(self, accounting_mapping_options):
        """Sets the accounting_mapping_options of this GetSavingsProductsTemplateResponse.


        :param accounting_mapping_options: The accounting_mapping_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsAccountingMappingOptions
        """

        self._accounting_mapping_options = accounting_mapping_options

    @property
    def accounting_rule(self):
        """Gets the accounting_rule of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The accounting_rule of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsTemplateAccountingRule
        """
        return self._accounting_rule

    @accounting_rule.setter
    def accounting_rule(self, accounting_rule):
        """Sets the accounting_rule of this GetSavingsProductsTemplateResponse.


        :param accounting_rule: The accounting_rule of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsTemplateAccountingRule
        """

        self._accounting_rule = accounting_rule

    @property
    def accounting_rule_options(self):
        """Gets the accounting_rule_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The accounting_rule_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsTemplateAccountingRule]
        """
        return self._accounting_rule_options

    @accounting_rule_options.setter
    def accounting_rule_options(self, accounting_rule_options):
        """Sets the accounting_rule_options of this GetSavingsProductsTemplateResponse.


        :param accounting_rule_options: The accounting_rule_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsTemplateAccountingRule]
        """

        self._accounting_rule_options = accounting_rule_options

    @property
    def charge_options(self):
        """Gets the charge_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The charge_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsChargeOptions]
        """
        return self._charge_options

    @charge_options.setter
    def charge_options(self, charge_options):
        """Sets the charge_options of this GetSavingsProductsTemplateResponse.


        :param charge_options: The charge_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsChargeOptions]
        """

        self._charge_options = charge_options

    @property
    def currency(self):
        """Gets the currency of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The currency of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsCurrency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this GetSavingsProductsTemplateResponse.


        :param currency: The currency of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsCurrency
        """

        self._currency = currency

    @property
    def currency_options(self):
        """Gets the currency_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The currency_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsCurrency]
        """
        return self._currency_options

    @currency_options.setter
    def currency_options(self, currency_options):
        """Sets the currency_options of this GetSavingsProductsTemplateResponse.


        :param currency_options: The currency_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsCurrency]
        """

        self._currency_options = currency_options

    @property
    def interest_calculation_days_in_year_type(self):
        """Gets the interest_calculation_days_in_year_type of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_calculation_days_in_year_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsInterestCalculationDaysInYearType
        """
        return self._interest_calculation_days_in_year_type

    @interest_calculation_days_in_year_type.setter
    def interest_calculation_days_in_year_type(self, interest_calculation_days_in_year_type):
        """Sets the interest_calculation_days_in_year_type of this GetSavingsProductsTemplateResponse.


        :param interest_calculation_days_in_year_type: The interest_calculation_days_in_year_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsInterestCalculationDaysInYearType
        """

        self._interest_calculation_days_in_year_type = interest_calculation_days_in_year_type

    @property
    def interest_calculation_days_in_year_type_options(self):
        """Gets the interest_calculation_days_in_year_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_calculation_days_in_year_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsInterestCalculationDaysInYearType]
        """
        return self._interest_calculation_days_in_year_type_options

    @interest_calculation_days_in_year_type_options.setter
    def interest_calculation_days_in_year_type_options(self, interest_calculation_days_in_year_type_options):
        """Sets the interest_calculation_days_in_year_type_options of this GetSavingsProductsTemplateResponse.


        :param interest_calculation_days_in_year_type_options: The interest_calculation_days_in_year_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsInterestCalculationDaysInYearType]
        """

        self._interest_calculation_days_in_year_type_options = interest_calculation_days_in_year_type_options

    @property
    def interest_calculation_type(self):
        """Gets the interest_calculation_type of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_calculation_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsInterestCalculationType
        """
        return self._interest_calculation_type

    @interest_calculation_type.setter
    def interest_calculation_type(self, interest_calculation_type):
        """Sets the interest_calculation_type of this GetSavingsProductsTemplateResponse.


        :param interest_calculation_type: The interest_calculation_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsInterestCalculationType
        """

        self._interest_calculation_type = interest_calculation_type

    @property
    def interest_calculation_type_options(self):
        """Gets the interest_calculation_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_calculation_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsInterestCalculationType]
        """
        return self._interest_calculation_type_options

    @interest_calculation_type_options.setter
    def interest_calculation_type_options(self, interest_calculation_type_options):
        """Sets the interest_calculation_type_options of this GetSavingsProductsTemplateResponse.


        :param interest_calculation_type_options: The interest_calculation_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsInterestCalculationType]
        """

        self._interest_calculation_type_options = interest_calculation_type_options

    @property
    def interest_compounding_period_type(self):
        """Gets the interest_compounding_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_compounding_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsInterestCompoundingPeriodType
        """
        return self._interest_compounding_period_type

    @interest_compounding_period_type.setter
    def interest_compounding_period_type(self, interest_compounding_period_type):
        """Sets the interest_compounding_period_type of this GetSavingsProductsTemplateResponse.


        :param interest_compounding_period_type: The interest_compounding_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsInterestCompoundingPeriodType
        """

        self._interest_compounding_period_type = interest_compounding_period_type

    @property
    def interest_compounding_period_type_options(self):
        """Gets the interest_compounding_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_compounding_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsInterestCompoundingPeriodType]
        """
        return self._interest_compounding_period_type_options

    @interest_compounding_period_type_options.setter
    def interest_compounding_period_type_options(self, interest_compounding_period_type_options):
        """Sets the interest_compounding_period_type_options of this GetSavingsProductsTemplateResponse.


        :param interest_compounding_period_type_options: The interest_compounding_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsInterestCompoundingPeriodType]
        """

        self._interest_compounding_period_type_options = interest_compounding_period_type_options

    @property
    def interest_posting_period_type(self):
        """Gets the interest_posting_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_posting_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: GetSavingsProductsInterestPostingPeriodType
        """
        return self._interest_posting_period_type

    @interest_posting_period_type.setter
    def interest_posting_period_type(self, interest_posting_period_type):
        """Sets the interest_posting_period_type of this GetSavingsProductsTemplateResponse.


        :param interest_posting_period_type: The interest_posting_period_type of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: GetSavingsProductsInterestPostingPeriodType
        """

        self._interest_posting_period_type = interest_posting_period_type

    @property
    def interest_posting_period_type_options(self):
        """Gets the interest_posting_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The interest_posting_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsInterestPostingPeriodType]
        """
        return self._interest_posting_period_type_options

    @interest_posting_period_type_options.setter
    def interest_posting_period_type_options(self, interest_posting_period_type_options):
        """Sets the interest_posting_period_type_options of this GetSavingsProductsTemplateResponse.


        :param interest_posting_period_type_options: The interest_posting_period_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsInterestPostingPeriodType]
        """

        self._interest_posting_period_type_options = interest_posting_period_type_options

    @property
    def lockin_period_frequency_type_options(self):
        """Gets the lockin_period_frequency_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The lockin_period_frequency_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsLockinPeriodFrequencyTypeOptions]
        """
        return self._lockin_period_frequency_type_options

    @lockin_period_frequency_type_options.setter
    def lockin_period_frequency_type_options(self, lockin_period_frequency_type_options):
        """Sets the lockin_period_frequency_type_options of this GetSavingsProductsTemplateResponse.


        :param lockin_period_frequency_type_options: The lockin_period_frequency_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsLockinPeriodFrequencyTypeOptions]
        """

        self._lockin_period_frequency_type_options = lockin_period_frequency_type_options

    @property
    def payment_type_options(self):
        """Gets the payment_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The payment_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsPaymentTypeOptions]
        """
        return self._payment_type_options

    @payment_type_options.setter
    def payment_type_options(self, payment_type_options):
        """Sets the payment_type_options of this GetSavingsProductsTemplateResponse.


        :param payment_type_options: The payment_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsPaymentTypeOptions]
        """

        self._payment_type_options = payment_type_options

    @property
    def withdrawal_fee_type_options(self):
        """Gets the withdrawal_fee_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501


        :return: The withdrawal_fee_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :rtype: list[GetSavingsProductsWithdrawalFeeTypeOptions]
        """
        return self._withdrawal_fee_type_options

    @withdrawal_fee_type_options.setter
    def withdrawal_fee_type_options(self, withdrawal_fee_type_options):
        """Sets the withdrawal_fee_type_options of this GetSavingsProductsTemplateResponse.


        :param withdrawal_fee_type_options: The withdrawal_fee_type_options of this GetSavingsProductsTemplateResponse.  # noqa: E501
        :type: list[GetSavingsProductsWithdrawalFeeTypeOptions]
        """

        self._withdrawal_fee_type_options = withdrawal_fee_type_options

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetSavingsProductsTemplateResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetSavingsProductsTemplateResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
