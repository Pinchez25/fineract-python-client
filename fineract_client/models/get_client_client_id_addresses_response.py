# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetClientClientIdAddressesResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address_id': 'int',
        'address_line1': 'str',
        'address_line2': 'str',
        'address_line3': 'str',
        'address_type': 'str',
        'address_type_id': 'int',
        'city': 'str',
        'client_id': 'int',
        'country_id': 'int',
        'country_name': 'str',
        'county_district': 'str',
        'created_by': 'str',
        'is_active': 'bool',
        'postal_code': 'int',
        'state_name': 'str',
        'state_province_id': 'int',
        'street': 'str',
        'town_village': 'str',
        'updated_by': 'str'
    }

    attribute_map = {
        'address_id': 'addressId',
        'address_line1': 'addressLine1',
        'address_line2': 'addressLine2',
        'address_line3': 'addressLine3',
        'address_type': 'addressType',
        'address_type_id': 'addressTypeId',
        'city': 'city',
        'client_id': 'client_id',
        'country_id': 'countryId',
        'country_name': 'countryName',
        'county_district': 'countyDistrict',
        'created_by': 'createdBy',
        'is_active': 'isActive',
        'postal_code': 'postalCode',
        'state_name': 'stateName',
        'state_province_id': 'stateProvinceId',
        'street': 'street',
        'town_village': 'townVillage',
        'updated_by': 'updatedBy'
    }

    def __init__(self, address_id=None, address_line1=None, address_line2=None, address_line3=None, address_type=None, address_type_id=None, city=None, client_id=None, country_id=None, country_name=None, county_district=None, created_by=None, is_active=None, postal_code=None, state_name=None, state_province_id=None, street=None, town_village=None, updated_by=None):  # noqa: E501
        """GetClientClientIdAddressesResponse - a model defined in Swagger"""  # noqa: E501
        self._address_id = None
        self._address_line1 = None
        self._address_line2 = None
        self._address_line3 = None
        self._address_type = None
        self._address_type_id = None
        self._city = None
        self._client_id = None
        self._country_id = None
        self._country_name = None
        self._county_district = None
        self._created_by = None
        self._is_active = None
        self._postal_code = None
        self._state_name = None
        self._state_province_id = None
        self._street = None
        self._town_village = None
        self._updated_by = None
        self.discriminator = None
        if address_id is not None:
            self.address_id = address_id
        if address_line1 is not None:
            self.address_line1 = address_line1
        if address_line2 is not None:
            self.address_line2 = address_line2
        if address_line3 is not None:
            self.address_line3 = address_line3
        if address_type is not None:
            self.address_type = address_type
        if address_type_id is not None:
            self.address_type_id = address_type_id
        if city is not None:
            self.city = city
        if client_id is not None:
            self.client_id = client_id
        if country_id is not None:
            self.country_id = country_id
        if country_name is not None:
            self.country_name = country_name
        if county_district is not None:
            self.county_district = county_district
        if created_by is not None:
            self.created_by = created_by
        if is_active is not None:
            self.is_active = is_active
        if postal_code is not None:
            self.postal_code = postal_code
        if state_name is not None:
            self.state_name = state_name
        if state_province_id is not None:
            self.state_province_id = state_province_id
        if street is not None:
            self.street = street
        if town_village is not None:
            self.town_village = town_village
        if updated_by is not None:
            self.updated_by = updated_by

    @property
    def address_id(self):
        """Gets the address_id of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this GetClientClientIdAddressesResponse.


        :param address_id: The address_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._address_id = address_id

    @property
    def address_line1(self):
        """Gets the address_line1 of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_line1 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this GetClientClientIdAddressesResponse.


        :param address_line1: The address_line1 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_line2 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this GetClientClientIdAddressesResponse.


        :param address_line2: The address_line2 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._address_line2 = address_line2

    @property
    def address_line3(self):
        """Gets the address_line3 of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_line3 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._address_line3

    @address_line3.setter
    def address_line3(self, address_line3):
        """Sets the address_line3 of this GetClientClientIdAddressesResponse.


        :param address_line3: The address_line3 of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._address_line3 = address_line3

    @property
    def address_type(self):
        """Gets the address_type of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_type of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._address_type

    @address_type.setter
    def address_type(self, address_type):
        """Sets the address_type of this GetClientClientIdAddressesResponse.


        :param address_type: The address_type of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._address_type = address_type

    @property
    def address_type_id(self):
        """Gets the address_type_id of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The address_type_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._address_type_id

    @address_type_id.setter
    def address_type_id(self, address_type_id):
        """Sets the address_type_id of this GetClientClientIdAddressesResponse.


        :param address_type_id: The address_type_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._address_type_id = address_type_id

    @property
    def city(self):
        """Gets the city of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The city of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this GetClientClientIdAddressesResponse.


        :param city: The city of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def client_id(self):
        """Gets the client_id of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The client_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GetClientClientIdAddressesResponse.


        :param client_id: The client_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._client_id = client_id

    @property
    def country_id(self):
        """Gets the country_id of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The country_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this GetClientClientIdAddressesResponse.


        :param country_id: The country_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._country_id = country_id

    @property
    def country_name(self):
        """Gets the country_name of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The country_name of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this GetClientClientIdAddressesResponse.


        :param country_name: The country_name of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._country_name = country_name

    @property
    def county_district(self):
        """Gets the county_district of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The county_district of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._county_district

    @county_district.setter
    def county_district(self, county_district):
        """Sets the county_district of this GetClientClientIdAddressesResponse.


        :param county_district: The county_district of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._county_district = county_district

    @property
    def created_by(self):
        """Gets the created_by of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The created_by of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this GetClientClientIdAddressesResponse.


        :param created_by: The created_by of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def is_active(self):
        """Gets the is_active of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The is_active of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetClientClientIdAddressesResponse.


        :param is_active: The is_active of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    @property
    def postal_code(self):
        """Gets the postal_code of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The postal_code of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this GetClientClientIdAddressesResponse.


        :param postal_code: The postal_code of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._postal_code = postal_code

    @property
    def state_name(self):
        """Gets the state_name of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The state_name of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._state_name

    @state_name.setter
    def state_name(self, state_name):
        """Sets the state_name of this GetClientClientIdAddressesResponse.


        :param state_name: The state_name of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._state_name = state_name

    @property
    def state_province_id(self):
        """Gets the state_province_id of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The state_province_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: int
        """
        return self._state_province_id

    @state_province_id.setter
    def state_province_id(self, state_province_id):
        """Sets the state_province_id of this GetClientClientIdAddressesResponse.


        :param state_province_id: The state_province_id of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: int
        """

        self._state_province_id = state_province_id

    @property
    def street(self):
        """Gets the street of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The street of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this GetClientClientIdAddressesResponse.


        :param street: The street of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._street = street

    @property
    def town_village(self):
        """Gets the town_village of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The town_village of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._town_village

    @town_village.setter
    def town_village(self, town_village):
        """Sets the town_village of this GetClientClientIdAddressesResponse.


        :param town_village: The town_village of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._town_village = town_village

    @property
    def updated_by(self):
        """Gets the updated_by of this GetClientClientIdAddressesResponse.  # noqa: E501


        :return: The updated_by of this GetClientClientIdAddressesResponse.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this GetClientClientIdAddressesResponse.


        :param updated_by: The updated_by of this GetClientClientIdAddressesResponse.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetClientClientIdAddressesResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetClientClientIdAddressesResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
