# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetLoanRescheduleRequestResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_id': 'int',
        'client_name': 'str',
        'id': 'int',
        'loan_account_number': 'str',
        'loan_id': 'int',
        'loan_term_variations_data': 'list[LoanTermVariationsData]',
        'recalculate_interest': 'bool',
        'reschedule_from_date': 'date',
        'reschedule_from_installment': 'int',
        'reschedule_reason_code_value': 'RescheduleReasonsCodeValue',
        'reschedule_reason_comment': 'str',
        'status_enum': 'GetLoanRescheduleRequestStatus',
        'timeline': 'RescheduleReasonsTimeline'
    }

    attribute_map = {
        'client_id': 'clientId',
        'client_name': 'clientName',
        'id': 'id',
        'loan_account_number': 'loanAccountNumber',
        'loan_id': 'loanId',
        'loan_term_variations_data': 'loanTermVariationsData',
        'recalculate_interest': 'recalculateInterest',
        'reschedule_from_date': 'rescheduleFromDate',
        'reschedule_from_installment': 'rescheduleFromInstallment',
        'reschedule_reason_code_value': 'rescheduleReasonCodeValue',
        'reschedule_reason_comment': 'rescheduleReasonComment',
        'status_enum': 'statusEnum',
        'timeline': 'timeline'
    }

    def __init__(self, client_id=None, client_name=None, id=None, loan_account_number=None, loan_id=None, loan_term_variations_data=None, recalculate_interest=None, reschedule_from_date=None, reschedule_from_installment=None, reschedule_reason_code_value=None, reschedule_reason_comment=None, status_enum=None, timeline=None):  # noqa: E501
        """GetLoanRescheduleRequestResponse - a model defined in Swagger"""  # noqa: E501
        self._client_id = None
        self._client_name = None
        self._id = None
        self._loan_account_number = None
        self._loan_id = None
        self._loan_term_variations_data = None
        self._recalculate_interest = None
        self._reschedule_from_date = None
        self._reschedule_from_installment = None
        self._reschedule_reason_code_value = None
        self._reschedule_reason_comment = None
        self._status_enum = None
        self._timeline = None
        self.discriminator = None
        if client_id is not None:
            self.client_id = client_id
        if client_name is not None:
            self.client_name = client_name
        if id is not None:
            self.id = id
        if loan_account_number is not None:
            self.loan_account_number = loan_account_number
        if loan_id is not None:
            self.loan_id = loan_id
        if loan_term_variations_data is not None:
            self.loan_term_variations_data = loan_term_variations_data
        if recalculate_interest is not None:
            self.recalculate_interest = recalculate_interest
        if reschedule_from_date is not None:
            self.reschedule_from_date = reschedule_from_date
        if reschedule_from_installment is not None:
            self.reschedule_from_installment = reschedule_from_installment
        if reschedule_reason_code_value is not None:
            self.reschedule_reason_code_value = reschedule_reason_code_value
        if reschedule_reason_comment is not None:
            self.reschedule_reason_comment = reschedule_reason_comment
        if status_enum is not None:
            self.status_enum = status_enum
        if timeline is not None:
            self.timeline = timeline

    @property
    def client_id(self):
        """Gets the client_id of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The client_id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GetLoanRescheduleRequestResponse.


        :param client_id: The client_id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: int
        """

        self._client_id = client_id

    @property
    def client_name(self):
        """Gets the client_name of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The client_name of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_name

    @client_name.setter
    def client_name(self, client_name):
        """Sets the client_name of this GetLoanRescheduleRequestResponse.


        :param client_name: The client_name of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: str
        """

        self._client_name = client_name

    @property
    def id(self):
        """Gets the id of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetLoanRescheduleRequestResponse.


        :param id: The id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def loan_account_number(self):
        """Gets the loan_account_number of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The loan_account_number of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: str
        """
        return self._loan_account_number

    @loan_account_number.setter
    def loan_account_number(self, loan_account_number):
        """Sets the loan_account_number of this GetLoanRescheduleRequestResponse.


        :param loan_account_number: The loan_account_number of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: str
        """

        self._loan_account_number = loan_account_number

    @property
    def loan_id(self):
        """Gets the loan_id of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The loan_id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: int
        """
        return self._loan_id

    @loan_id.setter
    def loan_id(self, loan_id):
        """Sets the loan_id of this GetLoanRescheduleRequestResponse.


        :param loan_id: The loan_id of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: int
        """

        self._loan_id = loan_id

    @property
    def loan_term_variations_data(self):
        """Gets the loan_term_variations_data of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The loan_term_variations_data of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: list[LoanTermVariationsData]
        """
        return self._loan_term_variations_data

    @loan_term_variations_data.setter
    def loan_term_variations_data(self, loan_term_variations_data):
        """Sets the loan_term_variations_data of this GetLoanRescheduleRequestResponse.


        :param loan_term_variations_data: The loan_term_variations_data of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: list[LoanTermVariationsData]
        """

        self._loan_term_variations_data = loan_term_variations_data

    @property
    def recalculate_interest(self):
        """Gets the recalculate_interest of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The recalculate_interest of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: bool
        """
        return self._recalculate_interest

    @recalculate_interest.setter
    def recalculate_interest(self, recalculate_interest):
        """Sets the recalculate_interest of this GetLoanRescheduleRequestResponse.


        :param recalculate_interest: The recalculate_interest of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: bool
        """

        self._recalculate_interest = recalculate_interest

    @property
    def reschedule_from_date(self):
        """Gets the reschedule_from_date of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The reschedule_from_date of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: date
        """
        return self._reschedule_from_date

    @reschedule_from_date.setter
    def reschedule_from_date(self, reschedule_from_date):
        """Sets the reschedule_from_date of this GetLoanRescheduleRequestResponse.


        :param reschedule_from_date: The reschedule_from_date of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: date
        """

        self._reschedule_from_date = reschedule_from_date

    @property
    def reschedule_from_installment(self):
        """Gets the reschedule_from_installment of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The reschedule_from_installment of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: int
        """
        return self._reschedule_from_installment

    @reschedule_from_installment.setter
    def reschedule_from_installment(self, reschedule_from_installment):
        """Sets the reschedule_from_installment of this GetLoanRescheduleRequestResponse.


        :param reschedule_from_installment: The reschedule_from_installment of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: int
        """

        self._reschedule_from_installment = reschedule_from_installment

    @property
    def reschedule_reason_code_value(self):
        """Gets the reschedule_reason_code_value of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The reschedule_reason_code_value of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: RescheduleReasonsCodeValue
        """
        return self._reschedule_reason_code_value

    @reschedule_reason_code_value.setter
    def reschedule_reason_code_value(self, reschedule_reason_code_value):
        """Sets the reschedule_reason_code_value of this GetLoanRescheduleRequestResponse.


        :param reschedule_reason_code_value: The reschedule_reason_code_value of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: RescheduleReasonsCodeValue
        """

        self._reschedule_reason_code_value = reschedule_reason_code_value

    @property
    def reschedule_reason_comment(self):
        """Gets the reschedule_reason_comment of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The reschedule_reason_comment of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: str
        """
        return self._reschedule_reason_comment

    @reschedule_reason_comment.setter
    def reschedule_reason_comment(self, reschedule_reason_comment):
        """Sets the reschedule_reason_comment of this GetLoanRescheduleRequestResponse.


        :param reschedule_reason_comment: The reschedule_reason_comment of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: str
        """

        self._reschedule_reason_comment = reschedule_reason_comment

    @property
    def status_enum(self):
        """Gets the status_enum of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The status_enum of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: GetLoanRescheduleRequestStatus
        """
        return self._status_enum

    @status_enum.setter
    def status_enum(self, status_enum):
        """Sets the status_enum of this GetLoanRescheduleRequestResponse.


        :param status_enum: The status_enum of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: GetLoanRescheduleRequestStatus
        """

        self._status_enum = status_enum

    @property
    def timeline(self):
        """Gets the timeline of this GetLoanRescheduleRequestResponse.  # noqa: E501


        :return: The timeline of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :rtype: RescheduleReasonsTimeline
        """
        return self._timeline

    @timeline.setter
    def timeline(self, timeline):
        """Sets the timeline of this GetLoanRescheduleRequestResponse.


        :param timeline: The timeline of this GetLoanRescheduleRequestResponse.  # noqa: E501
        :type: RescheduleReasonsTimeline
        """

        self._timeline = timeline

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetLoanRescheduleRequestResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetLoanRescheduleRequestResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
