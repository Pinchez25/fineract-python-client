# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetLoansLoanIdRepaymentPeriod(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'complete': 'bool',
        'days_in_period': 'int',
        'down_payment_period': 'bool',
        'due_date': 'date',
        'fee_charges_due': 'float',
        'fee_charges_outstanding': 'float',
        'fee_charges_paid': 'float',
        'fee_charges_waived': 'float',
        'fee_charges_written_off': 'float',
        'from_date': 'date',
        'interest_due': 'float',
        'interest_original_due': 'float',
        'interest_outstanding': 'float',
        'interest_paid': 'float',
        'interest_waived': 'float',
        'interest_written_off': 'float',
        'obligations_met_on_date': 'date',
        'penalty_charges_due': 'float',
        'penalty_charges_outstanding': 'float',
        'penalty_charges_paid': 'float',
        'penalty_charges_waived': 'float',
        'penalty_charges_written_off': 'float',
        'period': 'int',
        'principal_due': 'float',
        'principal_loan_balance_outstanding': 'float',
        'principal_original_due': 'float',
        'principal_outstanding': 'float',
        'principal_paid': 'float',
        'principal_written_off': 'float',
        'total_actual_cost_of_loan_for_period': 'float',
        'total_credits': 'float',
        'total_due_for_period': 'float',
        'total_installment_amount_for_period': 'float',
        'total_original_due_for_period': 'float',
        'total_outstanding_for_period': 'float',
        'total_paid_for_period': 'float',
        'total_paid_in_advance_for_period': 'float',
        'total_paid_late_for_period': 'float',
        'total_waived_for_period': 'float',
        'total_written_off_for_period': 'float'
    }

    attribute_map = {
        'complete': 'complete',
        'days_in_period': 'daysInPeriod',
        'down_payment_period': 'downPaymentPeriod',
        'due_date': 'dueDate',
        'fee_charges_due': 'feeChargesDue',
        'fee_charges_outstanding': 'feeChargesOutstanding',
        'fee_charges_paid': 'feeChargesPaid',
        'fee_charges_waived': 'feeChargesWaived',
        'fee_charges_written_off': 'feeChargesWrittenOff',
        'from_date': 'fromDate',
        'interest_due': 'interestDue',
        'interest_original_due': 'interestOriginalDue',
        'interest_outstanding': 'interestOutstanding',
        'interest_paid': 'interestPaid',
        'interest_waived': 'interestWaived',
        'interest_written_off': 'interestWrittenOff',
        'obligations_met_on_date': 'obligationsMetOnDate',
        'penalty_charges_due': 'penaltyChargesDue',
        'penalty_charges_outstanding': 'penaltyChargesOutstanding',
        'penalty_charges_paid': 'penaltyChargesPaid',
        'penalty_charges_waived': 'penaltyChargesWaived',
        'penalty_charges_written_off': 'penaltyChargesWrittenOff',
        'period': 'period',
        'principal_due': 'principalDue',
        'principal_loan_balance_outstanding': 'principalLoanBalanceOutstanding',
        'principal_original_due': 'principalOriginalDue',
        'principal_outstanding': 'principalOutstanding',
        'principal_paid': 'principalPaid',
        'principal_written_off': 'principalWrittenOff',
        'total_actual_cost_of_loan_for_period': 'totalActualCostOfLoanForPeriod',
        'total_credits': 'totalCredits',
        'total_due_for_period': 'totalDueForPeriod',
        'total_installment_amount_for_period': 'totalInstallmentAmountForPeriod',
        'total_original_due_for_period': 'totalOriginalDueForPeriod',
        'total_outstanding_for_period': 'totalOutstandingForPeriod',
        'total_paid_for_period': 'totalPaidForPeriod',
        'total_paid_in_advance_for_period': 'totalPaidInAdvanceForPeriod',
        'total_paid_late_for_period': 'totalPaidLateForPeriod',
        'total_waived_for_period': 'totalWaivedForPeriod',
        'total_written_off_for_period': 'totalWrittenOffForPeriod'
    }

    def __init__(self, complete=None, days_in_period=None, down_payment_period=None, due_date=None, fee_charges_due=None, fee_charges_outstanding=None, fee_charges_paid=None, fee_charges_waived=None, fee_charges_written_off=None, from_date=None, interest_due=None, interest_original_due=None, interest_outstanding=None, interest_paid=None, interest_waived=None, interest_written_off=None, obligations_met_on_date=None, penalty_charges_due=None, penalty_charges_outstanding=None, penalty_charges_paid=None, penalty_charges_waived=None, penalty_charges_written_off=None, period=None, principal_due=None, principal_loan_balance_outstanding=None, principal_original_due=None, principal_outstanding=None, principal_paid=None, principal_written_off=None, total_actual_cost_of_loan_for_period=None, total_credits=None, total_due_for_period=None, total_installment_amount_for_period=None, total_original_due_for_period=None, total_outstanding_for_period=None, total_paid_for_period=None, total_paid_in_advance_for_period=None, total_paid_late_for_period=None, total_waived_for_period=None, total_written_off_for_period=None):  # noqa: E501
        """GetLoansLoanIdRepaymentPeriod - a model defined in Swagger"""  # noqa: E501
        self._complete = None
        self._days_in_period = None
        self._down_payment_period = None
        self._due_date = None
        self._fee_charges_due = None
        self._fee_charges_outstanding = None
        self._fee_charges_paid = None
        self._fee_charges_waived = None
        self._fee_charges_written_off = None
        self._from_date = None
        self._interest_due = None
        self._interest_original_due = None
        self._interest_outstanding = None
        self._interest_paid = None
        self._interest_waived = None
        self._interest_written_off = None
        self._obligations_met_on_date = None
        self._penalty_charges_due = None
        self._penalty_charges_outstanding = None
        self._penalty_charges_paid = None
        self._penalty_charges_waived = None
        self._penalty_charges_written_off = None
        self._period = None
        self._principal_due = None
        self._principal_loan_balance_outstanding = None
        self._principal_original_due = None
        self._principal_outstanding = None
        self._principal_paid = None
        self._principal_written_off = None
        self._total_actual_cost_of_loan_for_period = None
        self._total_credits = None
        self._total_due_for_period = None
        self._total_installment_amount_for_period = None
        self._total_original_due_for_period = None
        self._total_outstanding_for_period = None
        self._total_paid_for_period = None
        self._total_paid_in_advance_for_period = None
        self._total_paid_late_for_period = None
        self._total_waived_for_period = None
        self._total_written_off_for_period = None
        self.discriminator = None
        if complete is not None:
            self.complete = complete
        if days_in_period is not None:
            self.days_in_period = days_in_period
        if down_payment_period is not None:
            self.down_payment_period = down_payment_period
        if due_date is not None:
            self.due_date = due_date
        if fee_charges_due is not None:
            self.fee_charges_due = fee_charges_due
        if fee_charges_outstanding is not None:
            self.fee_charges_outstanding = fee_charges_outstanding
        if fee_charges_paid is not None:
            self.fee_charges_paid = fee_charges_paid
        if fee_charges_waived is not None:
            self.fee_charges_waived = fee_charges_waived
        if fee_charges_written_off is not None:
            self.fee_charges_written_off = fee_charges_written_off
        if from_date is not None:
            self.from_date = from_date
        if interest_due is not None:
            self.interest_due = interest_due
        if interest_original_due is not None:
            self.interest_original_due = interest_original_due
        if interest_outstanding is not None:
            self.interest_outstanding = interest_outstanding
        if interest_paid is not None:
            self.interest_paid = interest_paid
        if interest_waived is not None:
            self.interest_waived = interest_waived
        if interest_written_off is not None:
            self.interest_written_off = interest_written_off
        if obligations_met_on_date is not None:
            self.obligations_met_on_date = obligations_met_on_date
        if penalty_charges_due is not None:
            self.penalty_charges_due = penalty_charges_due
        if penalty_charges_outstanding is not None:
            self.penalty_charges_outstanding = penalty_charges_outstanding
        if penalty_charges_paid is not None:
            self.penalty_charges_paid = penalty_charges_paid
        if penalty_charges_waived is not None:
            self.penalty_charges_waived = penalty_charges_waived
        if penalty_charges_written_off is not None:
            self.penalty_charges_written_off = penalty_charges_written_off
        if period is not None:
            self.period = period
        if principal_due is not None:
            self.principal_due = principal_due
        if principal_loan_balance_outstanding is not None:
            self.principal_loan_balance_outstanding = principal_loan_balance_outstanding
        if principal_original_due is not None:
            self.principal_original_due = principal_original_due
        if principal_outstanding is not None:
            self.principal_outstanding = principal_outstanding
        if principal_paid is not None:
            self.principal_paid = principal_paid
        if principal_written_off is not None:
            self.principal_written_off = principal_written_off
        if total_actual_cost_of_loan_for_period is not None:
            self.total_actual_cost_of_loan_for_period = total_actual_cost_of_loan_for_period
        if total_credits is not None:
            self.total_credits = total_credits
        if total_due_for_period is not None:
            self.total_due_for_period = total_due_for_period
        if total_installment_amount_for_period is not None:
            self.total_installment_amount_for_period = total_installment_amount_for_period
        if total_original_due_for_period is not None:
            self.total_original_due_for_period = total_original_due_for_period
        if total_outstanding_for_period is not None:
            self.total_outstanding_for_period = total_outstanding_for_period
        if total_paid_for_period is not None:
            self.total_paid_for_period = total_paid_for_period
        if total_paid_in_advance_for_period is not None:
            self.total_paid_in_advance_for_period = total_paid_in_advance_for_period
        if total_paid_late_for_period is not None:
            self.total_paid_late_for_period = total_paid_late_for_period
        if total_waived_for_period is not None:
            self.total_waived_for_period = total_waived_for_period
        if total_written_off_for_period is not None:
            self.total_written_off_for_period = total_written_off_for_period

    @property
    def complete(self):
        """Gets the complete of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The complete of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: bool
        """
        return self._complete

    @complete.setter
    def complete(self, complete):
        """Sets the complete of this GetLoansLoanIdRepaymentPeriod.


        :param complete: The complete of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: bool
        """

        self._complete = complete

    @property
    def days_in_period(self):
        """Gets the days_in_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The days_in_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: int
        """
        return self._days_in_period

    @days_in_period.setter
    def days_in_period(self, days_in_period):
        """Sets the days_in_period of this GetLoansLoanIdRepaymentPeriod.


        :param days_in_period: The days_in_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: int
        """

        self._days_in_period = days_in_period

    @property
    def down_payment_period(self):
        """Gets the down_payment_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The down_payment_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: bool
        """
        return self._down_payment_period

    @down_payment_period.setter
    def down_payment_period(self, down_payment_period):
        """Sets the down_payment_period of this GetLoansLoanIdRepaymentPeriod.


        :param down_payment_period: The down_payment_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: bool
        """

        self._down_payment_period = down_payment_period

    @property
    def due_date(self):
        """Gets the due_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The due_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: date
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this GetLoansLoanIdRepaymentPeriod.


        :param due_date: The due_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: date
        """

        self._due_date = due_date

    @property
    def fee_charges_due(self):
        """Gets the fee_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The fee_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_due

    @fee_charges_due.setter
    def fee_charges_due(self, fee_charges_due):
        """Sets the fee_charges_due of this GetLoansLoanIdRepaymentPeriod.


        :param fee_charges_due: The fee_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._fee_charges_due = fee_charges_due

    @property
    def fee_charges_outstanding(self):
        """Gets the fee_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The fee_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_outstanding

    @fee_charges_outstanding.setter
    def fee_charges_outstanding(self, fee_charges_outstanding):
        """Sets the fee_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.


        :param fee_charges_outstanding: The fee_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._fee_charges_outstanding = fee_charges_outstanding

    @property
    def fee_charges_paid(self):
        """Gets the fee_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The fee_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_paid

    @fee_charges_paid.setter
    def fee_charges_paid(self, fee_charges_paid):
        """Sets the fee_charges_paid of this GetLoansLoanIdRepaymentPeriod.


        :param fee_charges_paid: The fee_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._fee_charges_paid = fee_charges_paid

    @property
    def fee_charges_waived(self):
        """Gets the fee_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The fee_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_waived

    @fee_charges_waived.setter
    def fee_charges_waived(self, fee_charges_waived):
        """Sets the fee_charges_waived of this GetLoansLoanIdRepaymentPeriod.


        :param fee_charges_waived: The fee_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._fee_charges_waived = fee_charges_waived

    @property
    def fee_charges_written_off(self):
        """Gets the fee_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The fee_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._fee_charges_written_off

    @fee_charges_written_off.setter
    def fee_charges_written_off(self, fee_charges_written_off):
        """Sets the fee_charges_written_off of this GetLoansLoanIdRepaymentPeriod.


        :param fee_charges_written_off: The fee_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._fee_charges_written_off = fee_charges_written_off

    @property
    def from_date(self):
        """Gets the from_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The from_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: date
        """
        return self._from_date

    @from_date.setter
    def from_date(self, from_date):
        """Sets the from_date of this GetLoansLoanIdRepaymentPeriod.


        :param from_date: The from_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: date
        """

        self._from_date = from_date

    @property
    def interest_due(self):
        """Gets the interest_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_due

    @interest_due.setter
    def interest_due(self, interest_due):
        """Sets the interest_due of this GetLoansLoanIdRepaymentPeriod.


        :param interest_due: The interest_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_due = interest_due

    @property
    def interest_original_due(self):
        """Gets the interest_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_original_due

    @interest_original_due.setter
    def interest_original_due(self, interest_original_due):
        """Sets the interest_original_due of this GetLoansLoanIdRepaymentPeriod.


        :param interest_original_due: The interest_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_original_due = interest_original_due

    @property
    def interest_outstanding(self):
        """Gets the interest_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_outstanding

    @interest_outstanding.setter
    def interest_outstanding(self, interest_outstanding):
        """Sets the interest_outstanding of this GetLoansLoanIdRepaymentPeriod.


        :param interest_outstanding: The interest_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_outstanding = interest_outstanding

    @property
    def interest_paid(self):
        """Gets the interest_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_paid

    @interest_paid.setter
    def interest_paid(self, interest_paid):
        """Sets the interest_paid of this GetLoansLoanIdRepaymentPeriod.


        :param interest_paid: The interest_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_paid = interest_paid

    @property
    def interest_waived(self):
        """Gets the interest_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_waived

    @interest_waived.setter
    def interest_waived(self, interest_waived):
        """Sets the interest_waived of this GetLoansLoanIdRepaymentPeriod.


        :param interest_waived: The interest_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_waived = interest_waived

    @property
    def interest_written_off(self):
        """Gets the interest_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The interest_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._interest_written_off

    @interest_written_off.setter
    def interest_written_off(self, interest_written_off):
        """Sets the interest_written_off of this GetLoansLoanIdRepaymentPeriod.


        :param interest_written_off: The interest_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._interest_written_off = interest_written_off

    @property
    def obligations_met_on_date(self):
        """Gets the obligations_met_on_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The obligations_met_on_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: date
        """
        return self._obligations_met_on_date

    @obligations_met_on_date.setter
    def obligations_met_on_date(self, obligations_met_on_date):
        """Sets the obligations_met_on_date of this GetLoansLoanIdRepaymentPeriod.


        :param obligations_met_on_date: The obligations_met_on_date of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: date
        """

        self._obligations_met_on_date = obligations_met_on_date

    @property
    def penalty_charges_due(self):
        """Gets the penalty_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The penalty_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_due

    @penalty_charges_due.setter
    def penalty_charges_due(self, penalty_charges_due):
        """Sets the penalty_charges_due of this GetLoansLoanIdRepaymentPeriod.


        :param penalty_charges_due: The penalty_charges_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._penalty_charges_due = penalty_charges_due

    @property
    def penalty_charges_outstanding(self):
        """Gets the penalty_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The penalty_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_outstanding

    @penalty_charges_outstanding.setter
    def penalty_charges_outstanding(self, penalty_charges_outstanding):
        """Sets the penalty_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.


        :param penalty_charges_outstanding: The penalty_charges_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._penalty_charges_outstanding = penalty_charges_outstanding

    @property
    def penalty_charges_paid(self):
        """Gets the penalty_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The penalty_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_paid

    @penalty_charges_paid.setter
    def penalty_charges_paid(self, penalty_charges_paid):
        """Sets the penalty_charges_paid of this GetLoansLoanIdRepaymentPeriod.


        :param penalty_charges_paid: The penalty_charges_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._penalty_charges_paid = penalty_charges_paid

    @property
    def penalty_charges_waived(self):
        """Gets the penalty_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The penalty_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_waived

    @penalty_charges_waived.setter
    def penalty_charges_waived(self, penalty_charges_waived):
        """Sets the penalty_charges_waived of this GetLoansLoanIdRepaymentPeriod.


        :param penalty_charges_waived: The penalty_charges_waived of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._penalty_charges_waived = penalty_charges_waived

    @property
    def penalty_charges_written_off(self):
        """Gets the penalty_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The penalty_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._penalty_charges_written_off

    @penalty_charges_written_off.setter
    def penalty_charges_written_off(self, penalty_charges_written_off):
        """Sets the penalty_charges_written_off of this GetLoansLoanIdRepaymentPeriod.


        :param penalty_charges_written_off: The penalty_charges_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._penalty_charges_written_off = penalty_charges_written_off

    @property
    def period(self):
        """Gets the period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this GetLoansLoanIdRepaymentPeriod.


        :param period: The period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: int
        """

        self._period = period

    @property
    def principal_due(self):
        """Gets the principal_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_due

    @principal_due.setter
    def principal_due(self, principal_due):
        """Sets the principal_due of this GetLoansLoanIdRepaymentPeriod.


        :param principal_due: The principal_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_due = principal_due

    @property
    def principal_loan_balance_outstanding(self):
        """Gets the principal_loan_balance_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_loan_balance_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_loan_balance_outstanding

    @principal_loan_balance_outstanding.setter
    def principal_loan_balance_outstanding(self, principal_loan_balance_outstanding):
        """Sets the principal_loan_balance_outstanding of this GetLoansLoanIdRepaymentPeriod.


        :param principal_loan_balance_outstanding: The principal_loan_balance_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_loan_balance_outstanding = principal_loan_balance_outstanding

    @property
    def principal_original_due(self):
        """Gets the principal_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_original_due

    @principal_original_due.setter
    def principal_original_due(self, principal_original_due):
        """Sets the principal_original_due of this GetLoansLoanIdRepaymentPeriod.


        :param principal_original_due: The principal_original_due of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_original_due = principal_original_due

    @property
    def principal_outstanding(self):
        """Gets the principal_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_outstanding

    @principal_outstanding.setter
    def principal_outstanding(self, principal_outstanding):
        """Sets the principal_outstanding of this GetLoansLoanIdRepaymentPeriod.


        :param principal_outstanding: The principal_outstanding of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_outstanding = principal_outstanding

    @property
    def principal_paid(self):
        """Gets the principal_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_paid

    @principal_paid.setter
    def principal_paid(self, principal_paid):
        """Sets the principal_paid of this GetLoansLoanIdRepaymentPeriod.


        :param principal_paid: The principal_paid of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_paid = principal_paid

    @property
    def principal_written_off(self):
        """Gets the principal_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The principal_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._principal_written_off

    @principal_written_off.setter
    def principal_written_off(self, principal_written_off):
        """Sets the principal_written_off of this GetLoansLoanIdRepaymentPeriod.


        :param principal_written_off: The principal_written_off of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._principal_written_off = principal_written_off

    @property
    def total_actual_cost_of_loan_for_period(self):
        """Gets the total_actual_cost_of_loan_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_actual_cost_of_loan_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_actual_cost_of_loan_for_period

    @total_actual_cost_of_loan_for_period.setter
    def total_actual_cost_of_loan_for_period(self, total_actual_cost_of_loan_for_period):
        """Sets the total_actual_cost_of_loan_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_actual_cost_of_loan_for_period: The total_actual_cost_of_loan_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_actual_cost_of_loan_for_period = total_actual_cost_of_loan_for_period

    @property
    def total_credits(self):
        """Gets the total_credits of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_credits of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_credits

    @total_credits.setter
    def total_credits(self, total_credits):
        """Sets the total_credits of this GetLoansLoanIdRepaymentPeriod.


        :param total_credits: The total_credits of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_credits = total_credits

    @property
    def total_due_for_period(self):
        """Gets the total_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_due_for_period

    @total_due_for_period.setter
    def total_due_for_period(self, total_due_for_period):
        """Sets the total_due_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_due_for_period: The total_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_due_for_period = total_due_for_period

    @property
    def total_installment_amount_for_period(self):
        """Gets the total_installment_amount_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_installment_amount_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_installment_amount_for_period

    @total_installment_amount_for_period.setter
    def total_installment_amount_for_period(self, total_installment_amount_for_period):
        """Sets the total_installment_amount_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_installment_amount_for_period: The total_installment_amount_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_installment_amount_for_period = total_installment_amount_for_period

    @property
    def total_original_due_for_period(self):
        """Gets the total_original_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_original_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_original_due_for_period

    @total_original_due_for_period.setter
    def total_original_due_for_period(self, total_original_due_for_period):
        """Sets the total_original_due_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_original_due_for_period: The total_original_due_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_original_due_for_period = total_original_due_for_period

    @property
    def total_outstanding_for_period(self):
        """Gets the total_outstanding_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_outstanding_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_outstanding_for_period

    @total_outstanding_for_period.setter
    def total_outstanding_for_period(self, total_outstanding_for_period):
        """Sets the total_outstanding_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_outstanding_for_period: The total_outstanding_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_outstanding_for_period = total_outstanding_for_period

    @property
    def total_paid_for_period(self):
        """Gets the total_paid_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_paid_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_paid_for_period

    @total_paid_for_period.setter
    def total_paid_for_period(self, total_paid_for_period):
        """Sets the total_paid_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_paid_for_period: The total_paid_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_paid_for_period = total_paid_for_period

    @property
    def total_paid_in_advance_for_period(self):
        """Gets the total_paid_in_advance_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_paid_in_advance_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_paid_in_advance_for_period

    @total_paid_in_advance_for_period.setter
    def total_paid_in_advance_for_period(self, total_paid_in_advance_for_period):
        """Sets the total_paid_in_advance_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_paid_in_advance_for_period: The total_paid_in_advance_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_paid_in_advance_for_period = total_paid_in_advance_for_period

    @property
    def total_paid_late_for_period(self):
        """Gets the total_paid_late_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_paid_late_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_paid_late_for_period

    @total_paid_late_for_period.setter
    def total_paid_late_for_period(self, total_paid_late_for_period):
        """Sets the total_paid_late_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_paid_late_for_period: The total_paid_late_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_paid_late_for_period = total_paid_late_for_period

    @property
    def total_waived_for_period(self):
        """Gets the total_waived_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_waived_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_waived_for_period

    @total_waived_for_period.setter
    def total_waived_for_period(self, total_waived_for_period):
        """Sets the total_waived_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_waived_for_period: The total_waived_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_waived_for_period = total_waived_for_period

    @property
    def total_written_off_for_period(self):
        """Gets the total_written_off_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501


        :return: The total_written_off_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :rtype: float
        """
        return self._total_written_off_for_period

    @total_written_off_for_period.setter
    def total_written_off_for_period(self, total_written_off_for_period):
        """Sets the total_written_off_for_period of this GetLoansLoanIdRepaymentPeriod.


        :param total_written_off_for_period: The total_written_off_for_period of this GetLoansLoanIdRepaymentPeriod.  # noqa: E501
        :type: float
        """

        self._total_written_off_for_period = total_written_off_for_period

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetLoansLoanIdRepaymentPeriod, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetLoansLoanIdRepaymentPeriod):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
