# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SavingsAccountApplicationTimelineData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'activated_by_firstname': 'str',
        'activated_by_lastname': 'str',
        'activated_by_username': 'str',
        'activated_on_date': 'date',
        'approved_by_firstname': 'str',
        'approved_by_lastname': 'str',
        'approved_by_username': 'str',
        'approved_on_date': 'date',
        'closed_by_firstname': 'str',
        'closed_by_lastname': 'str',
        'closed_by_username': 'str',
        'closed_on_date': 'date',
        'rejected_by_firstname': 'str',
        'rejected_by_lastname': 'str',
        'rejected_by_username': 'str',
        'rejected_on_date': 'date',
        'submitted_by_firstname': 'str',
        'submitted_by_lastname': 'str',
        'submitted_by_username': 'str',
        'submitted_on_date': 'date',
        'withdrawn_by_firstname': 'str',
        'withdrawn_by_lastname': 'str',
        'withdrawn_by_username': 'str',
        'withdrawn_on_date': 'date'
    }

    attribute_map = {
        'activated_by_firstname': 'activatedByFirstname',
        'activated_by_lastname': 'activatedByLastname',
        'activated_by_username': 'activatedByUsername',
        'activated_on_date': 'activatedOnDate',
        'approved_by_firstname': 'approvedByFirstname',
        'approved_by_lastname': 'approvedByLastname',
        'approved_by_username': 'approvedByUsername',
        'approved_on_date': 'approvedOnDate',
        'closed_by_firstname': 'closedByFirstname',
        'closed_by_lastname': 'closedByLastname',
        'closed_by_username': 'closedByUsername',
        'closed_on_date': 'closedOnDate',
        'rejected_by_firstname': 'rejectedByFirstname',
        'rejected_by_lastname': 'rejectedByLastname',
        'rejected_by_username': 'rejectedByUsername',
        'rejected_on_date': 'rejectedOnDate',
        'submitted_by_firstname': 'submittedByFirstname',
        'submitted_by_lastname': 'submittedByLastname',
        'submitted_by_username': 'submittedByUsername',
        'submitted_on_date': 'submittedOnDate',
        'withdrawn_by_firstname': 'withdrawnByFirstname',
        'withdrawn_by_lastname': 'withdrawnByLastname',
        'withdrawn_by_username': 'withdrawnByUsername',
        'withdrawn_on_date': 'withdrawnOnDate'
    }

    def __init__(self, activated_by_firstname=None, activated_by_lastname=None, activated_by_username=None, activated_on_date=None, approved_by_firstname=None, approved_by_lastname=None, approved_by_username=None, approved_on_date=None, closed_by_firstname=None, closed_by_lastname=None, closed_by_username=None, closed_on_date=None, rejected_by_firstname=None, rejected_by_lastname=None, rejected_by_username=None, rejected_on_date=None, submitted_by_firstname=None, submitted_by_lastname=None, submitted_by_username=None, submitted_on_date=None, withdrawn_by_firstname=None, withdrawn_by_lastname=None, withdrawn_by_username=None, withdrawn_on_date=None):  # noqa: E501
        """SavingsAccountApplicationTimelineData - a model defined in Swagger"""  # noqa: E501
        self._activated_by_firstname = None
        self._activated_by_lastname = None
        self._activated_by_username = None
        self._activated_on_date = None
        self._approved_by_firstname = None
        self._approved_by_lastname = None
        self._approved_by_username = None
        self._approved_on_date = None
        self._closed_by_firstname = None
        self._closed_by_lastname = None
        self._closed_by_username = None
        self._closed_on_date = None
        self._rejected_by_firstname = None
        self._rejected_by_lastname = None
        self._rejected_by_username = None
        self._rejected_on_date = None
        self._submitted_by_firstname = None
        self._submitted_by_lastname = None
        self._submitted_by_username = None
        self._submitted_on_date = None
        self._withdrawn_by_firstname = None
        self._withdrawn_by_lastname = None
        self._withdrawn_by_username = None
        self._withdrawn_on_date = None
        self.discriminator = None
        if activated_by_firstname is not None:
            self.activated_by_firstname = activated_by_firstname
        if activated_by_lastname is not None:
            self.activated_by_lastname = activated_by_lastname
        if activated_by_username is not None:
            self.activated_by_username = activated_by_username
        if activated_on_date is not None:
            self.activated_on_date = activated_on_date
        if approved_by_firstname is not None:
            self.approved_by_firstname = approved_by_firstname
        if approved_by_lastname is not None:
            self.approved_by_lastname = approved_by_lastname
        if approved_by_username is not None:
            self.approved_by_username = approved_by_username
        if approved_on_date is not None:
            self.approved_on_date = approved_on_date
        if closed_by_firstname is not None:
            self.closed_by_firstname = closed_by_firstname
        if closed_by_lastname is not None:
            self.closed_by_lastname = closed_by_lastname
        if closed_by_username is not None:
            self.closed_by_username = closed_by_username
        if closed_on_date is not None:
            self.closed_on_date = closed_on_date
        if rejected_by_firstname is not None:
            self.rejected_by_firstname = rejected_by_firstname
        if rejected_by_lastname is not None:
            self.rejected_by_lastname = rejected_by_lastname
        if rejected_by_username is not None:
            self.rejected_by_username = rejected_by_username
        if rejected_on_date is not None:
            self.rejected_on_date = rejected_on_date
        if submitted_by_firstname is not None:
            self.submitted_by_firstname = submitted_by_firstname
        if submitted_by_lastname is not None:
            self.submitted_by_lastname = submitted_by_lastname
        if submitted_by_username is not None:
            self.submitted_by_username = submitted_by_username
        if submitted_on_date is not None:
            self.submitted_on_date = submitted_on_date
        if withdrawn_by_firstname is not None:
            self.withdrawn_by_firstname = withdrawn_by_firstname
        if withdrawn_by_lastname is not None:
            self.withdrawn_by_lastname = withdrawn_by_lastname
        if withdrawn_by_username is not None:
            self.withdrawn_by_username = withdrawn_by_username
        if withdrawn_on_date is not None:
            self.withdrawn_on_date = withdrawn_on_date

    @property
    def activated_by_firstname(self):
        """Gets the activated_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The activated_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._activated_by_firstname

    @activated_by_firstname.setter
    def activated_by_firstname(self, activated_by_firstname):
        """Sets the activated_by_firstname of this SavingsAccountApplicationTimelineData.


        :param activated_by_firstname: The activated_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._activated_by_firstname = activated_by_firstname

    @property
    def activated_by_lastname(self):
        """Gets the activated_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The activated_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._activated_by_lastname

    @activated_by_lastname.setter
    def activated_by_lastname(self, activated_by_lastname):
        """Sets the activated_by_lastname of this SavingsAccountApplicationTimelineData.


        :param activated_by_lastname: The activated_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._activated_by_lastname = activated_by_lastname

    @property
    def activated_by_username(self):
        """Gets the activated_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The activated_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._activated_by_username

    @activated_by_username.setter
    def activated_by_username(self, activated_by_username):
        """Sets the activated_by_username of this SavingsAccountApplicationTimelineData.


        :param activated_by_username: The activated_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._activated_by_username = activated_by_username

    @property
    def activated_on_date(self):
        """Gets the activated_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The activated_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._activated_on_date

    @activated_on_date.setter
    def activated_on_date(self, activated_on_date):
        """Sets the activated_on_date of this SavingsAccountApplicationTimelineData.


        :param activated_on_date: The activated_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._activated_on_date = activated_on_date

    @property
    def approved_by_firstname(self):
        """Gets the approved_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The approved_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._approved_by_firstname

    @approved_by_firstname.setter
    def approved_by_firstname(self, approved_by_firstname):
        """Sets the approved_by_firstname of this SavingsAccountApplicationTimelineData.


        :param approved_by_firstname: The approved_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._approved_by_firstname = approved_by_firstname

    @property
    def approved_by_lastname(self):
        """Gets the approved_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The approved_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._approved_by_lastname

    @approved_by_lastname.setter
    def approved_by_lastname(self, approved_by_lastname):
        """Sets the approved_by_lastname of this SavingsAccountApplicationTimelineData.


        :param approved_by_lastname: The approved_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._approved_by_lastname = approved_by_lastname

    @property
    def approved_by_username(self):
        """Gets the approved_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The approved_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._approved_by_username

    @approved_by_username.setter
    def approved_by_username(self, approved_by_username):
        """Sets the approved_by_username of this SavingsAccountApplicationTimelineData.


        :param approved_by_username: The approved_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._approved_by_username = approved_by_username

    @property
    def approved_on_date(self):
        """Gets the approved_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The approved_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._approved_on_date

    @approved_on_date.setter
    def approved_on_date(self, approved_on_date):
        """Sets the approved_on_date of this SavingsAccountApplicationTimelineData.


        :param approved_on_date: The approved_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._approved_on_date = approved_on_date

    @property
    def closed_by_firstname(self):
        """Gets the closed_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The closed_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._closed_by_firstname

    @closed_by_firstname.setter
    def closed_by_firstname(self, closed_by_firstname):
        """Sets the closed_by_firstname of this SavingsAccountApplicationTimelineData.


        :param closed_by_firstname: The closed_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._closed_by_firstname = closed_by_firstname

    @property
    def closed_by_lastname(self):
        """Gets the closed_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The closed_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._closed_by_lastname

    @closed_by_lastname.setter
    def closed_by_lastname(self, closed_by_lastname):
        """Sets the closed_by_lastname of this SavingsAccountApplicationTimelineData.


        :param closed_by_lastname: The closed_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._closed_by_lastname = closed_by_lastname

    @property
    def closed_by_username(self):
        """Gets the closed_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The closed_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._closed_by_username

    @closed_by_username.setter
    def closed_by_username(self, closed_by_username):
        """Sets the closed_by_username of this SavingsAccountApplicationTimelineData.


        :param closed_by_username: The closed_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._closed_by_username = closed_by_username

    @property
    def closed_on_date(self):
        """Gets the closed_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The closed_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._closed_on_date

    @closed_on_date.setter
    def closed_on_date(self, closed_on_date):
        """Sets the closed_on_date of this SavingsAccountApplicationTimelineData.


        :param closed_on_date: The closed_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._closed_on_date = closed_on_date

    @property
    def rejected_by_firstname(self):
        """Gets the rejected_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The rejected_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._rejected_by_firstname

    @rejected_by_firstname.setter
    def rejected_by_firstname(self, rejected_by_firstname):
        """Sets the rejected_by_firstname of this SavingsAccountApplicationTimelineData.


        :param rejected_by_firstname: The rejected_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._rejected_by_firstname = rejected_by_firstname

    @property
    def rejected_by_lastname(self):
        """Gets the rejected_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The rejected_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._rejected_by_lastname

    @rejected_by_lastname.setter
    def rejected_by_lastname(self, rejected_by_lastname):
        """Sets the rejected_by_lastname of this SavingsAccountApplicationTimelineData.


        :param rejected_by_lastname: The rejected_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._rejected_by_lastname = rejected_by_lastname

    @property
    def rejected_by_username(self):
        """Gets the rejected_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The rejected_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._rejected_by_username

    @rejected_by_username.setter
    def rejected_by_username(self, rejected_by_username):
        """Sets the rejected_by_username of this SavingsAccountApplicationTimelineData.


        :param rejected_by_username: The rejected_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._rejected_by_username = rejected_by_username

    @property
    def rejected_on_date(self):
        """Gets the rejected_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The rejected_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._rejected_on_date

    @rejected_on_date.setter
    def rejected_on_date(self, rejected_on_date):
        """Sets the rejected_on_date of this SavingsAccountApplicationTimelineData.


        :param rejected_on_date: The rejected_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._rejected_on_date = rejected_on_date

    @property
    def submitted_by_firstname(self):
        """Gets the submitted_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The submitted_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._submitted_by_firstname

    @submitted_by_firstname.setter
    def submitted_by_firstname(self, submitted_by_firstname):
        """Sets the submitted_by_firstname of this SavingsAccountApplicationTimelineData.


        :param submitted_by_firstname: The submitted_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._submitted_by_firstname = submitted_by_firstname

    @property
    def submitted_by_lastname(self):
        """Gets the submitted_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The submitted_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._submitted_by_lastname

    @submitted_by_lastname.setter
    def submitted_by_lastname(self, submitted_by_lastname):
        """Sets the submitted_by_lastname of this SavingsAccountApplicationTimelineData.


        :param submitted_by_lastname: The submitted_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._submitted_by_lastname = submitted_by_lastname

    @property
    def submitted_by_username(self):
        """Gets the submitted_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The submitted_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._submitted_by_username

    @submitted_by_username.setter
    def submitted_by_username(self, submitted_by_username):
        """Sets the submitted_by_username of this SavingsAccountApplicationTimelineData.


        :param submitted_by_username: The submitted_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._submitted_by_username = submitted_by_username

    @property
    def submitted_on_date(self):
        """Gets the submitted_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The submitted_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._submitted_on_date

    @submitted_on_date.setter
    def submitted_on_date(self, submitted_on_date):
        """Sets the submitted_on_date of this SavingsAccountApplicationTimelineData.


        :param submitted_on_date: The submitted_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._submitted_on_date = submitted_on_date

    @property
    def withdrawn_by_firstname(self):
        """Gets the withdrawn_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The withdrawn_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._withdrawn_by_firstname

    @withdrawn_by_firstname.setter
    def withdrawn_by_firstname(self, withdrawn_by_firstname):
        """Sets the withdrawn_by_firstname of this SavingsAccountApplicationTimelineData.


        :param withdrawn_by_firstname: The withdrawn_by_firstname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._withdrawn_by_firstname = withdrawn_by_firstname

    @property
    def withdrawn_by_lastname(self):
        """Gets the withdrawn_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The withdrawn_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._withdrawn_by_lastname

    @withdrawn_by_lastname.setter
    def withdrawn_by_lastname(self, withdrawn_by_lastname):
        """Sets the withdrawn_by_lastname of this SavingsAccountApplicationTimelineData.


        :param withdrawn_by_lastname: The withdrawn_by_lastname of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._withdrawn_by_lastname = withdrawn_by_lastname

    @property
    def withdrawn_by_username(self):
        """Gets the withdrawn_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The withdrawn_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: str
        """
        return self._withdrawn_by_username

    @withdrawn_by_username.setter
    def withdrawn_by_username(self, withdrawn_by_username):
        """Sets the withdrawn_by_username of this SavingsAccountApplicationTimelineData.


        :param withdrawn_by_username: The withdrawn_by_username of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: str
        """

        self._withdrawn_by_username = withdrawn_by_username

    @property
    def withdrawn_on_date(self):
        """Gets the withdrawn_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501


        :return: The withdrawn_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :rtype: date
        """
        return self._withdrawn_on_date

    @withdrawn_on_date.setter
    def withdrawn_on_date(self, withdrawn_on_date):
        """Sets the withdrawn_on_date of this SavingsAccountApplicationTimelineData.


        :param withdrawn_on_date: The withdrawn_on_date of this SavingsAccountApplicationTimelineData.  # noqa: E501
        :type: date
        """

        self._withdrawn_on_date = withdrawn_on_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SavingsAccountApplicationTimelineData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SavingsAccountApplicationTimelineData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
