# coding: utf-8

"""
    Apache Fineract REST API

    Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.  # noqa: E501

    OpenAPI spec version: 1.11.0-SNAPSHOT
    Contact: dev@fineract.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PostCreateRescheduleLoansRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'adjusted_due_date': 'str',
        'date_format': 'str',
        'extra_terms': 'int',
        'grace_on_interest': 'int',
        'grace_on_principal': 'int',
        'loan_id': 'int',
        'locale': 'str',
        'new_interest_rate': 'float',
        'reschedule_from_date': 'str',
        'reschedule_reason_comment': 'str',
        'reschedule_reason_id': 'int',
        'submitted_on_date': 'str'
    }

    attribute_map = {
        'adjusted_due_date': 'adjustedDueDate',
        'date_format': 'dateFormat',
        'extra_terms': 'extraTerms',
        'grace_on_interest': 'graceOnInterest',
        'grace_on_principal': 'graceOnPrincipal',
        'loan_id': 'loanId',
        'locale': 'locale',
        'new_interest_rate': 'newInterestRate',
        'reschedule_from_date': 'rescheduleFromDate',
        'reschedule_reason_comment': 'rescheduleReasonComment',
        'reschedule_reason_id': 'rescheduleReasonId',
        'submitted_on_date': 'submittedOnDate'
    }

    def __init__(self, adjusted_due_date=None, date_format=None, extra_terms=None, grace_on_interest=None, grace_on_principal=None, loan_id=None, locale=None, new_interest_rate=None, reschedule_from_date=None, reschedule_reason_comment=None, reschedule_reason_id=None, submitted_on_date=None):  # noqa: E501
        """PostCreateRescheduleLoansRequest - a model defined in Swagger"""  # noqa: E501
        self._adjusted_due_date = None
        self._date_format = None
        self._extra_terms = None
        self._grace_on_interest = None
        self._grace_on_principal = None
        self._loan_id = None
        self._locale = None
        self._new_interest_rate = None
        self._reschedule_from_date = None
        self._reschedule_reason_comment = None
        self._reschedule_reason_id = None
        self._submitted_on_date = None
        self.discriminator = None
        if adjusted_due_date is not None:
            self.adjusted_due_date = adjusted_due_date
        if date_format is not None:
            self.date_format = date_format
        if extra_terms is not None:
            self.extra_terms = extra_terms
        if grace_on_interest is not None:
            self.grace_on_interest = grace_on_interest
        if grace_on_principal is not None:
            self.grace_on_principal = grace_on_principal
        if loan_id is not None:
            self.loan_id = loan_id
        if locale is not None:
            self.locale = locale
        if new_interest_rate is not None:
            self.new_interest_rate = new_interest_rate
        if reschedule_from_date is not None:
            self.reschedule_from_date = reschedule_from_date
        if reschedule_reason_comment is not None:
            self.reschedule_reason_comment = reschedule_reason_comment
        if reschedule_reason_id is not None:
            self.reschedule_reason_id = reschedule_reason_id
        if submitted_on_date is not None:
            self.submitted_on_date = submitted_on_date

    @property
    def adjusted_due_date(self):
        """Gets the adjusted_due_date of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The adjusted_due_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._adjusted_due_date

    @adjusted_due_date.setter
    def adjusted_due_date(self, adjusted_due_date):
        """Sets the adjusted_due_date of this PostCreateRescheduleLoansRequest.


        :param adjusted_due_date: The adjusted_due_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._adjusted_due_date = adjusted_due_date

    @property
    def date_format(self):
        """Gets the date_format of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The date_format of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this PostCreateRescheduleLoansRequest.


        :param date_format: The date_format of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._date_format = date_format

    @property
    def extra_terms(self):
        """Gets the extra_terms of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The extra_terms of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: int
        """
        return self._extra_terms

    @extra_terms.setter
    def extra_terms(self, extra_terms):
        """Sets the extra_terms of this PostCreateRescheduleLoansRequest.


        :param extra_terms: The extra_terms of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: int
        """

        self._extra_terms = extra_terms

    @property
    def grace_on_interest(self):
        """Gets the grace_on_interest of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The grace_on_interest of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: int
        """
        return self._grace_on_interest

    @grace_on_interest.setter
    def grace_on_interest(self, grace_on_interest):
        """Sets the grace_on_interest of this PostCreateRescheduleLoansRequest.


        :param grace_on_interest: The grace_on_interest of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: int
        """

        self._grace_on_interest = grace_on_interest

    @property
    def grace_on_principal(self):
        """Gets the grace_on_principal of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The grace_on_principal of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: int
        """
        return self._grace_on_principal

    @grace_on_principal.setter
    def grace_on_principal(self, grace_on_principal):
        """Sets the grace_on_principal of this PostCreateRescheduleLoansRequest.


        :param grace_on_principal: The grace_on_principal of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: int
        """

        self._grace_on_principal = grace_on_principal

    @property
    def loan_id(self):
        """Gets the loan_id of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The loan_id of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: int
        """
        return self._loan_id

    @loan_id.setter
    def loan_id(self, loan_id):
        """Sets the loan_id of this PostCreateRescheduleLoansRequest.


        :param loan_id: The loan_id of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: int
        """

        self._loan_id = loan_id

    @property
    def locale(self):
        """Gets the locale of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The locale of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this PostCreateRescheduleLoansRequest.


        :param locale: The locale of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def new_interest_rate(self):
        """Gets the new_interest_rate of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The new_interest_rate of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: float
        """
        return self._new_interest_rate

    @new_interest_rate.setter
    def new_interest_rate(self, new_interest_rate):
        """Sets the new_interest_rate of this PostCreateRescheduleLoansRequest.


        :param new_interest_rate: The new_interest_rate of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: float
        """

        self._new_interest_rate = new_interest_rate

    @property
    def reschedule_from_date(self):
        """Gets the reschedule_from_date of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The reschedule_from_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._reschedule_from_date

    @reschedule_from_date.setter
    def reschedule_from_date(self, reschedule_from_date):
        """Sets the reschedule_from_date of this PostCreateRescheduleLoansRequest.


        :param reschedule_from_date: The reschedule_from_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._reschedule_from_date = reschedule_from_date

    @property
    def reschedule_reason_comment(self):
        """Gets the reschedule_reason_comment of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The reschedule_reason_comment of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._reschedule_reason_comment

    @reschedule_reason_comment.setter
    def reschedule_reason_comment(self, reschedule_reason_comment):
        """Sets the reschedule_reason_comment of this PostCreateRescheduleLoansRequest.


        :param reschedule_reason_comment: The reschedule_reason_comment of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._reschedule_reason_comment = reschedule_reason_comment

    @property
    def reschedule_reason_id(self):
        """Gets the reschedule_reason_id of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The reschedule_reason_id of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: int
        """
        return self._reschedule_reason_id

    @reschedule_reason_id.setter
    def reschedule_reason_id(self, reschedule_reason_id):
        """Sets the reschedule_reason_id of this PostCreateRescheduleLoansRequest.


        :param reschedule_reason_id: The reschedule_reason_id of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: int
        """

        self._reschedule_reason_id = reschedule_reason_id

    @property
    def submitted_on_date(self):
        """Gets the submitted_on_date of this PostCreateRescheduleLoansRequest.  # noqa: E501


        :return: The submitted_on_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :rtype: str
        """
        return self._submitted_on_date

    @submitted_on_date.setter
    def submitted_on_date(self, submitted_on_date):
        """Sets the submitted_on_date of this PostCreateRescheduleLoansRequest.


        :param submitted_on_date: The submitted_on_date of this PostCreateRescheduleLoansRequest.  # noqa: E501
        :type: str
        """

        self._submitted_on_date = submitted_on_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostCreateRescheduleLoansRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostCreateRescheduleLoansRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
